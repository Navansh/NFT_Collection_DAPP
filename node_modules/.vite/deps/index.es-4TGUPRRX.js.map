{
  "version": 3,
  "sources": ["../../@stablelib/int/int.ts", "../../@stablelib/binary/binary.ts", "../../@stablelib/wipe/wipe.ts", "../../@stablelib/chacha/chacha.ts", "../../@stablelib/constant-time/constant-time.ts", "../../@stablelib/poly1305/poly1305.ts", "../../@stablelib/chacha20poly1305/chacha20poly1305.ts", "../../@stablelib/hash/hash.ts", "../../@stablelib/hmac/hmac.ts", "../../@stablelib/hkdf/hkdf.ts", "../../@stablelib/random/source/browser.ts", "browser-external:crypto", "../../@stablelib/random/source/node.ts", "../../@stablelib/random/source/system.ts", "../../@stablelib/random/random.ts", "../../@stablelib/sha256/sha256.ts", "../../@stablelib/x25519/x25519.ts", "../../@walletconnect/time/src/utils/delay.ts", "../../@walletconnect/time/src/constants/misc.ts", "../../@walletconnect/time/src/constants/time.ts", "../../@walletconnect/time/src/constants/index.ts", "../../@walletconnect/time/src/utils/convert.ts", "../../@walletconnect/time/src/utils/index.ts", "../../@walletconnect/time/src/watch.ts", "../../@walletconnect/time/src/types/watch.ts", "../../@walletconnect/time/src/types/index.ts", "../../@walletconnect/time/src/index.ts", "../../@walletconnect/utils/node_modules/query-string/index.js", "../../quick-format-unescaped/index.js", "../../pino/browser.js", "../../safe-json-utils/src/index.ts", "../../@walletconnect/keyvaluestorage/src/browser/lib/localStorage.js", "../../@walletconnect/keyvaluestorage/src/shared/types.ts", "../../@walletconnect/keyvaluestorage/src/shared/utils.ts", "../../@walletconnect/keyvaluestorage/src/shared/index.ts", "../../@walletconnect/keyvaluestorage/src/browser/index.ts", "../../@walletconnect/events/src/events.ts", "../../@walletconnect/events/src/index.ts", "../../@walletconnect/heartbeat/src/types/heartbeat.ts", "../../@walletconnect/heartbeat/src/types/index.ts", "../../@walletconnect/heartbeat/src/constants/heartbeat.ts", "../../@walletconnect/heartbeat/src/constants/index.ts", "../../@walletconnect/heartbeat/src/heartbeat.ts", "../../@walletconnect/heartbeat/src/index.ts", "../../@walletconnect/logger/src/constants.ts", "../../@walletconnect/logger/src/utils.ts", "../../@walletconnect/logger/src/index.ts", "../../@stablelib/sha512/sha512.ts", "../../@stablelib/ed25519/ed25519.ts", "../../lodash.isequal/index.js", "../../uint8arrays/esm/src/index.js", "../../uint8arrays/esm/src/to-string.js", "../../uint8arrays/esm/src/xor.js", "../../@walletconnect/relay-api/src/jsonrpc.ts", "../../@walletconnect/relay-auth/src/api.ts", "../../@walletconnect/relay-auth/src/constants.ts", "../../@walletconnect/relay-auth/src/utils.ts", "../../@walletconnect/jsonrpc-ws-connection/src/ws.ts", "../../@walletconnect/jsonrpc-ws-connection/src/index.ts", "../../@walletconnect/ethereum-provider/src/constants/values.ts", "../../@walletconnect/ethereum-provider/src/constants/rpc.ts", "../../@walletconnect/ethereum-provider/src/EthereumProvider.ts", "../../@walletconnect/ethereum-provider/src/index.ts", "../../node_modules/proxy-compare/dist/index.modern.js", "../../node_modules/valtio/esm/vanilla.mjs", "../../node_modules/base64-js/index.js", "../../node_modules/ieee754/index.js", "../../node_modules/@web3modal/core/node_modules/buffer/index.js", "../../node_modules/@web3modal/core/dist/index.js", "../../node_modules/@web3modal/standalone/dist/index.js", "../../node_modules/@lit/reactive-element/css-tag.js", "../../node_modules/@lit/reactive-element/reactive-element.js", "../../node_modules/lit-html/lit-html.js", "../../node_modules/lit-element/lit-element.js", "../../node_modules/@lit/reactive-element/decorators/custom-element.js", "../../node_modules/@lit/reactive-element/decorators/property.js", "../../node_modules/@lit/reactive-element/decorators/state.js", "../../node_modules/@lit/reactive-element/decorators/query-assigned-elements.js", "../../node_modules/lit-html/directive.js", "../../node_modules/lit-html/directives/class-map.js", "../../node_modules/@motionone/utils/dist/array.es.js", "../../node_modules/@motionone/utils/dist/clamp.es.js", "../../node_modules/@motionone/utils/dist/defaults.es.js", "../../node_modules/@motionone/utils/dist/is-number.es.js", "../../node_modules/@motionone/utils/dist/is-easing-list.es.js", "../../node_modules/@motionone/utils/dist/wrap.es.js", "../../node_modules/@motionone/utils/dist/easing.es.js", "../../node_modules/@motionone/utils/dist/mix.es.js", "../../node_modules/@motionone/utils/dist/noop.es.js", "../../node_modules/@motionone/utils/dist/progress.es.js", "../../node_modules/@motionone/utils/dist/offset.es.js", "../../node_modules/@motionone/utils/dist/interpolate.es.js", "../../node_modules/@motionone/utils/dist/is-cubic-bezier.es.js", "../../node_modules/@motionone/utils/dist/is-easing-generator.es.js", "../../node_modules/@motionone/utils/dist/is-function.es.js", "../../node_modules/@motionone/utils/dist/is-string.es.js", "../../node_modules/@motionone/utils/dist/time.es.js", "../../node_modules/@motionone/utils/dist/velocity.es.js", "../../node_modules/@motionone/easing/dist/cubic-bezier.es.js", "../../node_modules/@motionone/easing/dist/steps.es.js", "../../node_modules/@motionone/animation/dist/utils/easing.es.js", "../../node_modules/@motionone/animation/dist/Animation.es.js", "../../node_modules/hey-listen/dist/hey-listen.es.js", "../../node_modules/@motionone/types/dist/MotionValue.es.js", "../../node_modules/@motionone/dom/dist/animate/data.es.js", "../../node_modules/@motionone/dom/dist/animate/utils/transforms.es.js", "../../node_modules/@motionone/dom/dist/animate/utils/css-var.es.js", "../../node_modules/@motionone/dom/dist/animate/utils/feature-detection.es.js", "../../node_modules/@motionone/dom/dist/animate/utils/easing.es.js", "../../node_modules/@motionone/dom/dist/animate/utils/keyframes.es.js", "../../node_modules/@motionone/dom/dist/animate/utils/get-style-name.es.js", "../../node_modules/@motionone/dom/dist/animate/style.es.js", "../../node_modules/@motionone/dom/dist/animate/utils/stop-animation.es.js", "../../node_modules/@motionone/dom/dist/animate/utils/get-unit.es.js", "../../node_modules/@motionone/dom/dist/animate/animate-style.es.js", "../../node_modules/@motionone/dom/dist/animate/utils/options.es.js", "../../node_modules/@motionone/dom/dist/utils/resolve-elements.es.js", "../../node_modules/@motionone/dom/dist/animate/utils/controls.es.js", "../../node_modules/@motionone/dom/dist/utils/stagger.es.js", "../../node_modules/@motionone/dom/dist/animate/create-animate.es.js", "../../node_modules/@motionone/dom/dist/animate/index.es.js", "../../node_modules/tslib/tslib.es6.js", "../../node_modules/@motionone/generators/dist/utils/velocity.es.js", "../../node_modules/@motionone/generators/dist/spring/defaults.es.js", "../../node_modules/@motionone/generators/dist/spring/utils.es.js", "../../node_modules/@motionone/generators/dist/utils/has-reached-target.es.js", "../../node_modules/@motionone/generators/dist/spring/index.es.js", "../../node_modules/@motionone/generators/dist/utils/pregenerate-keyframes.es.js", "../../node_modules/@motionone/dom/dist/easing/create-generator-easing.es.js", "../../node_modules/@motionone/dom/dist/easing/spring/index.es.js", "../../node_modules/@motionone/dom/dist/gestures/in-view.es.js", "../../node_modules/@motionone/dom/dist/state/utils/events.es.js", "../../node_modules/@motionone/dom/dist/state/gestures/in-view.es.js", "../../node_modules/@motionone/dom/dist/state/gestures/hover.es.js", "../../node_modules/@motionone/dom/dist/state/gestures/press.es.js", "../../node_modules/@motionone/dom/dist/state/index.es.js", "../../node_modules/motion/dist/animate.es.js", "../../node_modules/lit-html/directives/if-defined.js", "../../node_modules/qrcode/lib/can-promise.js", "../../node_modules/qrcode/lib/core/utils.js", "../../node_modules/qrcode/lib/core/error-correction-level.js", "../../node_modules/qrcode/lib/core/bit-buffer.js", "../../node_modules/qrcode/lib/core/bit-matrix.js", "../../node_modules/qrcode/lib/core/alignment-pattern.js", "../../node_modules/qrcode/lib/core/finder-pattern.js", "../../node_modules/qrcode/lib/core/mask-pattern.js", "../../node_modules/qrcode/lib/core/error-correction-code.js", "../../node_modules/qrcode/lib/core/galois-field.js", "../../node_modules/qrcode/lib/core/polynomial.js", "../../node_modules/qrcode/lib/core/reed-solomon-encoder.js", "../../node_modules/qrcode/lib/core/version-check.js", "../../node_modules/qrcode/lib/core/regex.js", "../../node_modules/qrcode/lib/core/mode.js", "../../node_modules/qrcode/lib/core/version.js", "../../node_modules/qrcode/lib/core/format-info.js", "../../node_modules/qrcode/lib/core/numeric-data.js", "../../node_modules/qrcode/lib/core/alphanumeric-data.js", "../../node_modules/encode-utf8/index.js", "../../node_modules/qrcode/lib/core/byte-data.js", "../../node_modules/qrcode/lib/core/kanji-data.js", "../../node_modules/dijkstrajs/dijkstra.js", "../../node_modules/qrcode/lib/core/segments.js", "../../node_modules/qrcode/lib/core/qrcode.js", "../../node_modules/qrcode/lib/renderer/utils.js", "../../node_modules/qrcode/lib/renderer/canvas.js", "../../node_modules/qrcode/lib/renderer/svg-tag.js", "../../node_modules/qrcode/lib/browser.js", "../../node_modules/@web3modal/ui/dist/index.js"],
  "sourcesContent": ["// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package int provides helper functions for integerss.\n */\n\n// Shim using 16-bit pieces.\nfunction imulShim(a: number, b: number): number {\n    const ah = (a >>> 16) & 0xffff, al = a & 0xffff;\n    const bh = (b >>> 16) & 0xffff, bl = b & 0xffff;\n    return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0);\n}\n\n/** 32-bit integer multiplication.  */\n// Use system Math.imul if available, otherwise use our shim.\nexport const mul = (Math as { imul?(a: number, b: number): number }).imul || imulShim;\n\n/** 32-bit integer addition.  */\nexport function add(a: number, b: number): number {\n    return (a + b) | 0;\n}\n\n/**  32-bit integer subtraction.  */\nexport function sub(a: number, b: number): number {\n    return (a - b) | 0;\n}\n\n/** 32-bit integer left rotation */\nexport function rotl(x: number, n: number): number {\n    return x << n | x >>> (32 - n);\n}\n\n/** 32-bit integer left rotation */\nexport function rotr(x: number, n: number): number {\n    return x << (32 - n) | x >>> n;\n}\n\nfunction isIntegerShim(n: number): boolean {\n    return typeof n === \"number\" && isFinite(n) && Math.floor(n) === n;\n}\n\n/**\n * Returns true if the argument is an integer number.\n *\n * In ES2015, Number.isInteger.\n */\nexport const isInteger = (Number as { isInteger?(n: number): boolean }).isInteger || isIntegerShim;\n\n/**\n *  Math.pow(2, 53) - 1\n *\n *  In ES2015 Number.MAX_SAFE_INTEGER.\n */\nexport const MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Returns true if the argument is a safe integer number\n * (-MIN_SAFE_INTEGER < number <= MAX_SAFE_INTEGER)\n *\n * In ES2015, Number.isSafeInteger.\n */\nexport const isSafeInteger = (n: number): boolean =>\n    isInteger(n) && (n >= -MAX_SAFE_INTEGER && n <= MAX_SAFE_INTEGER);\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package binary provides functions for encoding and decoding numbers in byte arrays.\n */\n\nimport { isSafeInteger } from \"@stablelib/int\";\n\n// TODO(dchest): add asserts for correct value ranges and array offsets.\n\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * signed 16-bit integer and returns it.\n */\nexport function readInt16BE(array: Uint8Array, offset = 0): number {\n    return (((array[offset + 0] << 8) | array[offset + 1]) << 16) >> 16;\n}\n\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * unsigned 16-bit integer and returns it.\n */\nexport function readUint16BE(array: Uint8Array, offset = 0): number {\n    return ((array[offset + 0] << 8) | array[offset + 1]) >>> 0;\n}\n\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * signed 16-bit integer and returns it.\n */\nexport function readInt16LE(array: Uint8Array, offset = 0): number {\n    return (((array[offset + 1] << 8) | array[offset]) << 16) >> 16;\n}\n\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * unsigned 16-bit integer and returns it.\n */\nexport function readUint16LE(array: Uint8Array, offset = 0): number {\n    return ((array[offset + 1] << 8) | array[offset]) >>> 0;\n}\n\n/**\n * Writes 2-byte big-endian representation of 16-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint16BE(value: number, out = new Uint8Array(2), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 8;\n    out[offset + 1] = value >>> 0;\n    return out;\n}\n\nexport const writeInt16BE = writeUint16BE;\n\n/**\n * Writes 2-byte little-endian representation of 16-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint16LE(value: number, out = new Uint8Array(2), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    return out;\n}\n\nexport const writeInt16LE = writeUint16LE;\n\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * signed 32-bit integer and returns it.\n */\nexport function readInt32BE(array: Uint8Array, offset = 0): number {\n    return (array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3];\n}\n\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * unsigned 32-bit integer and returns it.\n */\nexport function readUint32BE(array: Uint8Array, offset = 0): number {\n    return ((array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3]) >>> 0;\n}\n\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * signed 32-bit integer and returns it.\n */\nexport function readInt32LE(array: Uint8Array, offset = 0): number {\n    return (array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset];\n}\n\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * unsigned 32-bit integer and returns it.\n */\nexport function readUint32LE(array: Uint8Array, offset = 0): number {\n    return ((array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset]) >>> 0;\n}\n\n/**\n * Writes 4-byte big-endian representation of 32-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint32BE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 24;\n    out[offset + 1] = value >>> 16;\n    out[offset + 2] = value >>> 8;\n    out[offset + 3] = value >>> 0;\n    return out;\n}\n\nexport const writeInt32BE = writeUint32BE;\n\n/**\n * Writes 4-byte little-endian representation of 32-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint32LE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    out[offset + 2] = value >>> 16;\n    out[offset + 3] = value >>> 24;\n    return out;\n}\n\n\nexport const writeInt32LE = writeUint32LE;\n\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nexport function readInt64BE(array: Uint8Array, offset = 0): number {\n    const hi = readInt32BE(array, offset);\n    const lo = readInt32BE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo>>31) * 0x100000000);\n}\n\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nexport function readUint64BE(array: Uint8Array, offset = 0): number {\n    const hi = readUint32BE(array, offset);\n    const lo = readUint32BE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\n\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nexport function readInt64LE(array: Uint8Array, offset = 0): number {\n    const lo = readInt32LE(array, offset);\n    const hi = readInt32LE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo>>31) * 0x100000000);\n}\n\n\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nexport function readUint64LE(array: Uint8Array, offset = 0): number {\n    const lo = readUint32LE(array, offset);\n    const hi = readUint32LE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\n\n/**\n * Writes 8-byte big-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint64BE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    writeUint32BE(value / 0x100000000 >>> 0, out, offset);\n    writeUint32BE(value >>> 0, out, offset + 4);\n    return out;\n}\n\nexport const writeInt64BE = writeUint64BE;\n\n/**\n * Writes 8-byte little-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint64LE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    writeUint32LE(value >>> 0, out, offset);\n    writeUint32LE(value / 0x100000000 >>> 0, out, offset + 4);\n    return out;\n}\n\nexport const writeInt64LE = writeUint64LE;\n\n/**\n * Reads bytes from array starting at offset as big-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nexport function readUintBE(bitLength: number, array: Uint8Array, offset = 0): number {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintBE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintBE: array is too short for the given bitLength\");\n    }\n    let result = 0;\n    let mul = 1;\n    for (let i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\n\n/**\n * Reads bytes from array starting at offset as little-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nexport function readUintLE(bitLength: number, array: Uint8Array, offset = 0): number {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintLE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintLE: array is too short for the given bitLength\");\n    }\n    let result = 0;\n    let mul = 1;\n    for (let i = offset; i < offset + bitLength / 8; i++) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\n\n/**\n * Writes a big-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nexport function writeUintBE(bitLength: number, value: number,\n    out = new Uint8Array(bitLength / 8), offset = 0): Uint8Array {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintBE supports only bitLengths divisible by 8\");\n    }\n    if (!isSafeInteger(value)) {\n        throw new Error(\"writeUintBE value must be an integer\");\n    }\n    let div = 1;\n    for (let i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\n\n/**\n * Writes a little-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nexport function writeUintLE(bitLength: number, value: number,\n    out = new Uint8Array(bitLength / 8), offset = 0): Uint8Array {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintLE supports only bitLengths divisible by 8\");\n    }\n    if (!isSafeInteger(value)) {\n        throw new Error(\"writeUintLE value must be an integer\");\n    }\n    let div = 1;\n    for (let i = offset; i < offset + bitLength / 8; i++) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\n\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * 32-bit floating-point number and returns it.\n */\nexport function readFloat32BE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset);\n}\n\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * 32-bit floating-point number and returns it.\n */\nexport function readFloat32LE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset, true);\n}\n\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nexport function readFloat64BE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset);\n}\n\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nexport function readFloat64LE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset, true);\n}\n\n/**\n * Writes 4-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat32BE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value);\n    return out;\n}\n\n/**\n * Writes 4-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat32LE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value, true);\n    return out;\n}\n\n/**\n * Writes 8-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat64BE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value);\n    return out;\n}\n\n/**\n * Writes 8-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat64LE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value, true);\n    return out;\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package wipe implements functions for zeroing arrays.\n */\n\nexport type NumericArray = number[] | Uint8Array | Int8Array | Uint16Array\n    | Int16Array | Uint32Array | Int32Array | Float32Array | Float64Array;\n\n/**\n * Sets all values in the given array to zero and returns it.\n *\n * The fact that it sets bytes to zero can be relied on.\n *\n * There is no guarantee that this function makes data disappear from memory,\n * as runtime implementation can, for example, have copying garbage collector\n * that will make copies of sensitive data before we wipe it. Or that an\n * operating system will write our data to swap or sleep image. Another thing\n * is that an optimizing compiler can remove calls to this function or make it\n * no-op. There's nothing we can do with it, so we just do our best and hope\n * that everything will be okay and good will triumph over evil.\n */\nexport function wipe(array: NumericArray): NumericArray {\n    // Right now it's similar to array.fill(0). If it turns\n    // out that runtimes optimize this call away, maybe\n    // we can try something else.\n    for (let i = 0; i < array.length; i++) {\n        array[i] = 0;\n    }\n    return array;\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package chacha implements ChaCha stream cipher.\n */\n\nimport { writeUint32LE } from \"@stablelib/binary\";\nimport { wipe } from \"@stablelib/wipe\";\n\n// Number of ChaCha rounds (ChaCha20).\nconst ROUNDS = 20;\n\n// Applies the ChaCha core function to 16-byte input,\n// 32-byte key key, and puts the result into 64-byte array out.\nfunction core(out: Uint8Array, input: Uint8Array, key: Uint8Array): void {\n    let j0 = 0x61707865; // \"expa\"  -- ChaCha's \"sigma\" constant\n    let j1 = 0x3320646E; // \"nd 3\"     for 32-byte keys\n    let j2 = 0x79622D32; // \"2-by\"\n    let j3 = 0x6B206574; // \"te k\"\n    let j4 = (key[3] << 24) | (key[2] << 16) | (key[1] << 8) | key[0];\n    let j5 = (key[7] << 24) | (key[6] << 16) | (key[5] << 8) | key[4];\n    let j6 = (key[11] << 24) | (key[10] << 16) | (key[9] << 8) | key[8];\n    let j7 = (key[15] << 24) | (key[14] << 16) | (key[13] << 8) | key[12];\n    let j8 = (key[19] << 24) | (key[18] << 16) | (key[17] << 8) | key[16];\n    let j9 = (key[23] << 24) | (key[22] << 16) | (key[21] << 8) | key[20];\n    let j10 = (key[27] << 24) | (key[26] << 16) | (key[25] << 8) | key[24];\n    let j11 = (key[31] << 24) | (key[30] << 16) | (key[29] << 8) | key[28];\n    let j12 = (input[3] << 24) | (input[2] << 16) | (input[1] << 8) | input[0];\n    let j13 = (input[7] << 24) | (input[6] << 16) | (input[5] << 8) | input[4];\n    let j14 = (input[11] << 24) | (input[10] << 16) | (input[9] << 8) | input[8];\n    let j15 = (input[15] << 24) | (input[14] << 16) | (input[13] << 8) | input[12];\n\n    let x0 = j0;\n    let x1 = j1;\n    let x2 = j2;\n    let x3 = j3;\n    let x4 = j4;\n    let x5 = j5;\n    let x6 = j6;\n    let x7 = j7;\n    let x8 = j8;\n    let x9 = j9;\n    let x10 = j10;\n    let x11 = j11;\n    let x12 = j12;\n    let x13 = j13;\n    let x14 = j14;\n    let x15 = j15;\n\n    for (let i = 0; i < ROUNDS; i += 2) {\n        x0 = x0 + x4 | 0; x12 ^= x0; x12 = x12 >>> (32 - 16) | x12 << 16;\n        x8 = x8 + x12 | 0; x4 ^= x8; x4 = x4 >>> (32 - 12) | x4 << 12;\n        x1 = x1 + x5 | 0; x13 ^= x1; x13 = x13 >>> (32 - 16) | x13 << 16;\n        x9 = x9 + x13 | 0; x5 ^= x9; x5 = x5 >>> (32 - 12) | x5 << 12;\n\n        x2 = x2 + x6 | 0; x14 ^= x2; x14 = x14 >>> (32 - 16) | x14 << 16;\n        x10 = x10 + x14 | 0; x6 ^= x10; x6 = x6 >>> (32 - 12) | x6 << 12;\n        x3 = x3 + x7 | 0; x15 ^= x3; x15 = x15 >>> (32 - 16) | x15 << 16;\n        x11 = x11 + x15 | 0; x7 ^= x11; x7 = x7 >>> (32 - 12) | x7 << 12;\n\n        x2 = x2 + x6 | 0; x14 ^= x2; x14 = x14 >>> (32 - 8) | x14 << 8;\n        x10 = x10 + x14 | 0; x6 ^= x10; x6 = x6 >>> (32 - 7) | x6 << 7;\n        x3 = x3 + x7 | 0; x15 ^= x3; x15 = x15 >>> (32 - 8) | x15 << 8;\n        x11 = x11 + x15 | 0; x7 ^= x11; x7 = x7 >>> (32 - 7) | x7 << 7;\n\n        x1 = x1 + x5 | 0; x13 ^= x1; x13 = x13 >>> (32 - 8) | x13 << 8;\n        x9 = x9 + x13 | 0; x5 ^= x9; x5 = x5 >>> (32 - 7) | x5 << 7;\n        x0 = x0 + x4 | 0; x12 ^= x0; x12 = x12 >>> (32 - 8) | x12 << 8;\n        x8 = x8 + x12 | 0; x4 ^= x8; x4 = x4 >>> (32 - 7) | x4 << 7;\n\n        x0 = x0 + x5 | 0; x15 ^= x0; x15 = x15 >>> (32 - 16) | x15 << 16;\n        x10 = x10 + x15 | 0; x5 ^= x10; x5 = x5 >>> (32 - 12) | x5 << 12;\n        x1 = x1 + x6 | 0; x12 ^= x1; x12 = x12 >>> (32 - 16) | x12 << 16;\n        x11 = x11 + x12 | 0; x6 ^= x11; x6 = x6 >>> (32 - 12) | x6 << 12;\n\n        x2 = x2 + x7 | 0; x13 ^= x2; x13 = x13 >>> (32 - 16) | x13 << 16;\n        x8 = x8 + x13 | 0; x7 ^= x8; x7 = x7 >>> (32 - 12) | x7 << 12;\n        x3 = x3 + x4 | 0; x14 ^= x3; x14 = x14 >>> (32 - 16) | x14 << 16;\n        x9 = x9 + x14 | 0; x4 ^= x9; x4 = x4 >>> (32 - 12) | x4 << 12;\n\n        x2 = x2 + x7 | 0; x13 ^= x2; x13 = x13 >>> (32 - 8) | x13 << 8;\n        x8 = x8 + x13 | 0; x7 ^= x8; x7 = x7 >>> (32 - 7) | x7 << 7;\n        x3 = x3 + x4 | 0; x14 ^= x3; x14 = x14 >>> (32 - 8) | x14 << 8;\n        x9 = x9 + x14 | 0; x4 ^= x9; x4 = x4 >>> (32 - 7) | x4 << 7;\n\n        x1 = x1 + x6 | 0; x12 ^= x1; x12 = x12 >>> (32 - 8) | x12 << 8;\n        x11 = x11 + x12 | 0; x6 ^= x11; x6 = x6 >>> (32 - 7) | x6 << 7;\n        x0 = x0 + x5 | 0; x15 ^= x0; x15 = x15 >>> (32 - 8) | x15 << 8;\n        x10 = x10 + x15 | 0; x5 ^= x10; x5 = x5 >>> (32 - 7) | x5 << 7;\n    }\n    writeUint32LE(x0 + j0 | 0, out, 0);\n    writeUint32LE(x1 + j1 | 0, out, 4);\n    writeUint32LE(x2 + j2 | 0, out, 8);\n    writeUint32LE(x3 + j3 | 0, out, 12);\n    writeUint32LE(x4 + j4 | 0, out, 16);\n    writeUint32LE(x5 + j5 | 0, out, 20);\n    writeUint32LE(x6 + j6 | 0, out, 24);\n    writeUint32LE(x7 + j7 | 0, out, 28);\n    writeUint32LE(x8 + j8 | 0, out, 32);\n    writeUint32LE(x9 + j9 | 0, out, 36);\n    writeUint32LE(x10 + j10 | 0, out, 40);\n    writeUint32LE(x11 + j11 | 0, out, 44);\n    writeUint32LE(x12 + j12 | 0, out, 48);\n    writeUint32LE(x13 + j13 | 0, out, 52);\n    writeUint32LE(x14 + j14 | 0, out, 56);\n    writeUint32LE(x15 + j15 | 0, out, 60);\n}\n\n/**\n * Encrypt src with ChaCha20 stream generated for the given 32-byte key and\n * 8-byte (as in original implementation) or 12-byte (as in RFC7539) nonce and\n * write the result into dst and return it.\n *\n * dst and src may be the same, but otherwise must not overlap.\n *\n * If nonce is 12 bytes, users should not encrypt more than 256 GiB with the\n * same key and nonce, otherwise the stream will repeat. The function will\n * throw error if counter overflows to prevent this.\n *\n * If nonce is 8 bytes, the output is practically unlimited (2^70 bytes, which\n * is more than a million petabytes). However, it is not recommended to\n * generate 8-byte nonces randomly, as the chance of collision is high.\n *\n * Never use the same key and nonce to encrypt more than one message.\n *\n * If nonceInplaceCounterLength is not 0, the nonce is assumed to be a 16-byte\n * array with stream counter in first nonceInplaceCounterLength bytes and nonce\n * in the last remaining bytes. The counter will be incremented inplace for\n * each ChaCha block. This is useful if you need to encrypt one stream of data\n * in chunks.\n */\nexport function streamXOR(key: Uint8Array, nonce: Uint8Array,\n    src: Uint8Array, dst: Uint8Array, nonceInplaceCounterLength = 0): Uint8Array {\n    // We only support 256-bit keys.\n    if (key.length !== 32) {\n        throw new Error(\"ChaCha: key size must be 32 bytes\");\n    }\n\n    if (dst.length < src.length) {\n        throw new Error(\"ChaCha: destination is shorter than source\");\n    }\n\n    let nc: Uint8Array;\n    let counterLength: number;\n\n    if (nonceInplaceCounterLength === 0) {\n        if (nonce.length !== 8 && nonce.length !== 12) {\n            throw new Error(\"ChaCha nonce must be 8 or 12 bytes\");\n        }\n        nc = new Uint8Array(16);\n        // First counterLength bytes of nc are counter, starting with zero.\n        counterLength = nc.length - nonce.length;\n        // Last bytes of nc after counterLength are nonce, set them.\n        nc.set(nonce, counterLength);\n    } else {\n        if (nonce.length !== 16) {\n            throw new Error(\"ChaCha nonce with counter must be 16 bytes\");\n        }\n        // This will update passed nonce with counter inplace.\n        nc = nonce;\n        counterLength = nonceInplaceCounterLength;\n    }\n\n    // Allocate temporary space for ChaCha block.\n    const block = new Uint8Array(64);\n\n    for (let i = 0; i < src.length; i += 64) {\n        // Generate a block.\n        core(block, nc, key);\n\n        // XOR block bytes with src into dst.\n        for (let j = i; j < i + 64 && j < src.length; j++) {\n            dst[j] = src[j] ^ block[j - i];\n        }\n\n        // Increment counter.\n        incrementCounter(nc, 0, counterLength);\n    }\n\n    // Cleanup temporary space.\n    wipe(block);\n\n    if (nonceInplaceCounterLength === 0) {\n        // Cleanup counter.\n        wipe(nc);\n    }\n\n    return dst;\n}\n\n/**\n * Generate ChaCha20 stream for the given 32-byte key and 8-byte or 12-byte\n * nonce and write it into dst and return it.\n *\n * Never use the same key and nonce to generate more than one stream.\n *\n * If nonceInplaceCounterLength is not 0, it behaves the same with respect to\n * the nonce as described in the streamXOR documentation.\n *\n * stream is like streamXOR with all-zero src.\n */\nexport function stream(key: Uint8Array, nonce: Uint8Array,\n    dst: Uint8Array, nonceInplaceCounterLength = 0): Uint8Array {\n    wipe(dst);\n    return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);\n}\n\nfunction incrementCounter(counter: Uint8Array, pos: number, len: number) {\n    let carry = 1;\n    while (len--) {\n        carry = carry + (counter[pos] & 0xff) | 0;\n        counter[pos] = carry & 0xff;\n        carry >>>= 8;\n        pos++;\n    }\n    if (carry > 0) {\n        throw new Error(\"ChaCha: counter overflow\");\n    }\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package constant-time provides functions for performing algorithmically constant-time operations.\n */\n\n/**\n * NOTE! Due to the inability to guarantee real constant time evaluation of\n * anything in JavaScript VM, this is module is the best effort.\n */\n\n/**\n * Returns resultIfOne if subject is 1, or resultIfZero if subject is 0.\n *\n * Supports only 32-bit integers, so resultIfOne or resultIfZero are not\n * integers, they'll be converted to them with bitwise operations.\n */\nexport function select(subject: number, resultIfOne: number, resultIfZero: number): number {\n    return (~(subject - 1) & resultIfOne) | ((subject - 1) & resultIfZero);\n}\n\n/**\n * Returns 1 if a <= b, or 0 if not.\n * Arguments must be positive 32-bit integers less than or equal to 2^31 - 1.\n */\nexport function lessOrEqual(a: number, b: number): number {\n    return (((a | 0) - (b | 0) - 1) >>> 31) & 1;\n}\n\n/**\n * Returns 1 if a and b are of equal length and their contents\n * are equal, or 0 otherwise.\n *\n * Note that unlike in equal(), zero-length inputs are considered\n * the same, so this function will return 1.\n */\nexport function compare(a: Uint8Array, b: Uint8Array): number {\n    if (a.length !== b.length) {\n        return 0;\n    }\n    let result = 0;\n    for (let i = 0; i < a.length; i++) {\n        result |= a[i] ^ b[i];\n    }\n    return (1 & ((result - 1) >>> 8));\n}\n\n/**\n * Returns true if a and b are of equal non-zero length,\n * and their contents are equal, or false otherwise.\n *\n * Note that unlike in compare() zero-length inputs are considered\n * _not_ equal, so this function will return false.\n */\nexport function equal(a: Uint8Array, b: Uint8Array): boolean {\n    if (a.length === 0 || b.length === 0) {\n        return false;\n    }\n    return compare(a, b) !== 0;\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package poly1305 implements Poly1305 one-time message authentication algorithm.\n */\n\nimport { equal as constantTimeEqual } from \"@stablelib/constant-time\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const DIGEST_LENGTH = 16;\n\n// Port of Andrew Moon's Poly1305-donna-16. Public domain.\n// https://github.com/floodyberry/poly1305-donna\n\n/**\n * Poly1305 computes 16-byte authenticator of message using\n * a one-time 32-byte key.\n *\n * Important: key should be used for only one message,\n * it should never repeat.\n */\nexport class Poly1305 {\n    readonly digestLength = DIGEST_LENGTH;\n\n    private _buffer = new Uint8Array(16);\n    private _r = new Uint16Array(10);\n    private _h = new Uint16Array(10);\n    private _pad = new Uint16Array(8);\n    private _leftover = 0;\n    private _fin = 0;\n    private _finished = false;\n\n    constructor(key: Uint8Array) {\n        let t0 = key[0] | key[1] << 8; this._r[0] = (t0) & 0x1fff;\n        let t1 = key[2] | key[3] << 8; this._r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n        let t2 = key[4] | key[5] << 8; this._r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n        let t3 = key[6] | key[7] << 8; this._r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n        let t4 = key[8] | key[9] << 8; this._r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n        this._r[5] = ((t4 >>> 1)) & 0x1ffe;\n        let t5 = key[10] | key[11] << 8; this._r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n        let t6 = key[12] | key[13] << 8; this._r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n        let t7 = key[14] | key[15] << 8; this._r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n        this._r[9] = ((t7 >>> 5)) & 0x007f;\n\n        this._pad[0] = key[16] | key[17] << 8;\n        this._pad[1] = key[18] | key[19] << 8;\n        this._pad[2] = key[20] | key[21] << 8;\n        this._pad[3] = key[22] | key[23] << 8;\n        this._pad[4] = key[24] | key[25] << 8;\n        this._pad[5] = key[26] | key[27] << 8;\n        this._pad[6] = key[28] | key[29] << 8;\n        this._pad[7] = key[30] | key[31] << 8;\n    }\n\n    private _blocks(m: Uint8Array, mpos: number, bytes: number) {\n        let hibit = this._fin ? 0 : 1 << 11;\n\n        let h0 = this._h[0],\n            h1 = this._h[1],\n            h2 = this._h[2],\n            h3 = this._h[3],\n            h4 = this._h[4],\n            h5 = this._h[5],\n            h6 = this._h[6],\n            h7 = this._h[7],\n            h8 = this._h[8],\n            h9 = this._h[9];\n\n        let r0 = this._r[0],\n            r1 = this._r[1],\n            r2 = this._r[2],\n            r3 = this._r[3],\n            r4 = this._r[4],\n            r5 = this._r[5],\n            r6 = this._r[6],\n            r7 = this._r[7],\n            r8 = this._r[8],\n            r9 = this._r[9];\n\n        while (bytes >= 16) {\n            let t0 = m[mpos + 0] | m[mpos + 1] << 8; h0 += (t0) & 0x1fff;\n            let t1 = m[mpos + 2] | m[mpos + 3] << 8; h1 += ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n            let t2 = m[mpos + 4] | m[mpos + 5] << 8; h2 += ((t1 >>> 10) | (t2 << 6)) & 0x1fff;\n            let t3 = m[mpos + 6] | m[mpos + 7] << 8; h3 += ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n            let t4 = m[mpos + 8] | m[mpos + 9] << 8; h4 += ((t3 >>> 4) | (t4 << 12)) & 0x1fff;\n            h5 += ((t4 >>> 1)) & 0x1fff;\n            let t5 = m[mpos + 10] | m[mpos + 11] << 8; h6 += ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n            let t6 = m[mpos + 12] | m[mpos + 13] << 8; h7 += ((t5 >>> 11) | (t6 << 5)) & 0x1fff;\n            let t7 = m[mpos + 14] | m[mpos + 15] << 8; h8 += ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n            h9 += ((t7 >>> 5)) | hibit;\n\n            let c = 0;\n\n            let d0 = c;\n            d0 += h0 * r0;\n            d0 += h1 * (5 * r9);\n            d0 += h2 * (5 * r8);\n            d0 += h3 * (5 * r7);\n            d0 += h4 * (5 * r6);\n            c = (d0 >>> 13); d0 &= 0x1fff;\n            d0 += h5 * (5 * r5);\n            d0 += h6 * (5 * r4);\n            d0 += h7 * (5 * r3);\n            d0 += h8 * (5 * r2);\n            d0 += h9 * (5 * r1);\n            c += (d0 >>> 13); d0 &= 0x1fff;\n\n            let d1 = c;\n            d1 += h0 * r1;\n            d1 += h1 * r0;\n            d1 += h2 * (5 * r9);\n            d1 += h3 * (5 * r8);\n            d1 += h4 * (5 * r7);\n            c = (d1 >>> 13); d1 &= 0x1fff;\n            d1 += h5 * (5 * r6);\n            d1 += h6 * (5 * r5);\n            d1 += h7 * (5 * r4);\n            d1 += h8 * (5 * r3);\n            d1 += h9 * (5 * r2);\n            c += (d1 >>> 13); d1 &= 0x1fff;\n\n            let d2 = c;\n            d2 += h0 * r2;\n            d2 += h1 * r1;\n            d2 += h2 * r0;\n            d2 += h3 * (5 * r9);\n            d2 += h4 * (5 * r8);\n            c = (d2 >>> 13); d2 &= 0x1fff;\n            d2 += h5 * (5 * r7);\n            d2 += h6 * (5 * r6);\n            d2 += h7 * (5 * r5);\n            d2 += h8 * (5 * r4);\n            d2 += h9 * (5 * r3);\n            c += (d2 >>> 13); d2 &= 0x1fff;\n\n            let d3 = c;\n            d3 += h0 * r3;\n            d3 += h1 * r2;\n            d3 += h2 * r1;\n            d3 += h3 * r0;\n            d3 += h4 * (5 * r9);\n            c = (d3 >>> 13); d3 &= 0x1fff;\n            d3 += h5 * (5 * r8);\n            d3 += h6 * (5 * r7);\n            d3 += h7 * (5 * r6);\n            d3 += h8 * (5 * r5);\n            d3 += h9 * (5 * r4);\n            c += (d3 >>> 13); d3 &= 0x1fff;\n\n            let d4 = c;\n            d4 += h0 * r4;\n            d4 += h1 * r3;\n            d4 += h2 * r2;\n            d4 += h3 * r1;\n            d4 += h4 * r0;\n            c = (d4 >>> 13); d4 &= 0x1fff;\n            d4 += h5 * (5 * r9);\n            d4 += h6 * (5 * r8);\n            d4 += h7 * (5 * r7);\n            d4 += h8 * (5 * r6);\n            d4 += h9 * (5 * r5);\n            c += (d4 >>> 13); d4 &= 0x1fff;\n\n            let d5 = c;\n            d5 += h0 * r5;\n            d5 += h1 * r4;\n            d5 += h2 * r3;\n            d5 += h3 * r2;\n            d5 += h4 * r1;\n            c = (d5 >>> 13); d5 &= 0x1fff;\n            d5 += h5 * r0;\n            d5 += h6 * (5 * r9);\n            d5 += h7 * (5 * r8);\n            d5 += h8 * (5 * r7);\n            d5 += h9 * (5 * r6);\n            c += (d5 >>> 13); d5 &= 0x1fff;\n\n            let d6 = c;\n            d6 += h0 * r6;\n            d6 += h1 * r5;\n            d6 += h2 * r4;\n            d6 += h3 * r3;\n            d6 += h4 * r2;\n            c = (d6 >>> 13); d6 &= 0x1fff;\n            d6 += h5 * r1;\n            d6 += h6 * r0;\n            d6 += h7 * (5 * r9);\n            d6 += h8 * (5 * r8);\n            d6 += h9 * (5 * r7);\n            c += (d6 >>> 13); d6 &= 0x1fff;\n\n            let d7 = c;\n            d7 += h0 * r7;\n            d7 += h1 * r6;\n            d7 += h2 * r5;\n            d7 += h3 * r4;\n            d7 += h4 * r3;\n            c = (d7 >>> 13); d7 &= 0x1fff;\n            d7 += h5 * r2;\n            d7 += h6 * r1;\n            d7 += h7 * r0;\n            d7 += h8 * (5 * r9);\n            d7 += h9 * (5 * r8);\n            c += (d7 >>> 13); d7 &= 0x1fff;\n\n            let d8 = c;\n            d8 += h0 * r8;\n            d8 += h1 * r7;\n            d8 += h2 * r6;\n            d8 += h3 * r5;\n            d8 += h4 * r4;\n            c = (d8 >>> 13); d8 &= 0x1fff;\n            d8 += h5 * r3;\n            d8 += h6 * r2;\n            d8 += h7 * r1;\n            d8 += h8 * r0;\n            d8 += h9 * (5 * r9);\n            c += (d8 >>> 13); d8 &= 0x1fff;\n\n            let d9 = c;\n            d9 += h0 * r9;\n            d9 += h1 * r8;\n            d9 += h2 * r7;\n            d9 += h3 * r6;\n            d9 += h4 * r5;\n            c = (d9 >>> 13); d9 &= 0x1fff;\n            d9 += h5 * r4;\n            d9 += h6 * r3;\n            d9 += h7 * r2;\n            d9 += h8 * r1;\n            d9 += h9 * r0;\n            c += (d9 >>> 13); d9 &= 0x1fff;\n\n            c = (((c << 2) + c)) | 0;\n            c = (c + d0) | 0;\n            d0 = c & 0x1fff;\n            c = (c >>> 13);\n            d1 += c;\n\n            h0 = d0;\n            h1 = d1;\n            h2 = d2;\n            h3 = d3;\n            h4 = d4;\n            h5 = d5;\n            h6 = d6;\n            h7 = d7;\n            h8 = d8;\n            h9 = d9;\n\n            mpos += 16;\n            bytes -= 16;\n        }\n        this._h[0] = h0;\n        this._h[1] = h1;\n        this._h[2] = h2;\n        this._h[3] = h3;\n        this._h[4] = h4;\n        this._h[5] = h5;\n        this._h[6] = h6;\n        this._h[7] = h7;\n        this._h[8] = h8;\n        this._h[9] = h9;\n    }\n\n    finish(mac: Uint8Array, macpos = 0): this {\n        const g = new Uint16Array(10);\n        let c: number;\n        let mask: number;\n        let f: number;\n        let i: number;\n\n        if (this._leftover) {\n            i = this._leftover;\n            this._buffer[i++] = 1;\n            for (; i < 16; i++) {\n                this._buffer[i] = 0;\n            }\n            this._fin = 1;\n            this._blocks(this._buffer, 0, 16);\n        }\n\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        for (i = 2; i < 10; i++) {\n            this._h[i] += c;\n            c = this._h[i] >>> 13;\n            this._h[i] &= 0x1fff;\n        }\n        this._h[0] += (c * 5);\n        c = this._h[0] >>> 13;\n        this._h[0] &= 0x1fff;\n        this._h[1] += c;\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        this._h[2] += c;\n\n        g[0] = this._h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for (i = 1; i < 10; i++) {\n            g[i] = this._h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= (1 << 13);\n\n        mask = (c ^ 1) - 1;\n        for (i = 0; i < 10; i++) {\n            g[i] &= mask;\n        }\n        mask = ~mask;\n        for (i = 0; i < 10; i++) {\n            this._h[i] = (this._h[i] & mask) | g[i];\n        }\n\n        this._h[0] = ((this._h[0]) | (this._h[1] << 13)) & 0xffff;\n        this._h[1] = ((this._h[1] >>> 3) | (this._h[2] << 10)) & 0xffff;\n        this._h[2] = ((this._h[2] >>> 6) | (this._h[3] << 7)) & 0xffff;\n        this._h[3] = ((this._h[3] >>> 9) | (this._h[4] << 4)) & 0xffff;\n        this._h[4] = ((this._h[4] >>> 12) | (this._h[5] << 1) | (this._h[6] << 14)) & 0xffff;\n        this._h[5] = ((this._h[6] >>> 2) | (this._h[7] << 11)) & 0xffff;\n        this._h[6] = ((this._h[7] >>> 5) | (this._h[8] << 8)) & 0xffff;\n        this._h[7] = ((this._h[8] >>> 8) | (this._h[9] << 5)) & 0xffff;\n\n        f = this._h[0] + this._pad[0];\n        this._h[0] = f & 0xffff;\n        for (i = 1; i < 8; i++) {\n            f = (((this._h[i] + this._pad[i]) | 0) + (f >>> 16)) | 0;\n            this._h[i] = f & 0xffff;\n        }\n\n        mac[macpos + 0] = this._h[0] >>> 0;\n        mac[macpos + 1] = this._h[0] >>> 8;\n        mac[macpos + 2] = this._h[1] >>> 0;\n        mac[macpos + 3] = this._h[1] >>> 8;\n        mac[macpos + 4] = this._h[2] >>> 0;\n        mac[macpos + 5] = this._h[2] >>> 8;\n        mac[macpos + 6] = this._h[3] >>> 0;\n        mac[macpos + 7] = this._h[3] >>> 8;\n        mac[macpos + 8] = this._h[4] >>> 0;\n        mac[macpos + 9] = this._h[4] >>> 8;\n        mac[macpos + 10] = this._h[5] >>> 0;\n        mac[macpos + 11] = this._h[5] >>> 8;\n        mac[macpos + 12] = this._h[6] >>> 0;\n        mac[macpos + 13] = this._h[6] >>> 8;\n        mac[macpos + 14] = this._h[7] >>> 0;\n        mac[macpos + 15] = this._h[7] >>> 8;\n\n        this._finished = true;\n        return this;\n    }\n\n    update(m: Uint8Array): this {\n        let mpos = 0;\n        let bytes = m.length;\n        let want: number;\n\n        if (this._leftover) {\n            want = (16 - this._leftover);\n            if (want > bytes) {\n                want = bytes;\n            }\n            for (let i = 0; i < want; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            bytes -= want;\n            mpos += want;\n            this._leftover += want;\n            if (this._leftover < 16) {\n                return this;\n            }\n            this._blocks(this._buffer, 0, 16);\n            this._leftover = 0;\n        }\n\n        if (bytes >= 16) {\n            want = bytes - (bytes % 16);\n            this._blocks(m, mpos, want);\n            mpos += want;\n            bytes -= want;\n        }\n\n        if (bytes) {\n            for (let i = 0; i < bytes; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            this._leftover += bytes;\n        }\n\n        return this;\n    }\n\n    digest(): Uint8Array {\n        // TODO(dchest): it behaves differently than other hashes/HMAC,\n        // because it throws when finished — others just return saved result.\n        if (this._finished) {\n            throw new Error(\"Poly1305 was finished\");\n        }\n        let mac = new Uint8Array(16);\n        this.finish(mac);\n        return mac;\n    }\n\n    clean(): this {\n        wipe(this._buffer);\n        wipe(this._r);\n        wipe(this._h);\n        wipe(this._pad);\n        this._leftover = 0;\n        this._fin = 0;\n        this._finished = true; // mark as finished even if not\n        return this;\n    }\n}\n\n/**\n * Returns 16-byte authenticator of data using a one-time 32-byte key.\n *\n * Important: key should be used for only one message, it should never repeat.\n */\nexport function oneTimeAuth(key: Uint8Array, data: Uint8Array): Uint8Array {\n    const h = new Poly1305(key);\n    h.update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n\n/**\n * Returns true if two authenticators are 16-byte long and equal.\n * Uses contant-time comparison to avoid leaking timing information.\n */\nexport function equal(a: Uint8Array, b: Uint8Array): boolean {\n    if (a.length !== DIGEST_LENGTH || b.length !== DIGEST_LENGTH) {\n        return false;\n    }\n    return constantTimeEqual(a, b);\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package chacha20poly1305 implements ChaCha20-Poly1305 AEAD.\n */\n\nimport { AEAD } from \"@stablelib/aead\";\nimport { streamXOR, stream } from \"@stablelib/chacha\";\nimport { Poly1305 } from \"@stablelib/poly1305\";\nimport { wipe } from \"@stablelib/wipe\";\nimport { writeUint64LE } from \"@stablelib/binary\";\nimport { equal } from \"@stablelib/constant-time\";\n\nexport const KEY_LENGTH = 32;\nexport const NONCE_LENGTH = 12;\nexport const TAG_LENGTH = 16;\n\nconst ZEROS = new Uint8Array(16);\n\n/**\n * ChaCha20-Poly1305 Authenticated Encryption with Associated Data.\n *\n * Defined in RFC7539.\n */\nexport class ChaCha20Poly1305 implements AEAD {\n    readonly nonceLength = NONCE_LENGTH;\n    readonly tagLength = TAG_LENGTH;\n\n    private _key: Uint8Array;\n\n    /**\n     * Creates a new instance with the given 32-byte key.\n     */\n    constructor(key: Uint8Array) {\n        if (key.length !== KEY_LENGTH) {\n            throw new Error(\"ChaCha20Poly1305 needs 32-byte key\");\n        }\n        // Copy key.\n        this._key = new Uint8Array(key);\n    }\n\n    /**\n     * Encrypts and authenticates plaintext, authenticates associated data,\n     * and returns sealed ciphertext, which includes authentication tag.\n     *\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\n     * and nonce.\n     *\n     * If dst is given (it must be the size of plaintext + the size of tag\n     * length) the result will be put into it. Dst and plaintext must not\n     * overlap.\n     */\n    seal(nonce: Uint8Array, plaintext: Uint8Array, associatedData?: Uint8Array,\n        dst?: Uint8Array): Uint8Array {\n        if (nonce.length > 16) {\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\n        }\n\n        // Allocate space for counter, and set nonce as last bytes of it.\n        const counter = new Uint8Array(16);\n        counter.set(nonce, counter.length - nonce.length);\n\n        // Generate authentication key by taking first 32-bytes of stream.\n        // We pass full counter, which has 12-byte nonce and 4-byte block counter,\n        // and it will get incremented after generating the block, which is\n        // exactly what we need: we only use the first 32 bytes of 64-byte\n        // ChaCha block and discard the next 32 bytes.\n        const authKey = new Uint8Array(32);\n        stream(this._key, counter, authKey, 4);\n\n        // Allocate space for sealed ciphertext.\n        const resultLength = plaintext.length + this.tagLength;\n        let result;\n        if (dst) {\n            if (dst.length !== resultLength) {\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\n            }\n            result = dst;\n        } else {\n            result = new Uint8Array(resultLength);\n        }\n\n        // Encrypt plaintext.\n        streamXOR(this._key, counter, plaintext, result, 4);\n\n        // Authenticate.\n        // XXX: can \"simplify\" here: pass full result (which is already padded\n        // due to zeroes prepared for tag), and ciphertext length instead of\n        // subarray of result.\n        this._authenticate(result.subarray(result.length - this.tagLength, result.length),\n            authKey, result.subarray(0, result.length - this.tagLength), associatedData);\n\n        // Cleanup.\n        wipe(counter);\n\n        return result;\n    }\n\n    /**\n     * Authenticates sealed ciphertext (which includes authentication tag) and\n     * associated data, decrypts ciphertext and returns decrypted plaintext.\n     *\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\n     * and nonce.\n     *\n     * If authentication fails, it returns null.\n     *\n     * If dst is given (it must be of ciphertext length minus tag length),\n     * the result will be put into it. Dst and plaintext must not overlap.\n     */\n    open(nonce: Uint8Array, sealed: Uint8Array, associatedData?: Uint8Array,\n        dst?: Uint8Array): Uint8Array | null {\n        if (nonce.length > 16) {\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\n        }\n\n        // Sealed ciphertext should at least contain tag.\n        if (sealed.length < this.tagLength) {\n            // TODO(dchest): should we throw here instead?\n            return null;\n        }\n\n        // Allocate space for counter, and set nonce as last bytes of it.\n        const counter = new Uint8Array(16);\n        counter.set(nonce, counter.length - nonce.length);\n\n        // Generate authentication key by taking first 32-bytes of stream.\n        const authKey = new Uint8Array(32);\n        stream(this._key, counter, authKey, 4);\n\n        // Authenticate.\n        // XXX: can simplify and avoid allocation: since authenticate()\n        // already allocates tag (from Poly1305.digest(), it can return)\n        // it instead of copying to calculatedTag. But then in seal()\n        // we'll need to copy it.\n        const calculatedTag = new Uint8Array(this.tagLength);\n        this._authenticate(calculatedTag, authKey,\n            sealed.subarray(0, sealed.length - this.tagLength), associatedData);\n\n        // Constant-time compare tags and return null if they differ.\n        if (!equal(calculatedTag,\n            sealed.subarray(sealed.length - this.tagLength, sealed.length))) {\n            return null;\n        }\n\n        // Allocate space for decrypted plaintext.\n        const resultLength = sealed.length - this.tagLength;\n        let result;\n        if (dst) {\n            if (dst.length !== resultLength) {\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\n            }\n            result = dst;\n        } else {\n            result = new Uint8Array(resultLength);\n        }\n\n        // Decrypt.\n        streamXOR(this._key, counter,\n            sealed.subarray(0, sealed.length - this.tagLength), result, 4);\n\n        // Cleanup.\n        wipe(counter);\n\n        return result;\n    }\n\n    clean(): this {\n        wipe(this._key);\n        return this;\n    }\n\n    private _authenticate(tagOut: Uint8Array, authKey: Uint8Array,\n        ciphertext: Uint8Array, associatedData?: Uint8Array) {\n\n        // Initialize Poly1305 with authKey.\n        const h = new Poly1305(authKey);\n\n        // Authenticate padded associated data.\n        if (associatedData) {\n            h.update(associatedData);\n            if (associatedData.length % 16 > 0) {\n                h.update(ZEROS.subarray(associatedData.length % 16));\n            }\n        }\n\n        // Authenticate padded ciphertext.\n        h.update(ciphertext);\n        if (ciphertext.length % 16 > 0) {\n            h.update(ZEROS.subarray(ciphertext.length % 16));\n        }\n\n        // Authenticate length of associated data.\n        // XXX: can avoid allocation here?\n        const length = new Uint8Array(8);\n        if (associatedData) {\n            writeUint64LE(associatedData.length, length);\n        }\n        h.update(length);\n\n        // Authenticate length of ciphertext.\n        writeUint64LE(ciphertext.length, length);\n        h.update(length);\n\n        // Get tag and copy it into tagOut.\n        const tag = h.digest();\n        for (let i = 0; i < tag.length; i++) {\n            tagOut[i] = tag[i];\n        }\n\n        // Cleanup.\n        h.clean();\n        wipe(tag);\n        wipe(length);\n    }\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package hash provides interface for hash functions.\n */\n\n/**\n * Hash interface describes properties of\n * cryptographic hash functions.\n */\nexport interface Hash {\n    readonly digestLength: number;\n    readonly blockSize: number;\n    update(data: Uint8Array): this;\n    reset(): this;\n    finish(out: Uint8Array): this;\n    digest(): Uint8Array;\n    clean(): void;\n}\n\nexport interface SerializableHash extends Hash {\n    saveState(): any;\n    restoreState(savedState: any): this;\n    cleanSavedState(savedState: any): void;\n}\n\nexport function isSerializableHash(h: Hash): h is SerializableHash {\n    return (\n        typeof (h as SerializableHash).saveState !== \"undefined\" &&\n        typeof (h as SerializableHash).restoreState !== \"undefined\" &&\n        typeof (h as SerializableHash).cleanSavedState !== \"undefined\"\n    );\n}\n\n// TODO(dchest): figure out the standardized interface for XOF such as\n// SHAKE and BLAKE2X.\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package hmac implements HMAC algorithm.\n */\n\nimport { Hash, SerializableHash, isSerializableHash } from \"@stablelib/hash\";\nimport { equal as constantTimeEqual } from \"@stablelib/constant-time\";\nimport { wipe } from \"@stablelib/wipe\";\n\n/**\n *  HMAC implements hash-based message authentication algorithm.\n */\nexport class HMAC implements SerializableHash {\n    readonly blockSize: number;\n    readonly digestLength: number;\n\n    private _inner: Hash; // inner hash\n    private _outer: Hash; // outer hash\n\n    private _finished = false; // true if HMAC was finalized\n\n    // Copies of hash states after keying.\n    // Need for quick reset without hashing the key again.\n    private _innerKeyedState: any | undefined;\n    private _outerKeyedState: any | undefined;\n\n    /**\n     * Constructs a new HMAC with the given Hash and secret key.\n     */\n    constructor(hash: new () => Hash | SerializableHash, key: Uint8Array) {\n        // Initialize inner and outer hashes.\n        this._inner = new hash();\n        this._outer = new hash();\n\n        // Set block and digest sizes for this HMAC\n        // instance to values from the hash.\n        this.blockSize = this._outer.blockSize;\n        this.digestLength = this._outer.digestLength;\n\n        // Pad temporary stores a key (or its hash) padded with zeroes.\n        const pad = new Uint8Array(this.blockSize);\n\n        if (key.length > this.blockSize) {\n            // If key is bigger than hash block size, it must be\n            // hashed and this hash is used as a key instead.\n            this._inner.update(key).finish(pad).clean();\n        } else {\n            // Otherwise, copy the key into pad.\n            pad.set(key);\n        }\n\n        // Now two different keys are derived from padded key\n        // by xoring a different byte value to each.\n\n        // To make inner hash key, xor byte 0x36 into pad.\n        for (let i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36;\n        }\n        // Update inner hash with the result.\n        this._inner.update(pad);\n\n        // To make outer hash key, xor byte 0x5c into pad.\n        // But since we already xored 0x36 there, we must\n        // first undo this by xoring it again.\n        for (let i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36 ^ 0x5c;\n        }\n        // Update outer hash with the result.\n        this._outer.update(pad);\n\n        // Save states of both hashes, so that we can quickly restore\n        // them later in reset() without the need to remember the actual\n        // key and perform this initialization again.\n        if (isSerializableHash(this._inner) && isSerializableHash(this._outer)) {\n            this._innerKeyedState = this._inner.saveState();\n            this._outerKeyedState = this._outer.saveState();\n        }\n\n        // Clean pad.\n        wipe(pad);\n    }\n\n    /**\n     * Returns HMAC state to the state initialized with key\n     * to make it possible to run HMAC over the other data with the same\n     * key without creating a new instance.\n     */\n    reset(): this {\n        if (!isSerializableHash(this._inner) || !isSerializableHash(this._outer)) {\n            throw new Error(\"hmac: can't reset() because hash doesn't implement restoreState()\");\n        }\n        // Restore keyed states of inner and outer hashes.\n        this._inner.restoreState(this._innerKeyedState);\n        this._outer.restoreState(this._outerKeyedState);\n        this._finished = false;\n        return this;\n    }\n\n    /**\n     * Cleans HMAC state.\n     */\n    clean() {\n        if (isSerializableHash(this._inner)) {\n            this._inner.cleanSavedState(this._innerKeyedState);\n        }\n        if (isSerializableHash(this._outer)) {\n            this._outer.cleanSavedState(this._outerKeyedState);\n        }\n        this._inner.clean();\n        this._outer.clean();\n    }\n\n    /**\n     * Updates state with provided data.\n     */\n    update(data: Uint8Array): this {\n        this._inner.update(data);\n        return this;\n    }\n\n    /**\n     * Finalizes HMAC and puts the result in out.\n     */\n    finish(out: Uint8Array): this {\n        if (this._finished) {\n            // If HMAC was finalized, outer hash is also finalized,\n            // so it produces the same digest it produced when it\n            // was finalized.\n            this._outer.finish(out);\n            return this;\n        }\n\n        // Finalize inner hash and store the result temporarily.\n        this._inner.finish(out);\n\n        // Update outer hash with digest of inner hash and and finalize it.\n        this._outer.update(out.subarray(0, this.digestLength)).finish(out);\n        this._finished = true;\n\n        return this;\n    }\n\n    /**\n     * Returns the computed message authentication code.\n     */\n    digest(): Uint8Array {\n        const out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    }\n\n    /**\n     * Saves HMAC state.\n     * This function is needed for PBKDF2 optimization.\n     */\n    saveState(): any {\n        if (!isSerializableHash(this._inner)) {\n            throw new Error(\"hmac: can't saveState() because hash doesn't implement it\");\n        }\n        return this._inner.saveState();\n    }\n\n    restoreState(savedState: any): this {\n        if (!isSerializableHash(this._inner) || !isSerializableHash(this._outer)) {\n            throw new Error(\"hmac: can't restoreState() because hash doesn't implement it\");\n        }\n        this._inner.restoreState(savedState);\n        this._outer.restoreState(this._outerKeyedState);\n        this._finished = false;\n        return this;\n    }\n\n    cleanSavedState(savedState: any) {\n        if (!isSerializableHash(this._inner)) {\n            throw new Error(\"hmac: can't cleanSavedState() because hash doesn't implement it\");\n        }\n        this._inner.cleanSavedState(savedState);\n    }\n}\n\n/**\n * Returns HMAC using the given hash constructor for the key over data.\n */\nexport function hmac(hash: new () => Hash, key: Uint8Array, data: Uint8Array): Uint8Array {\n    const h = new HMAC(hash, key);\n    h.update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n\n/**\n * Returns true if two HMAC digests are equal.\n * Uses constant-time comparison to avoid leaking timing information.\n *\n * Example:\n *\n *    const receivedDigest = ...\n *    const realDigest = hmac(SHA256, key, data);\n *    if (!equal(receivedDigest, realDigest)) {\n *        throw new Error(\"Authentication error\");\n *    }\n */\nexport const equal = constantTimeEqual;\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package hkdf implements HKDF key derivation function.\n */\n\nimport { Hash } from \"@stablelib/hash\";\nimport { HMAC, hmac } from \"@stablelib/hmac\";\nimport { wipe } from \"@stablelib/wipe\";\n\n/**\n * HMAC-based Extract-and-Expand Key Derivation Function.\n *\n * Implements HKDF from RFC5869.\n *\n * Expands the given master key with salt and info into\n * a limited stream of key material.\n */\nexport class HKDF {\n    private _hmac: HMAC;\n    private _buffer: Uint8Array;\n    private _bufpos: number;\n    private _counter = new Uint8Array(1); // starts with zero\n    private _hash: new () => Hash;\n    private _info?: Uint8Array;\n\n    /**\n     * Create a new HKDF instance for the given hash function\n     * with the master key, optional salt, and info.\n     *\n     * - Master key is a high-entropy secret key (not a password).\n     * - Salt is a non-secret random value.\n     * - Info is application- and/or context-specific information.\n     */\n    constructor(hash: new () => Hash,\n        key: Uint8Array,\n        salt = new Uint8Array(0),\n        info?: Uint8Array) {\n\n        this._hash = hash;\n        this._info = info;\n\n        // HKDF-Extract uses salt as HMAC key, and key as data.\n        const okm = hmac(this._hash, salt, key);\n\n        // Initialize HMAC for expanding with extracted key.\n        this._hmac = new HMAC(hash, okm);\n\n        // Allocate buffer.\n        this._buffer = new Uint8Array(this._hmac.digestLength);\n        this._bufpos = this._buffer.length;\n    }\n\n    // Fill buffer with new block of HKDF-Extract output.\n    private _fillBuffer(): void {\n        // Increment counter.\n        this._counter[0]++;\n\n        const ctr = this._counter[0];\n\n        // Check if counter overflowed.\n        if (ctr === 0) {\n            throw new Error(\"hkdf: cannot expand more\");\n        }\n\n        // Prepare HMAC instance for new data with old key.\n        this._hmac.reset();\n\n        // Hash in previous output if it was generated\n        // (i.e. counter is greater than 1).\n        if (ctr > 1) {\n            this._hmac.update(this._buffer);\n        }\n\n        // Hash in info if it exists.\n        if (this._info) {\n            this._hmac.update(this._info);\n        }\n\n        // Hash in the counter.\n        this._hmac.update(this._counter);\n\n        // Output result to buffer and clean HMAC instance.\n        this._hmac.finish(this._buffer);\n\n        // Reset buffer position.\n        this._bufpos = 0;\n    }\n\n    /**\n     * Expand returns next key material of the given length.\n     *\n     * It throws if expansion limit is reached (which is\n     * 254 digests of the underlying HMAC function).\n     */\n    expand(length: number): Uint8Array {\n        const out = new Uint8Array(length);\n        for (let i = 0; i < out.length; i++) {\n            if (this._bufpos === this._buffer.length) {\n                this._fillBuffer();\n            }\n            out[i] = this._buffer[this._bufpos++];\n        }\n        return out;\n    }\n\n    clean(): void {\n        this._hmac.clean();\n        wipe(this._buffer);\n        wipe(this._counter);\n        this._bufpos = 0;\n    }\n}\n\n// TODO(dchest): maybe implement deriveKey?\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nimport { RandomSource } from \"./\";\n\nconst QUOTA = 65536;\n\nexport class BrowserRandomSource implements RandomSource {\n    isAvailable = false;\n    isInstantiated = false;\n\n    private _crypto?: { getRandomValues: typeof window.crypto.getRandomValues };\n\n    constructor() {\n        const browserCrypto = typeof self !== 'undefined'\n            ? (self.crypto || (self as { msCrypto?: any }).msCrypto) // IE11 has msCrypto\n            : null;\n\n        if (browserCrypto && browserCrypto.getRandomValues !== undefined) {\n            this._crypto = browserCrypto;\n            this.isAvailable = true;\n            this.isInstantiated = true;\n        }\n    }\n\n    randomBytes(length: number): Uint8Array {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Browser random byte generator is not available.\");\n        }\n        const out = new Uint8Array(length);\n        for (let i = 0; i < out.length; i += QUOTA) {\n            this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));\n        }\n        return out;\n    }\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"crypto\" has been externalized for browser compatibility. Cannot access \"crypto.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nimport { RandomSource } from \"./\";\nimport { wipe } from \"@stablelib/wipe\";\n\ndeclare function require(name: string): any;\n\nexport class NodeRandomSource implements RandomSource {\n    isAvailable = false;\n    isInstantiated = false;\n\n    private _crypto: { randomBytes(n: number): Uint8Array } | undefined;\n\n    constructor() {\n        if (typeof require !== \"undefined\") {\n            const nodeCrypto = require(\"crypto\");\n            if (nodeCrypto && nodeCrypto.randomBytes) {\n                this._crypto = nodeCrypto;\n                this.isAvailable = true;\n                this.isInstantiated = true;\n            }\n        }\n    }\n\n    randomBytes(length: number): Uint8Array {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Node.js random byte generator is not available.\");\n        }\n\n        // Get random bytes (result is Buffer).\n        let buffer = this._crypto.randomBytes(length);\n\n        // Make sure we got the length that we requested.\n        if (buffer.length !== length) {\n            throw new Error(\"NodeRandomSource: got fewer bytes than requested\");\n        }\n\n        // Allocate output array.\n        const out = new Uint8Array(length);\n\n        // Copy bytes from buffer to output.\n        for (let i = 0; i < out.length; i++) {\n            out[i] = buffer[i];\n        }\n\n        // Cleanup.\n        wipe(buffer);\n\n        return out;\n    }\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nimport { RandomSource } from \"./\";\nimport { BrowserRandomSource } from \"./browser\";\nimport { NodeRandomSource } from \"./node\";\n\nexport class SystemRandomSource implements RandomSource {\n    isAvailable = false;\n    name = \"\";\n    private _source: RandomSource;\n\n    constructor() {\n        // Try browser.\n        this._source = new BrowserRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Browser\";\n            return;\n        }\n\n        // If no browser source, try Node.\n        this._source = new NodeRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Node\";\n            return;\n        }\n\n        // No sources, we're out of options.\n    }\n\n    randomBytes(length: number): Uint8Array {\n        if (!this.isAvailable) {\n            throw new Error(\"System random byte generator is not available.\");\n        }\n        return this._source.randomBytes(length);\n    }\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package random provides functions to access system's\n * cryptographically secure random byte generator.\n */\n\nimport { RandomSource } from \"./source\";\nimport { SystemRandomSource } from \"./source/system\";\nimport { readUint32LE } from \"@stablelib/binary\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport { RandomSource } from \"./source\";\n\nexport const defaultRandomSource = new SystemRandomSource();\n\nexport function randomBytes(length: number, prng: RandomSource = defaultRandomSource): Uint8Array {\n    return prng.randomBytes(length);\n}\n\n/**\n * Returns a uniformly random unsigned 32-bit integer.\n */\nexport function randomUint32(prng: RandomSource = defaultRandomSource): number {\n    // Generate 4-byte random buffer.\n    const buf = randomBytes(4, prng);\n\n    // Convert bytes from buffer into a 32-bit integer.\n    // It's not important which byte order to use, since\n    // the result is random.\n    const result = readUint32LE(buf);\n\n    // Clean the buffer.\n    wipe(buf);\n\n    return result;\n}\n\n/** 62 alphanumeric characters for default charset of randomString() */\nconst ALPHANUMERIC = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n/**\n * Returns a uniform random string of the given length\n * with characters from the given charset.\n *\n * Charset must not have more than 256 characters.\n *\n * Default charset generates case-sensitive alphanumeric\n * strings (0-9, A-Z, a-z).\n */\nexport function randomString(\n    length: number,\n    charset = ALPHANUMERIC,\n    prng: RandomSource = defaultRandomSource\n): string {\n    if (charset.length < 2) {\n        throw new Error(\"randomString charset is too short\");\n    }\n    if (charset.length > 256) {\n        throw new Error(\"randomString charset is too long\");\n    }\n    let out = '';\n    const charsLen = charset.length;\n    const maxByte = 256 - (256 % charsLen);\n    while (length > 0) {\n        const buf = randomBytes(Math.ceil(length * 256 / maxByte), prng);\n        for (let i = 0; i < buf.length && length > 0; i++) {\n            const randomByte = buf[i];\n            if (randomByte < maxByte) {\n                out += charset.charAt(randomByte % charsLen);\n                length--;\n            }\n        }\n        wipe(buf);\n    }\n    return out;\n}\n\n/**\n * Returns uniform random string containing at least the given\n * number of bits of entropy.\n *\n * For example, randomStringForEntropy(128) will return a 22-character\n * alphanumeric string, while randomStringForEntropy(128, \"0123456789\")\n * will return a 39-character numeric string, both will contain at\n * least 128 bits of entropy.\n *\n * Default charset generates case-sensitive alphanumeric\n * strings (0-9, A-Z, a-z).\n */\nexport function randomStringForEntropy(\n    bits: number,\n    charset = ALPHANUMERIC,\n    prng: RandomSource = defaultRandomSource\n): string {\n    const length = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));\n    return randomString(length, charset, prng);\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package sha256 implements SHA-2-256 cryptographic hash function.\n */\n\nimport { SerializableHash } from \"@stablelib/hash\";\nimport { readUint32BE, writeUint32BE } from \"@stablelib/binary\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const DIGEST_LENGTH = 32;\nexport const BLOCK_SIZE = 64;\n\n/**\n * SHA2-256 cryptographic hash algorithm.\n */\nexport class SHA256 implements SerializableHash {\n    /** Length of hash output */\n    readonly digestLength: number = DIGEST_LENGTH;\n\n    /** Block size */\n    readonly blockSize: number = BLOCK_SIZE;\n\n    // Note: Int32Array is used instead of Uint32Array for performance reasons.\n    protected _state = new Int32Array(8); // hash state\n    private _temp = new Int32Array(64); // temporary state\n    private _buffer = new Uint8Array(128); // buffer for data to hash\n    private _bufferLength = 0; // number of bytes in buffer\n    private _bytesHashed = 0; // number of total bytes hashed\n    private _finished = false; // indicates whether the hash was finalized\n\n    constructor() {\n        this.reset();\n    }\n\n    protected _initState() {\n        this._state[0] = 0x6a09e667;\n        this._state[1] = 0xbb67ae85;\n        this._state[2] = 0x3c6ef372;\n        this._state[3] = 0xa54ff53a;\n        this._state[4] = 0x510e527f;\n        this._state[5] = 0x9b05688c;\n        this._state[6] = 0x1f83d9ab;\n        this._state[7] = 0x5be0cd19;\n    }\n\n    /**\n     * Resets hash state making it possible\n     * to re-use this instance to hash other data.\n     */\n    reset(): this {\n        this._initState();\n        this._bufferLength = 0;\n        this._bytesHashed = 0;\n        this._finished = false;\n        return this;\n    }\n\n    /**\n     * Cleans internal buffers and resets hash state.\n     */\n    clean() {\n        wipe(this._buffer);\n        wipe(this._temp);\n        this.reset();\n    }\n\n    /**\n     * Updates hash state with the given data.\n     *\n     * Throws error when trying to update already finalized hash:\n     * instance must be reset to update it again.\n     */\n    update(data: Uint8Array, dataLength: number = data.length): this {\n        if (this._finished) {\n            throw new Error(\"SHA256: can't update because hash was finished.\");\n        }\n        let dataPos = 0;\n        this._bytesHashed += dataLength;\n        if (this._bufferLength > 0) {\n            while (this._bufferLength < this.blockSize && dataLength > 0) {\n                this._buffer[this._bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this._bufferLength === this.blockSize) {\n                hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);\n                this._bufferLength = 0;\n            }\n        }\n        if (dataLength >= this.blockSize) {\n            dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);\n            dataLength %= this.blockSize;\n        }\n        while (dataLength > 0) {\n            this._buffer[this._bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    }\n\n    /**\n     * Finalizes hash state and puts hash into out.\n     * If hash was already finalized, puts the same value.\n     */\n    finish(out: Uint8Array): this {\n        if (!this._finished) {\n            const bytesHashed = this._bytesHashed;\n            const left = this._bufferLength;\n            const bitLenHi = (bytesHashed / 0x20000000) | 0;\n            const bitLenLo = bytesHashed << 3;\n            const padLength = (bytesHashed % 64 < 56) ? 64 : 128;\n\n            this._buffer[left] = 0x80;\n            for (let i = left + 1; i < padLength - 8; i++) {\n                this._buffer[i] = 0;\n            }\n            writeUint32BE(bitLenHi, this._buffer, padLength - 8);\n            writeUint32BE(bitLenLo, this._buffer, padLength - 4);\n\n            hashBlocks(this._temp, this._state, this._buffer, 0, padLength);\n\n            this._finished = true;\n        }\n\n        for (let i = 0; i < this.digestLength / 4; i++) {\n            writeUint32BE(this._state[i], out, i * 4);\n        }\n\n        return this;\n    }\n\n    /**\n     * Returns the final hash digest.\n     */\n    digest(): Uint8Array {\n        const out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    }\n\n    /**\n     * Function useful for HMAC/PBKDF2 optimization.\n     * Returns hash state to be used with restoreState().\n     * Only chain value is saved, not buffers or other\n     * state variables.\n     */\n    saveState(): SavedState {\n        if (this._finished) {\n            throw new Error(\"SHA256: cannot save finished state\");\n        }\n        return {\n            state: new Int32Array(this._state),\n            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,\n            bufferLength: this._bufferLength,\n            bytesHashed: this._bytesHashed\n        };\n    }\n\n    /**\n     * Function useful for HMAC/PBKDF2 optimization.\n     * Restores state saved by saveState() and sets bytesHashed\n     * to the given value.\n     */\n    restoreState(savedState: SavedState): this {\n        this._state.set(savedState.state);\n        this._bufferLength = savedState.bufferLength;\n        if (savedState.buffer) {\n            this._buffer.set(savedState.buffer);\n        }\n        this._bytesHashed = savedState.bytesHashed;\n        this._finished = false;\n        return this;\n    }\n\n    /**\n     * Cleans state returned by saveState().\n     */\n    cleanSavedState(savedState: SavedState) {\n        wipe(savedState.state);\n        if (savedState.buffer) {\n            wipe(savedState.buffer);\n        }\n        savedState.bufferLength = 0;\n        savedState.bytesHashed = 0;\n    }\n}\n\nexport type SavedState = {\n    state: Int32Array;\n    buffer: Uint8Array | undefined;\n    bufferLength: number;\n    bytesHashed: number;\n};\n\n// Constants\nconst K = new Int32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n    0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n    0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n    0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n    0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n    0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n    0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n    0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n    0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\nfunction hashBlocks(w: Int32Array, v: Int32Array, p: Uint8Array, pos: number, len: number): number {\n    while (len >= 64) {\n        let a = v[0];\n        let b = v[1];\n        let c = v[2];\n        let d = v[3];\n        let e = v[4];\n        let f = v[5];\n        let g = v[6];\n        let h = v[7];\n\n        for (let i = 0; i < 16; i++) {\n            let j = pos + i * 4;\n            w[i] = readUint32BE(p, j);\n        }\n\n        for (let i = 16; i < 64; i++) {\n            let u = w[i - 2];\n            let t1 = (u >>> 17 | u << (32 - 17)) ^ (u >>> 19 | u << (32 - 19)) ^ (u >>> 10);\n\n            u = w[i - 15];\n            let t2 = (u >>> 7 | u << (32 - 7)) ^ (u >>> 18 | u << (32 - 18)) ^ (u >>> 3);\n\n            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n        }\n\n        for (let i = 0; i < 64; i++) {\n            let t1 = (((((e >>> 6 | e << (32 - 6)) ^ (e >>> 11 | e << (32 - 11)) ^\n                (e >>> 25 | e << (32 - 25))) + ((e & f) ^ (~e & g))) | 0) +\n                ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n            let t2 = (((a >>> 2 | a << (32 - 2)) ^ (a >>> 13 | a << (32 - 13)) ^\n                (a >>> 22 | a << (32 - 22))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n            h = g;\n            g = f;\n            f = e;\n            e = (d + t1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (t1 + t2) | 0;\n        }\n\n        v[0] += a;\n        v[1] += b;\n        v[2] += c;\n        v[3] += d;\n        v[4] += e;\n        v[5] += f;\n        v[6] += g;\n        v[7] += h;\n\n        pos += 64;\n        len -= 64;\n    }\n    return pos;\n}\n\nexport function hash(data: Uint8Array): Uint8Array {\n    const h = new SHA256();\n    h.update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package x25519 implements X25519 key agreement.\n */\n\nimport { randomBytes, RandomSource } from \"@stablelib/random\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const PUBLIC_KEY_LENGTH = 32;\nexport const SECRET_KEY_LENGTH = 32;\nexport const SHARED_KEY_LENGTH = 32;\n\n// TODO(dchest): some functions are copies of ../sign/ed25519.\n// Find a way to combine them without opening up to public.\n\n// Ported from TweetNaCl.js, which is ported from TweetNaCl\n// by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n// https://tweetnacl.js.org\n\n// TweetNaCl contributors:\n// Daniel J. Bernstein, Bernard van Gastel, Wesley Janssen,\n// Tanja Lange, Peter Schwabe, Sjaak Smetsers.\n// Public domain.\n// https://tweetnacl.cr.yp.to/\n\ntype GF = Float64Array;\n\n// Returns new zero-filled 16-element GF (Float64Array).\n// If passed an array of numbers, prefills the returned\n// array with them.\n//\n// We use Float64Array, because we need 48-bit numbers\n// for this implementation.\nfunction gf(init?: number[]): GF {\n    const r = new Float64Array(16);\n    if (init) {\n        for (let i = 0; i < init.length; i++) {\n            r[i] = init[i];\n        }\n    }\n    return r;\n}\n\n// Base point.\nconst _9 = new Uint8Array(32); _9[0] = 9;\n\nconst _121665 = gf([0xdb41, 1]);\n\nfunction car25519(o: GF) {\n    let c = 1;\n    for (let i = 0; i < 16; i++) {\n        let v = o[i] + c + 65535;\n        c = Math.floor(v / 65536);\n        o[i] = v - c * 65536;\n    }\n    o[0] += c - 1 + 37 * (c - 1);\n}\n\nfunction sel25519(p: GF, q: GF, b: number) {\n    const c = ~(b - 1);\n    for (let i = 0; i < 16; i++) {\n        const t = c & (p[i] ^ q[i]);\n        p[i] ^= t;\n        q[i] ^= t;\n    }\n}\n\nfunction pack25519(o: Uint8Array, n: GF) {\n    const m = gf();\n    const t = gf();\n    for (let i = 0; i < 16; i++) {\n        t[i] = n[i];\n    }\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (let j = 0; j < 2; j++) {\n        m[0] = t[0] - 0xffed;\n        for (let i = 1; i < 15; i++) {\n            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n            m[i - 1] &= 0xffff;\n        }\n        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n        const b = (m[15] >> 16) & 1;\n        m[14] &= 0xffff;\n        sel25519(t, m, 1 - b);\n    }\n    for (let i = 0; i < 16; i++) {\n        o[2 * i] = t[i] & 0xff;\n        o[2 * i + 1] = t[i] >> 8;\n    }\n}\n\nfunction unpack25519(o: GF, n: Uint8Array) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    }\n    o[15] &= 0x7fff;\n}\n\nfunction add(o: GF, a: GF, b: GF) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] + b[i];\n    }\n}\n\nfunction sub(o: GF, a: GF, b: GF) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] - b[i];\n    }\n}\n\nfunction mul(o: GF, a: GF, b: GF) {\n    let v: number, c: number,\n        t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0,\n        t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n        t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n        t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n        b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3],\n        b4 = b[4],\n        b5 = b[5],\n        b6 = b[6],\n        b7 = b[7],\n        b8 = b[8],\n        b9 = b[9],\n        b10 = b[10],\n        b11 = b[11],\n        b12 = b[12],\n        b13 = b[13],\n        b14 = b[14],\n        b15 = b[15];\n\n    v = a[0];\n    t0 += v * b0;\n    t1 += v * b1;\n    t2 += v * b2;\n    t3 += v * b3;\n    t4 += v * b4;\n    t5 += v * b5;\n    t6 += v * b6;\n    t7 += v * b7;\n    t8 += v * b8;\n    t9 += v * b9;\n    t10 += v * b10;\n    t11 += v * b11;\n    t12 += v * b12;\n    t13 += v * b13;\n    t14 += v * b14;\n    t15 += v * b15;\n    v = a[1];\n    t1 += v * b0;\n    t2 += v * b1;\n    t3 += v * b2;\n    t4 += v * b3;\n    t5 += v * b4;\n    t6 += v * b5;\n    t7 += v * b6;\n    t8 += v * b7;\n    t9 += v * b8;\n    t10 += v * b9;\n    t11 += v * b10;\n    t12 += v * b11;\n    t13 += v * b12;\n    t14 += v * b13;\n    t15 += v * b14;\n    t16 += v * b15;\n    v = a[2];\n    t2 += v * b0;\n    t3 += v * b1;\n    t4 += v * b2;\n    t5 += v * b3;\n    t6 += v * b4;\n    t7 += v * b5;\n    t8 += v * b6;\n    t9 += v * b7;\n    t10 += v * b8;\n    t11 += v * b9;\n    t12 += v * b10;\n    t13 += v * b11;\n    t14 += v * b12;\n    t15 += v * b13;\n    t16 += v * b14;\n    t17 += v * b15;\n    v = a[3];\n    t3 += v * b0;\n    t4 += v * b1;\n    t5 += v * b2;\n    t6 += v * b3;\n    t7 += v * b4;\n    t8 += v * b5;\n    t9 += v * b6;\n    t10 += v * b7;\n    t11 += v * b8;\n    t12 += v * b9;\n    t13 += v * b10;\n    t14 += v * b11;\n    t15 += v * b12;\n    t16 += v * b13;\n    t17 += v * b14;\n    t18 += v * b15;\n    v = a[4];\n    t4 += v * b0;\n    t5 += v * b1;\n    t6 += v * b2;\n    t7 += v * b3;\n    t8 += v * b4;\n    t9 += v * b5;\n    t10 += v * b6;\n    t11 += v * b7;\n    t12 += v * b8;\n    t13 += v * b9;\n    t14 += v * b10;\n    t15 += v * b11;\n    t16 += v * b12;\n    t17 += v * b13;\n    t18 += v * b14;\n    t19 += v * b15;\n    v = a[5];\n    t5 += v * b0;\n    t6 += v * b1;\n    t7 += v * b2;\n    t8 += v * b3;\n    t9 += v * b4;\n    t10 += v * b5;\n    t11 += v * b6;\n    t12 += v * b7;\n    t13 += v * b8;\n    t14 += v * b9;\n    t15 += v * b10;\n    t16 += v * b11;\n    t17 += v * b12;\n    t18 += v * b13;\n    t19 += v * b14;\n    t20 += v * b15;\n    v = a[6];\n    t6 += v * b0;\n    t7 += v * b1;\n    t8 += v * b2;\n    t9 += v * b3;\n    t10 += v * b4;\n    t11 += v * b5;\n    t12 += v * b6;\n    t13 += v * b7;\n    t14 += v * b8;\n    t15 += v * b9;\n    t16 += v * b10;\n    t17 += v * b11;\n    t18 += v * b12;\n    t19 += v * b13;\n    t20 += v * b14;\n    t21 += v * b15;\n    v = a[7];\n    t7 += v * b0;\n    t8 += v * b1;\n    t9 += v * b2;\n    t10 += v * b3;\n    t11 += v * b4;\n    t12 += v * b5;\n    t13 += v * b6;\n    t14 += v * b7;\n    t15 += v * b8;\n    t16 += v * b9;\n    t17 += v * b10;\n    t18 += v * b11;\n    t19 += v * b12;\n    t20 += v * b13;\n    t21 += v * b14;\n    t22 += v * b15;\n    v = a[8];\n    t8 += v * b0;\n    t9 += v * b1;\n    t10 += v * b2;\n    t11 += v * b3;\n    t12 += v * b4;\n    t13 += v * b5;\n    t14 += v * b6;\n    t15 += v * b7;\n    t16 += v * b8;\n    t17 += v * b9;\n    t18 += v * b10;\n    t19 += v * b11;\n    t20 += v * b12;\n    t21 += v * b13;\n    t22 += v * b14;\n    t23 += v * b15;\n    v = a[9];\n    t9 += v * b0;\n    t10 += v * b1;\n    t11 += v * b2;\n    t12 += v * b3;\n    t13 += v * b4;\n    t14 += v * b5;\n    t15 += v * b6;\n    t16 += v * b7;\n    t17 += v * b8;\n    t18 += v * b9;\n    t19 += v * b10;\n    t20 += v * b11;\n    t21 += v * b12;\n    t22 += v * b13;\n    t23 += v * b14;\n    t24 += v * b15;\n    v = a[10];\n    t10 += v * b0;\n    t11 += v * b1;\n    t12 += v * b2;\n    t13 += v * b3;\n    t14 += v * b4;\n    t15 += v * b5;\n    t16 += v * b6;\n    t17 += v * b7;\n    t18 += v * b8;\n    t19 += v * b9;\n    t20 += v * b10;\n    t21 += v * b11;\n    t22 += v * b12;\n    t23 += v * b13;\n    t24 += v * b14;\n    t25 += v * b15;\n    v = a[11];\n    t11 += v * b0;\n    t12 += v * b1;\n    t13 += v * b2;\n    t14 += v * b3;\n    t15 += v * b4;\n    t16 += v * b5;\n    t17 += v * b6;\n    t18 += v * b7;\n    t19 += v * b8;\n    t20 += v * b9;\n    t21 += v * b10;\n    t22 += v * b11;\n    t23 += v * b12;\n    t24 += v * b13;\n    t25 += v * b14;\n    t26 += v * b15;\n    v = a[12];\n    t12 += v * b0;\n    t13 += v * b1;\n    t14 += v * b2;\n    t15 += v * b3;\n    t16 += v * b4;\n    t17 += v * b5;\n    t18 += v * b6;\n    t19 += v * b7;\n    t20 += v * b8;\n    t21 += v * b9;\n    t22 += v * b10;\n    t23 += v * b11;\n    t24 += v * b12;\n    t25 += v * b13;\n    t26 += v * b14;\n    t27 += v * b15;\n    v = a[13];\n    t13 += v * b0;\n    t14 += v * b1;\n    t15 += v * b2;\n    t16 += v * b3;\n    t17 += v * b4;\n    t18 += v * b5;\n    t19 += v * b6;\n    t20 += v * b7;\n    t21 += v * b8;\n    t22 += v * b9;\n    t23 += v * b10;\n    t24 += v * b11;\n    t25 += v * b12;\n    t26 += v * b13;\n    t27 += v * b14;\n    t28 += v * b15;\n    v = a[14];\n    t14 += v * b0;\n    t15 += v * b1;\n    t16 += v * b2;\n    t17 += v * b3;\n    t18 += v * b4;\n    t19 += v * b5;\n    t20 += v * b6;\n    t21 += v * b7;\n    t22 += v * b8;\n    t23 += v * b9;\n    t24 += v * b10;\n    t25 += v * b11;\n    t26 += v * b12;\n    t27 += v * b13;\n    t28 += v * b14;\n    t29 += v * b15;\n    v = a[15];\n    t15 += v * b0;\n    t16 += v * b1;\n    t17 += v * b2;\n    t18 += v * b3;\n    t19 += v * b4;\n    t20 += v * b5;\n    t21 += v * b6;\n    t22 += v * b7;\n    t23 += v * b8;\n    t24 += v * b9;\n    t25 += v * b10;\n    t26 += v * b11;\n    t27 += v * b12;\n    t28 += v * b13;\n    t29 += v * b14;\n    t30 += v * b15;\n\n    t0 += 38 * t16;\n    t1 += 38 * t17;\n    t2 += 38 * t18;\n    t3 += 38 * t19;\n    t4 += 38 * t20;\n    t5 += 38 * t21;\n    t6 += 38 * t22;\n    t7 += 38 * t23;\n    t8 += 38 * t24;\n    t9 += 38 * t25;\n    t10 += 38 * t26;\n    t11 += 38 * t27;\n    t12 += 38 * t28;\n    t13 += 38 * t29;\n    t14 += 38 * t30;\n    // t15 left as is\n\n    // first car\n    c = 1;\n    v = t0 + c + 65535; c = Math.floor(v / 65536); t0 = v - c * 65536;\n    v = t1 + c + 65535; c = Math.floor(v / 65536); t1 = v - c * 65536;\n    v = t2 + c + 65535; c = Math.floor(v / 65536); t2 = v - c * 65536;\n    v = t3 + c + 65535; c = Math.floor(v / 65536); t3 = v - c * 65536;\n    v = t4 + c + 65535; c = Math.floor(v / 65536); t4 = v - c * 65536;\n    v = t5 + c + 65535; c = Math.floor(v / 65536); t5 = v - c * 65536;\n    v = t6 + c + 65535; c = Math.floor(v / 65536); t6 = v - c * 65536;\n    v = t7 + c + 65535; c = Math.floor(v / 65536); t7 = v - c * 65536;\n    v = t8 + c + 65535; c = Math.floor(v / 65536); t8 = v - c * 65536;\n    v = t9 + c + 65535; c = Math.floor(v / 65536); t9 = v - c * 65536;\n    v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n    v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n    v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n    v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n    v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n    v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n\n    // second car\n    c = 1;\n    v = t0 + c + 65535; c = Math.floor(v / 65536); t0 = v - c * 65536;\n    v = t1 + c + 65535; c = Math.floor(v / 65536); t1 = v - c * 65536;\n    v = t2 + c + 65535; c = Math.floor(v / 65536); t2 = v - c * 65536;\n    v = t3 + c + 65535; c = Math.floor(v / 65536); t3 = v - c * 65536;\n    v = t4 + c + 65535; c = Math.floor(v / 65536); t4 = v - c * 65536;\n    v = t5 + c + 65535; c = Math.floor(v / 65536); t5 = v - c * 65536;\n    v = t6 + c + 65535; c = Math.floor(v / 65536); t6 = v - c * 65536;\n    v = t7 + c + 65535; c = Math.floor(v / 65536); t7 = v - c * 65536;\n    v = t8 + c + 65535; c = Math.floor(v / 65536); t8 = v - c * 65536;\n    v = t9 + c + 65535; c = Math.floor(v / 65536); t9 = v - c * 65536;\n    v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n    v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n    v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n    v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n    v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n    v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n\n    o[0] = t0;\n    o[1] = t1;\n    o[2] = t2;\n    o[3] = t3;\n    o[4] = t4;\n    o[5] = t5;\n    o[6] = t6;\n    o[7] = t7;\n    o[8] = t8;\n    o[9] = t9;\n    o[10] = t10;\n    o[11] = t11;\n    o[12] = t12;\n    o[13] = t13;\n    o[14] = t14;\n    o[15] = t15;\n}\n\nfunction square(o: GF, a: GF) {\n    mul(o, a, a);\n}\n\nfunction inv25519(o: GF, inp: GF) {\n    const c = gf();\n    for (let i = 0; i < 16; i++) {\n        c[i] = inp[i];\n    }\n    for (let i = 253; i >= 0; i--) {\n        square(c, c);\n        if (i !== 2 && i !== 4) {\n            mul(c, c, inp);\n        }\n    }\n    for (let i = 0; i < 16; i++) {\n        o[i] = c[i];\n    }\n}\n\nexport function scalarMult(n: Uint8Array, p: Uint8Array): Uint8Array {\n    const z = new Uint8Array(32);\n    const x = new Float64Array(80);\n    const a = gf(), b = gf(), c = gf(),\n        d = gf(), e = gf(), f = gf();\n\n    for (let i = 0; i < 31; i++) {\n        z[i] = n[i];\n    }\n    z[31] = (n[31] & 127) | 64;\n    z[0] &= 248;\n\n    unpack25519(x, p);\n\n    for (let i = 0; i < 16; i++) {\n        b[i] = x[i];\n    }\n\n    a[0] = d[0] = 1;\n\n    for (let i = 254; i >= 0; --i) {\n        const r = (z[i >>> 3] >>> (i & 7)) & 1;\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n        add(e, a, c);\n        sub(a, a, c);\n        add(c, b, d);\n        sub(b, b, d);\n        square(d, e);\n        square(f, a);\n        mul(a, c, a);\n        mul(c, b, e);\n        add(e, a, c);\n        sub(a, a, c);\n        square(b, a);\n        sub(c, d, f);\n        mul(a, c, _121665);\n        add(a, a, d);\n        mul(c, c, a);\n        mul(a, d, f);\n        mul(d, b, x);\n        square(b, e);\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n    }\n    for (let i = 0; i < 16; i++) {\n        x[i + 16] = a[i];\n        x[i + 32] = c[i];\n        x[i + 48] = b[i];\n        x[i + 64] = d[i];\n    }\n    const x32 = x.subarray(32);\n    const x16 = x.subarray(16);\n    inv25519(x32, x32);\n    mul(x16, x16, x32);\n    const q = new Uint8Array(32);\n    pack25519(q, x16);\n    return q;\n}\n\nexport function scalarMultBase(n: Uint8Array): Uint8Array {\n    return scalarMult(n, _9);\n}\n\nexport interface KeyPair {\n    publicKey: Uint8Array;\n    secretKey: Uint8Array;\n}\n\nexport function generateKeyPairFromSeed(seed: Uint8Array): KeyPair {\n    if (seed.length !== SECRET_KEY_LENGTH) {\n        throw new Error(`x25519: seed must be ${SECRET_KEY_LENGTH} bytes`);\n    }\n    const secretKey = new Uint8Array(seed);\n    const publicKey = scalarMultBase(secretKey);\n    return {\n        publicKey,\n        secretKey\n    };\n}\n\nexport function generateKeyPair(prng?: RandomSource): KeyPair {\n    const seed = randomBytes(32, prng);\n    const result = generateKeyPairFromSeed(seed);\n    wipe(seed);\n    return result;\n}\n\n/**\n * Returns a shared key between our secret key and a peer's public key.\n *\n * Throws an error if the given keys are of wrong length.\n *\n * If rejectZero is true throws if the calculated shared key is all-zero.\n * From RFC 7748:\n *\n * > Protocol designers using Diffie-Hellman over the curves defined in\n * > this document must not assume \"contributory behavior\".  Specially,\n * > contributory behavior means that both parties' private keys\n * > contribute to the resulting shared key.  Since curve25519 and\n * > curve448 have cofactors of 8 and 4 (respectively), an input point of\n * > small order will eliminate any contribution from the other party's\n * > private key.  This situation can be detected by checking for the all-\n * > zero output, which implementations MAY do, as specified in Section 6.\n * > However, a large number of existing implementations do not do this.\n *\n * IMPORTANT: the returned key is a raw result of scalar multiplication.\n * To use it as a key material, hash it with a cryptographic hash function.\n */\nexport function sharedKey(mySecretKey: Uint8Array, theirPublicKey: Uint8Array, rejectZero = false): Uint8Array {\n    if (mySecretKey.length !== PUBLIC_KEY_LENGTH) {\n        throw new Error(\"X25519: incorrect secret key length\");\n    }\n    if (theirPublicKey.length !== PUBLIC_KEY_LENGTH) {\n        throw new Error(\"X25519: incorrect public key length\");\n    }\n\n    const result = scalarMult(mySecretKey, theirPublicKey);\n\n    if (rejectZero) {\n        let zeros = 0;\n        for (let i = 0; i < result.length; i++) {\n            zeros |= result[i];\n        }\n        if (zeros === 0) {\n            throw new Error(\"X25519: invalid shared key\");\n        }\n    }\n\n    return result;\n}\n", null, null, null, null, null, null, null, null, null, null, "'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n", "'use strict'\nfunction tryStringify (o) {\n  try { return JSON.stringify(o) } catch(e) { return '\"[Circular]\"' }\n}\n\nmodule.exports = format\n\nfunction format(f, args, opts) {\n  var ss = (opts && opts.stringify) || tryStringify\n  var offset = 1\n  if (typeof f === 'object' && f !== null) {\n    var len = args.length + offset\n    if (len === 1) return f\n    var objects = new Array(len)\n    objects[0] = ss(f)\n    for (var index = 1; index < len; index++) {\n      objects[index] = ss(args[index])\n    }\n    return objects.join(' ')\n  }\n  if (typeof f !== 'string') {\n    return f\n  }\n  var argLen = args.length\n  if (argLen === 0) return f\n  var str = ''\n  var a = 1 - offset\n  var lastPos = -1\n  var flen = (f && f.length) || 0\n  for (var i = 0; i < flen;) {\n    if (f.charCodeAt(i) === 37 && i + 1 < flen) {\n      lastPos = lastPos > -1 ? lastPos : 0\n      switch (f.charCodeAt(i + 1)) {\n        case 100: // 'd'\n        case 102: // 'f'\n          if (a >= argLen)\n            break\n          if (args[a] == null)  break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += Number(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 105: // 'i'\n          if (a >= argLen)\n            break\n          if (args[a] == null)  break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += Math.floor(Number(args[a]))\n          lastPos = i + 2\n          i++\n          break\n        case 79: // 'O'\n        case 111: // 'o'\n        case 106: // 'j'\n          if (a >= argLen)\n            break\n          if (args[a] === undefined) break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          var type = typeof args[a]\n          if (type === 'string') {\n            str += '\\'' + args[a] + '\\''\n            lastPos = i + 2\n            i++\n            break\n          }\n          if (type === 'function') {\n            str += args[a].name || '<anonymous>'\n            lastPos = i + 2\n            i++\n            break\n          }\n          str += ss(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 115: // 's'\n          if (a >= argLen)\n            break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += String(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 37: // '%'\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += '%'\n          lastPos = i + 2\n          i++\n          a--\n          break\n      }\n      ++a\n    }\n    ++i\n  }\n  if (lastPos === -1)\n    return f\n  else if (lastPos < flen) {\n    str += f.slice(lastPos)\n  }\n\n  return str\n}\n", "'use strict'\n\nconst format = require('quick-format-unescaped')\n\nmodule.exports = pino\n\nconst _console = pfGlobalThisOrFallback().console || {}\nconst stdSerializers = {\n  mapHttpRequest: mock,\n  mapHttpResponse: mock,\n  wrapRequestSerializer: passthrough,\n  wrapResponseSerializer: passthrough,\n  wrapErrorSerializer: passthrough,\n  req: mock,\n  res: mock,\n  err: asErrValue\n}\n\nfunction shouldSerialize (serialize, serializers) {\n  if (Array.isArray(serialize)) {\n    const hasToFilter = serialize.filter(function (k) {\n      return k !== '!stdSerializers.err'\n    })\n    return hasToFilter\n  } else if (serialize === true) {\n    return Object.keys(serializers)\n  }\n\n  return false\n}\n\nfunction pino (opts) {\n  opts = opts || {}\n  opts.browser = opts.browser || {}\n\n  const transmit = opts.browser.transmit\n  if (transmit && typeof transmit.send !== 'function') { throw Error('pino: transmit option must have a send function') }\n\n  const proto = opts.browser.write || _console\n  if (opts.browser.write) opts.browser.asObject = true\n  const serializers = opts.serializers || {}\n  const serialize = shouldSerialize(opts.browser.serialize, serializers)\n  let stdErrSerialize = opts.browser.serialize\n\n  if (\n    Array.isArray(opts.browser.serialize) &&\n    opts.browser.serialize.indexOf('!stdSerializers.err') > -1\n  ) stdErrSerialize = false\n\n  const levels = ['error', 'fatal', 'warn', 'info', 'debug', 'trace']\n\n  if (typeof proto === 'function') {\n    proto.error = proto.fatal = proto.warn =\n    proto.info = proto.debug = proto.trace = proto\n  }\n  if (opts.enabled === false) opts.level = 'silent'\n  const level = opts.level || 'info'\n  const logger = Object.create(proto)\n  if (!logger.log) logger.log = noop\n\n  Object.defineProperty(logger, 'levelVal', {\n    get: getLevelVal\n  })\n  Object.defineProperty(logger, 'level', {\n    get: getLevel,\n    set: setLevel\n  })\n\n  const setOpts = {\n    transmit,\n    serialize,\n    asObject: opts.browser.asObject,\n    levels,\n    timestamp: getTimeFunction(opts)\n  }\n  logger.levels = pino.levels\n  logger.level = level\n\n  logger.setMaxListeners = logger.getMaxListeners =\n  logger.emit = logger.addListener = logger.on =\n  logger.prependListener = logger.once =\n  logger.prependOnceListener = logger.removeListener =\n  logger.removeAllListeners = logger.listeners =\n  logger.listenerCount = logger.eventNames =\n  logger.write = logger.flush = noop\n  logger.serializers = serializers\n  logger._serialize = serialize\n  logger._stdErrSerialize = stdErrSerialize\n  logger.child = child\n\n  if (transmit) logger._logEvent = createLogEventShape()\n\n  function getLevelVal () {\n    return this.level === 'silent'\n      ? Infinity\n      : this.levels.values[this.level]\n  }\n\n  function getLevel () {\n    return this._level\n  }\n  function setLevel (level) {\n    if (level !== 'silent' && !this.levels.values[level]) {\n      throw Error('unknown level ' + level)\n    }\n    this._level = level\n\n    set(setOpts, logger, 'error', 'log') // <-- must stay first\n    set(setOpts, logger, 'fatal', 'error')\n    set(setOpts, logger, 'warn', 'error')\n    set(setOpts, logger, 'info', 'log')\n    set(setOpts, logger, 'debug', 'log')\n    set(setOpts, logger, 'trace', 'log')\n  }\n\n  function child (bindings, childOptions) {\n    if (!bindings) {\n      throw new Error('missing bindings for child Pino')\n    }\n    childOptions = childOptions || {}\n    if (serialize && bindings.serializers) {\n      childOptions.serializers = bindings.serializers\n    }\n    const childOptionsSerializers = childOptions.serializers\n    if (serialize && childOptionsSerializers) {\n      var childSerializers = Object.assign({}, serializers, childOptionsSerializers)\n      var childSerialize = opts.browser.serialize === true\n        ? Object.keys(childSerializers)\n        : serialize\n      delete bindings.serializers\n      applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize)\n    }\n    function Child (parent) {\n      this._childLevel = (parent._childLevel | 0) + 1\n      this.error = bind(parent, bindings, 'error')\n      this.fatal = bind(parent, bindings, 'fatal')\n      this.warn = bind(parent, bindings, 'warn')\n      this.info = bind(parent, bindings, 'info')\n      this.debug = bind(parent, bindings, 'debug')\n      this.trace = bind(parent, bindings, 'trace')\n      if (childSerializers) {\n        this.serializers = childSerializers\n        this._serialize = childSerialize\n      }\n      if (transmit) {\n        this._logEvent = createLogEventShape(\n          [].concat(parent._logEvent.bindings, bindings)\n        )\n      }\n    }\n    Child.prototype = this\n    return new Child(this)\n  }\n  return logger\n}\n\npino.levels = {\n  values: {\n    fatal: 60,\n    error: 50,\n    warn: 40,\n    info: 30,\n    debug: 20,\n    trace: 10\n  },\n  labels: {\n    10: 'trace',\n    20: 'debug',\n    30: 'info',\n    40: 'warn',\n    50: 'error',\n    60: 'fatal'\n  }\n}\n\npino.stdSerializers = stdSerializers\npino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime })\n\nfunction set (opts, logger, level, fallback) {\n  const proto = Object.getPrototypeOf(logger)\n  logger[level] = logger.levelVal > logger.levels.values[level]\n    ? noop\n    : (proto[level] ? proto[level] : (_console[level] || _console[fallback] || noop))\n\n  wrap(opts, logger, level)\n}\n\nfunction wrap (opts, logger, level) {\n  if (!opts.transmit && logger[level] === noop) return\n\n  logger[level] = (function (write) {\n    return function LOG () {\n      const ts = opts.timestamp()\n      const args = new Array(arguments.length)\n      const proto = (Object.getPrototypeOf && Object.getPrototypeOf(this) === _console) ? _console : this\n      for (var i = 0; i < args.length; i++) args[i] = arguments[i]\n\n      if (opts.serialize && !opts.asObject) {\n        applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize)\n      }\n      if (opts.asObject) write.call(proto, asObject(this, level, args, ts))\n      else write.apply(proto, args)\n\n      if (opts.transmit) {\n        const transmitLevel = opts.transmit.level || logger.level\n        const transmitValue = pino.levels.values[transmitLevel]\n        const methodValue = pino.levels.values[level]\n        if (methodValue < transmitValue) return\n        transmit(this, {\n          ts,\n          methodLevel: level,\n          methodValue,\n          transmitLevel,\n          transmitValue: pino.levels.values[opts.transmit.level || logger.level],\n          send: opts.transmit.send,\n          val: logger.levelVal\n        }, args)\n      }\n    }\n  })(logger[level])\n}\n\nfunction asObject (logger, level, args, ts) {\n  if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize)\n  const argsCloned = args.slice()\n  let msg = argsCloned[0]\n  const o = {}\n  if (ts) {\n    o.time = ts\n  }\n  o.level = pino.levels.values[level]\n  let lvl = (logger._childLevel | 0) + 1\n  if (lvl < 1) lvl = 1\n  // deliberate, catching objects, arrays\n  if (msg !== null && typeof msg === 'object') {\n    while (lvl-- && typeof argsCloned[0] === 'object') {\n      Object.assign(o, argsCloned.shift())\n    }\n    msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : undefined\n  } else if (typeof msg === 'string') msg = format(argsCloned.shift(), argsCloned)\n  if (msg !== undefined) o.msg = msg\n  return o\n}\n\nfunction applySerializers (args, serialize, serializers, stdErrSerialize) {\n  for (const i in args) {\n    if (stdErrSerialize && args[i] instanceof Error) {\n      args[i] = pino.stdSerializers.err(args[i])\n    } else if (typeof args[i] === 'object' && !Array.isArray(args[i])) {\n      for (const k in args[i]) {\n        if (serialize && serialize.indexOf(k) > -1 && k in serializers) {\n          args[i][k] = serializers[k](args[i][k])\n        }\n      }\n    }\n  }\n}\n\nfunction bind (parent, bindings, level) {\n  return function () {\n    const args = new Array(1 + arguments.length)\n    args[0] = bindings\n    for (var i = 1; i < args.length; i++) {\n      args[i] = arguments[i - 1]\n    }\n    return parent[level].apply(this, args)\n  }\n}\n\nfunction transmit (logger, opts, args) {\n  const send = opts.send\n  const ts = opts.ts\n  const methodLevel = opts.methodLevel\n  const methodValue = opts.methodValue\n  const val = opts.val\n  const bindings = logger._logEvent.bindings\n\n  applySerializers(\n    args,\n    logger._serialize || Object.keys(logger.serializers),\n    logger.serializers,\n    logger._stdErrSerialize === undefined ? true : logger._stdErrSerialize\n  )\n  logger._logEvent.ts = ts\n  logger._logEvent.messages = args.filter(function (arg) {\n    // bindings can only be objects, so reference equality check via indexOf is fine\n    return bindings.indexOf(arg) === -1\n  })\n\n  logger._logEvent.level.label = methodLevel\n  logger._logEvent.level.value = methodValue\n\n  send(methodLevel, logger._logEvent, val)\n\n  logger._logEvent = createLogEventShape(bindings)\n}\n\nfunction createLogEventShape (bindings) {\n  return {\n    ts: 0,\n    messages: [],\n    bindings: bindings || [],\n    level: { label: '', value: 0 }\n  }\n}\n\nfunction asErrValue (err) {\n  const obj = {\n    type: err.constructor.name,\n    msg: err.message,\n    stack: err.stack\n  }\n  for (const key in err) {\n    if (obj[key] === undefined) {\n      obj[key] = err[key]\n    }\n  }\n  return obj\n}\n\nfunction getTimeFunction (opts) {\n  if (typeof opts.timestamp === 'function') {\n    return opts.timestamp\n  }\n  if (opts.timestamp === false) {\n    return nullTime\n  }\n  return epochTime\n}\n\nfunction mock () { return {} }\nfunction passthrough (a) { return a }\nfunction noop () {}\n\nfunction nullTime () { return false }\nfunction epochTime () { return Date.now() }\nfunction unixTime () { return Math.round(Date.now() / 1000.0) }\nfunction isoTime () { return new Date(Date.now()).toISOString() } // using Date.now() for testability\n\n/* eslint-disable */\n/* istanbul ignore next */\nfunction pfGlobalThisOrFallback () {\n  function defd (o) { return typeof o !== 'undefined' && o }\n  try {\n    if (typeof globalThis !== 'undefined') return globalThis\n    Object.defineProperty(Object.prototype, 'globalThis', {\n      get: function () {\n        delete Object.prototype.globalThis\n        return (this.globalThis = this)\n      },\n      configurable: true\n    })\n    return globalThis\n  } catch (e) {\n    return defd(self) || defd(window) || defd(this) || {}\n  }\n}\n/* eslint-enable */\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package sha512 implements SHA-2-512 cryptographic hash function.\n */\n\nimport { SerializableHash } from \"@stablelib/hash\";\nimport { readUint32BE, writeUint32BE } from \"@stablelib/binary\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const DIGEST_LENGTH = 64;\nexport const BLOCK_SIZE = 128;\n\n/**\n * SHA-2-512 cryptographic hash algorithm.\n */\nexport class SHA512 implements SerializableHash {\n    /** Length of hash output */\n    readonly digestLength: number = DIGEST_LENGTH;\n\n    /** Block size */\n    readonly blockSize: number = BLOCK_SIZE;\n\n    // Note: Int32Array is used instead of Uint32Array for performance reasons.\n    protected _stateHi = new Int32Array(8); // hash state, high bytes\n    protected _stateLo = new Int32Array(8); // hash state, low bytes\n    private _tempHi = new Int32Array(16); // temporary state, high bytes\n    private _tempLo = new Int32Array(16); // temporary state, low bytes\n    private _buffer = new Uint8Array(256); // buffer for data to hash\n    private _bufferLength = 0; // number of bytes in buffer\n    private _bytesHashed = 0; // number of total bytes hashed\n    private _finished = false; // indicates whether the hash was finalized\n\n    constructor() {\n        this.reset();\n    }\n\n    protected _initState() {\n        this._stateHi[0] = 0x6a09e667;\n        this._stateHi[1] = 0xbb67ae85;\n        this._stateHi[2] = 0x3c6ef372;\n        this._stateHi[3] = 0xa54ff53a;\n        this._stateHi[4] = 0x510e527f;\n        this._stateHi[5] = 0x9b05688c;\n        this._stateHi[6] = 0x1f83d9ab;\n        this._stateHi[7] = 0x5be0cd19;\n\n        this._stateLo[0] = 0xf3bcc908;\n        this._stateLo[1] = 0x84caa73b;\n        this._stateLo[2] = 0xfe94f82b;\n        this._stateLo[3] = 0x5f1d36f1;\n        this._stateLo[4] = 0xade682d1;\n        this._stateLo[5] = 0x2b3e6c1f;\n        this._stateLo[6] = 0xfb41bd6b;\n        this._stateLo[7] = 0x137e2179;\n    }\n\n    /**\n     * Resets hash state making it possible\n     * to re-use this instance to hash other data.\n     */\n    reset(): this {\n        this._initState();\n        this._bufferLength = 0;\n        this._bytesHashed = 0;\n        this._finished = false;\n        return this;\n    }\n\n    /**\n     * Cleans internal buffers and resets hash state.\n     */\n    clean() {\n        wipe(this._buffer);\n        wipe(this._tempHi);\n        wipe(this._tempLo);\n        this.reset();\n    }\n\n    /**\n     * Updates hash state with the given data.\n     *\n     * Throws error when trying to update already finalized hash:\n     * instance must be reset to update it again.\n     */\n    update(data: Uint8Array, dataLength: number = data.length): this {\n        if (this._finished) {\n            throw new Error(\"SHA512: can't update because hash was finished.\");\n        }\n        let dataPos = 0;\n        this._bytesHashed += dataLength;\n        if (this._bufferLength > 0) {\n            while (this._bufferLength < BLOCK_SIZE && dataLength > 0) {\n                this._buffer[this._bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this._bufferLength === this.blockSize) {\n                hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo,\n                    this._buffer, 0, this.blockSize);\n                this._bufferLength = 0;\n            }\n        }\n        if (dataLength >= this.blockSize) {\n            dataPos = hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo,\n                data, dataPos, dataLength);\n            dataLength %= this.blockSize;\n        }\n        while (dataLength > 0) {\n            this._buffer[this._bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    }\n\n    /**\n     * Finalizes hash state and puts hash into out.\n     * If hash was already finalized, puts the same value.\n     */\n    finish(out: Uint8Array): this {\n        if (!this._finished) {\n            const bytesHashed = this._bytesHashed;\n            const left = this._bufferLength;\n            const bitLenHi = (bytesHashed / 0x20000000) | 0;\n            const bitLenLo = bytesHashed << 3;\n            const padLength = (bytesHashed % 128 < 112) ? 128 : 256;\n\n            this._buffer[left] = 0x80;\n            for (let i = left + 1; i < padLength - 8; i++) {\n                this._buffer[i] = 0;\n            }\n            writeUint32BE(bitLenHi, this._buffer, padLength - 8);\n            writeUint32BE(bitLenLo, this._buffer, padLength - 4);\n\n            hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, padLength);\n\n            this._finished = true;\n        }\n\n        for (let i = 0; i < this.digestLength / 8; i++) {\n            writeUint32BE(this._stateHi[i], out, i * 8);\n            writeUint32BE(this._stateLo[i], out, i * 8 + 4);\n        }\n\n        return this;\n    }\n\n    /**\n     * Returns the final hash digest.\n     */\n    digest(): Uint8Array {\n        const out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    }\n\n    /**\n     * Function useful for HMAC/PBKDF2 optimization. Returns hash state to be\n     * used with restoreState(). Only chain value is saved, not buffers or\n     * other state variables.\n     */\n    saveState(): SavedState {\n        if (this._finished) {\n            throw new Error(\"SHA256: cannot save finished state\");\n        }\n        return {\n            stateHi: new Int32Array(this._stateHi),\n            stateLo: new Int32Array(this._stateLo),\n            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,\n            bufferLength: this._bufferLength,\n            bytesHashed: this._bytesHashed\n        };\n    }\n\n    /**\n     * Function useful for HMAC/PBKDF2 optimization. Restores state saved by\n     * saveState() and sets bytesHashed to the given value.\n     */\n    restoreState(savedState: SavedState): this {\n        this._stateHi.set(savedState.stateHi);\n        this._stateLo.set(savedState.stateLo);\n        this._bufferLength = savedState.bufferLength;\n        if (savedState.buffer) {\n            this._buffer.set(savedState.buffer);\n        }\n        this._bytesHashed = savedState.bytesHashed;\n        this._finished = false;\n        return this;\n    }\n\n    /**\n     * Cleans state returned by saveState().\n     */\n    cleanSavedState(savedState: SavedState) {\n        wipe(savedState.stateHi);\n        wipe(savedState.stateLo);\n        if (savedState.buffer) {\n            wipe(savedState.buffer);\n        }\n        savedState.bufferLength = 0;\n        savedState.bytesHashed = 0;\n    }\n}\n\nexport type SavedState = {\n    stateHi: Int32Array;\n    stateLo: Int32Array;\n    buffer: Uint8Array | undefined;\n    bufferLength: number;\n    bytesHashed: number;\n};\n\n// Constants\nconst K = new Int32Array([\n    0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n    0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n    0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n    0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n    0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n    0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n    0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n    0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n    0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n    0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n    0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n    0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n    0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n    0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n    0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n    0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n    0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n    0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n    0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n    0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n    0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n    0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n    0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n    0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n    0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n    0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n    0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n    0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n    0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n    0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n    0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n    0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n    0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n    0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n    0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n    0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n    0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n    0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n    0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n    0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]);\n\n\nfunction hashBlocks(wh: Int32Array, wl: Int32Array, hh: Int32Array, hl: Int32Array,\n    m: Uint8Array, pos: number, len: number): number {\n\n    let ah0 = hh[0],\n        ah1 = hh[1],\n        ah2 = hh[2],\n        ah3 = hh[3],\n        ah4 = hh[4],\n        ah5 = hh[5],\n        ah6 = hh[6],\n        ah7 = hh[7],\n\n        al0 = hl[0],\n        al1 = hl[1],\n        al2 = hl[2],\n        al3 = hl[3],\n        al4 = hl[4],\n        al5 = hl[5],\n        al6 = hl[6],\n        al7 = hl[7];\n\n    let h: number, l: number;\n    let th: number, tl: number;\n    let a: number, b: number, c: number, d: number;\n\n    while (len >= 128) {\n        for (let i = 0; i < 16; i++) {\n            const j = 8 * i + pos;\n            wh[i] = readUint32BE(m, j);\n            wl[i] = readUint32BE(m, j + 4);\n        }\n        for (let i = 0; i < 80; i++) {\n            let bh0 = ah0;\n            let bh1 = ah1;\n            let bh2 = ah2;\n            let bh3 = ah3;\n            let bh4 = ah4;\n            let bh5 = ah5;\n            let bh6 = ah6;\n            let bh7 = ah7;\n\n            let bl0 = al0;\n            let bl1 = al1;\n            let bl2 = al2;\n            let bl3 = al3;\n            let bl4 = al4;\n            let bl5 = al5;\n            let bl6 = al6;\n            let bl7 = al7;\n\n            // add\n            h = ah7;\n            l = al7;\n\n            a = l & 0xffff; b = l >>> 16;\n            c = h & 0xffff; d = h >>> 16;\n\n            // Sigma1\n            h = ((ah4 >>> 14) | (al4 << (32 - 14))) ^ ((ah4 >>> 18) |\n                (al4 << (32 - 18))) ^ ((al4 >>> (41 - 32)) | (ah4 << (32 - (41 - 32))));\n            l = ((al4 >>> 14) | (ah4 << (32 - 14))) ^ ((al4 >>> 18) |\n                (ah4 << (32 - 18))) ^ ((ah4 >>> (41 - 32)) | (al4 << (32 - (41 - 32))));\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            // Ch\n            h = (ah4 & ah5) ^ (~ah4 & ah6);\n            l = (al4 & al5) ^ (~al4 & al6);\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            // K\n            h = K[i * 2];\n            l = K[i * 2 + 1];\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            // w\n            h = wh[i % 16];\n            l = wl[i % 16];\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n\n            th = c & 0xffff | d << 16;\n            tl = a & 0xffff | b << 16;\n\n            // add\n            h = th;\n            l = tl;\n\n            a = l & 0xffff; b = l >>> 16;\n            c = h & 0xffff; d = h >>> 16;\n\n            // Sigma0\n            h = ((ah0 >>> 28) | (al0 << (32 - 28))) ^ ((al0 >>> (34 - 32)) |\n                (ah0 << (32 - (34 - 32)))) ^ ((al0 >>> (39 - 32)) | (ah0 << (32 - (39 - 32))));\n            l = ((al0 >>> 28) | (ah0 << (32 - 28))) ^ ((ah0 >>> (34 - 32)) |\n                (al0 << (32 - (34 - 32)))) ^ ((ah0 >>> (39 - 32)) | (al0 << (32 - (39 - 32))));\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            // Maj\n            h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n            l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n\n            bh7 = (c & 0xffff) | (d << 16);\n            bl7 = (a & 0xffff) | (b << 16);\n\n            // add\n            h = bh3;\n            l = bl3;\n\n            a = l & 0xffff; b = l >>> 16;\n            c = h & 0xffff; d = h >>> 16;\n\n            h = th;\n            l = tl;\n\n            a += l & 0xffff; b += l >>> 16;\n            c += h & 0xffff; d += h >>> 16;\n\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n\n            bh3 = (c & 0xffff) | (d << 16);\n            bl3 = (a & 0xffff) | (b << 16);\n\n            ah1 = bh0;\n            ah2 = bh1;\n            ah3 = bh2;\n            ah4 = bh3;\n            ah5 = bh4;\n            ah6 = bh5;\n            ah7 = bh6;\n            ah0 = bh7;\n\n            al1 = bl0;\n            al2 = bl1;\n            al3 = bl2;\n            al4 = bl3;\n            al5 = bl4;\n            al6 = bl5;\n            al7 = bl6;\n            al0 = bl7;\n\n            if (i % 16 === 15) {\n                for (let j = 0; j < 16; j++) {\n                    // add\n                    h = wh[j];\n                    l = wl[j];\n\n                    a = l & 0xffff; b = l >>> 16;\n                    c = h & 0xffff; d = h >>> 16;\n\n                    h = wh[(j + 9) % 16];\n                    l = wl[(j + 9) % 16];\n\n                    a += l & 0xffff; b += l >>> 16;\n                    c += h & 0xffff; d += h >>> 16;\n\n                    // sigma0\n                    th = wh[(j + 1) % 16];\n                    tl = wl[(j + 1) % 16];\n                    h = ((th >>> 1) | (tl << (32 - 1))) ^ ((th >>> 8) |\n                        (tl << (32 - 8))) ^ (th >>> 7);\n                    l = ((tl >>> 1) | (th << (32 - 1))) ^ ((tl >>> 8) |\n                        (th << (32 - 8))) ^ ((tl >>> 7) | (th << (32 - 7)));\n\n                    a += l & 0xffff; b += l >>> 16;\n                    c += h & 0xffff; d += h >>> 16;\n\n                    // sigma1\n                    th = wh[(j + 14) % 16];\n                    tl = wl[(j + 14) % 16];\n                    h = ((th >>> 19) | (tl << (32 - 19))) ^ ((tl >>> (61 - 32)) |\n                        (th << (32 - (61 - 32)))) ^ (th >>> 6);\n                    l = ((tl >>> 19) | (th << (32 - 19))) ^ ((th >>> (61 - 32)) |\n                        (tl << (32 - (61 - 32)))) ^ ((tl >>> 6) | (th << (32 - 6)));\n\n                    a += l & 0xffff; b += l >>> 16;\n                    c += h & 0xffff; d += h >>> 16;\n\n                    b += a >>> 16;\n                    c += b >>> 16;\n                    d += c >>> 16;\n\n                    wh[j] = (c & 0xffff) | (d << 16);\n                    wl[j] = (a & 0xffff) | (b << 16);\n                }\n            }\n        }\n\n        // add\n        h = ah0;\n        l = al0;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[0];\n        l = hl[0];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[0] = ah0 = (c & 0xffff) | (d << 16);\n        hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n        h = ah1;\n        l = al1;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[1];\n        l = hl[1];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[1] = ah1 = (c & 0xffff) | (d << 16);\n        hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n        h = ah2;\n        l = al2;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[2];\n        l = hl[2];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[2] = ah2 = (c & 0xffff) | (d << 16);\n        hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n        h = ah3;\n        l = al3;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[3];\n        l = hl[3];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[3] = ah3 = (c & 0xffff) | (d << 16);\n        hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n        h = ah4;\n        l = al4;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[4];\n        l = hl[4];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[4] = ah4 = (c & 0xffff) | (d << 16);\n        hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n        h = ah5;\n        l = al5;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[5];\n        l = hl[5];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[5] = ah5 = (c & 0xffff) | (d << 16);\n        hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n        h = ah6;\n        l = al6;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[6];\n        l = hl[6];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[6] = ah6 = (c & 0xffff) | (d << 16);\n        hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n        h = ah7;\n        l = al7;\n\n        a = l & 0xffff; b = l >>> 16;\n        c = h & 0xffff; d = h >>> 16;\n\n        h = hh[7];\n        l = hl[7];\n\n        a += l & 0xffff; b += l >>> 16;\n        c += h & 0xffff; d += h >>> 16;\n\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n\n        hh[7] = ah7 = (c & 0xffff) | (d << 16);\n        hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n        pos += 128;\n        len -= 128;\n    }\n\n    return pos;\n}\n\nexport function hash(data: Uint8Array): Uint8Array {\n    const h = new SHA512();\n    h.update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n", "// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package ed25519 implements Ed25519 public-key signature algorithm.\n */\n\nimport { randomBytes, RandomSource } from \"@stablelib/random\";\nimport { hash, SHA512 } from \"@stablelib/sha512\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const SIGNATURE_LENGTH = 64;\nexport const PUBLIC_KEY_LENGTH = 32;\nexport const SECRET_KEY_LENGTH = 64;\nexport const SEED_LENGTH = 32;\n\n// TODO(dchest): some functions are copies of ../kex/x25519.\n// Find a way to combine them without opening up to public.\n\n// Ported from TweetNaCl.js, which was ported from TweetNaCl\n// by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n// https://tweetnacl.js.org\n\n// TweetNaCl contributors:\n// Daniel J. Bernstein, Bernard van Gastel, Wesley Janssen,\n// Tanja Lange, Peter Schwabe, Sjaak Smetsers.\n// Public domain.\n// https://tweetnacl.cr.yp.to/\n\ntype GF = Float64Array;\n\n// Returns new zero-filled 16-element GF (Float64Array).\n// If passed an array of numbers, prefills the returned\n// array with them.\n//\n// We use Float64Array, because we need 48-bit numbers\n// for this implementation.\nfunction gf(init?: number[]): GF {\n    const r = new Float64Array(16);\n    if (init) {\n        for (let i = 0; i < init.length; i++) {\n            r[i] = init[i];\n        }\n    }\n    return r;\n}\n\n// Base point.\nconst _9 = new Uint8Array(32); _9[0] = 9;\n\nconst gf0 = gf();\n\nconst gf1 = gf([1]);\n\nconst D = gf([\n    0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070,\n    0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203\n]);\n\nconst D2 = gf([\n    0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0,\n    0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406\n]);\n\nconst X = gf([\n    0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c,\n    0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169\n]);\n\nconst Y = gf([\n    0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666,\n    0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666\n]);\n\nconst I = gf([\n    0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43,\n    0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83\n]);\n\nfunction set25519(r: GF, a: GF) {\n    for (let i = 0; i < 16; i++) {\n        r[i] = a[i] | 0;\n    }\n}\n\nfunction car25519(o: GF) {\n    let c = 1;\n    for (let i = 0; i < 16; i++) {\n        let v = o[i] + c + 65535;\n        c = Math.floor(v / 65536);\n        o[i] = v - c * 65536;\n    }\n    o[0] += c - 1 + 37 * (c - 1);\n}\n\nfunction sel25519(p: GF, q: GF, b: number) {\n    const c = ~(b - 1);\n    for (let i = 0; i < 16; i++) {\n        const t = c & (p[i] ^ q[i]);\n        p[i] ^= t;\n        q[i] ^= t;\n    }\n}\n\nfunction pack25519(o: Uint8Array, n: GF) {\n    const m = gf();\n    const t = gf();\n    for (let i = 0; i < 16; i++) {\n        t[i] = n[i];\n    }\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (let j = 0; j < 2; j++) {\n        m[0] = t[0] - 0xffed;\n        for (let i = 1; i < 15; i++) {\n            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n            m[i - 1] &= 0xffff;\n        }\n        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n        const b = (m[15] >> 16) & 1;\n        m[14] &= 0xffff;\n        sel25519(t, m, 1 - b);\n    }\n    for (let i = 0; i < 16; i++) {\n        o[2 * i] = t[i] & 0xff;\n        o[2 * i + 1] = t[i] >> 8;\n    }\n}\n\nfunction verify32(x: Uint8Array, y: Uint8Array) {\n    let d = 0;\n    for (let i = 0; i < 32; i++) {\n        d |= x[i] ^ y[i];\n    }\n    return (1 & ((d - 1) >>> 8)) - 1;\n}\n\n\nfunction neq25519(a: GF, b: GF) {\n    const c = new Uint8Array(32);\n    const d = new Uint8Array(32);\n    pack25519(c, a);\n    pack25519(d, b);\n    return verify32(c, d);\n}\n\nfunction par25519(a: GF) {\n    const d = new Uint8Array(32);\n    pack25519(d, a);\n    return d[0] & 1;\n}\n\nfunction unpack25519(o: GF, n: Uint8Array) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    }\n    o[15] &= 0x7fff;\n}\n\nfunction add(o: GF, a: GF, b: GF) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] + b[i];\n    }\n}\n\nfunction sub(o: GF, a: GF, b: GF) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] - b[i];\n    }\n}\n\nfunction mul(o: GF, a: GF, b: GF) {\n    let v: number, c: number,\n        t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0,\n        t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n        t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n        t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n        b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3],\n        b4 = b[4],\n        b5 = b[5],\n        b6 = b[6],\n        b7 = b[7],\n        b8 = b[8],\n        b9 = b[9],\n        b10 = b[10],\n        b11 = b[11],\n        b12 = b[12],\n        b13 = b[13],\n        b14 = b[14],\n        b15 = b[15];\n\n    v = a[0];\n    t0 += v * b0;\n    t1 += v * b1;\n    t2 += v * b2;\n    t3 += v * b3;\n    t4 += v * b4;\n    t5 += v * b5;\n    t6 += v * b6;\n    t7 += v * b7;\n    t8 += v * b8;\n    t9 += v * b9;\n    t10 += v * b10;\n    t11 += v * b11;\n    t12 += v * b12;\n    t13 += v * b13;\n    t14 += v * b14;\n    t15 += v * b15;\n    v = a[1];\n    t1 += v * b0;\n    t2 += v * b1;\n    t3 += v * b2;\n    t4 += v * b3;\n    t5 += v * b4;\n    t6 += v * b5;\n    t7 += v * b6;\n    t8 += v * b7;\n    t9 += v * b8;\n    t10 += v * b9;\n    t11 += v * b10;\n    t12 += v * b11;\n    t13 += v * b12;\n    t14 += v * b13;\n    t15 += v * b14;\n    t16 += v * b15;\n    v = a[2];\n    t2 += v * b0;\n    t3 += v * b1;\n    t4 += v * b2;\n    t5 += v * b3;\n    t6 += v * b4;\n    t7 += v * b5;\n    t8 += v * b6;\n    t9 += v * b7;\n    t10 += v * b8;\n    t11 += v * b9;\n    t12 += v * b10;\n    t13 += v * b11;\n    t14 += v * b12;\n    t15 += v * b13;\n    t16 += v * b14;\n    t17 += v * b15;\n    v = a[3];\n    t3 += v * b0;\n    t4 += v * b1;\n    t5 += v * b2;\n    t6 += v * b3;\n    t7 += v * b4;\n    t8 += v * b5;\n    t9 += v * b6;\n    t10 += v * b7;\n    t11 += v * b8;\n    t12 += v * b9;\n    t13 += v * b10;\n    t14 += v * b11;\n    t15 += v * b12;\n    t16 += v * b13;\n    t17 += v * b14;\n    t18 += v * b15;\n    v = a[4];\n    t4 += v * b0;\n    t5 += v * b1;\n    t6 += v * b2;\n    t7 += v * b3;\n    t8 += v * b4;\n    t9 += v * b5;\n    t10 += v * b6;\n    t11 += v * b7;\n    t12 += v * b8;\n    t13 += v * b9;\n    t14 += v * b10;\n    t15 += v * b11;\n    t16 += v * b12;\n    t17 += v * b13;\n    t18 += v * b14;\n    t19 += v * b15;\n    v = a[5];\n    t5 += v * b0;\n    t6 += v * b1;\n    t7 += v * b2;\n    t8 += v * b3;\n    t9 += v * b4;\n    t10 += v * b5;\n    t11 += v * b6;\n    t12 += v * b7;\n    t13 += v * b8;\n    t14 += v * b9;\n    t15 += v * b10;\n    t16 += v * b11;\n    t17 += v * b12;\n    t18 += v * b13;\n    t19 += v * b14;\n    t20 += v * b15;\n    v = a[6];\n    t6 += v * b0;\n    t7 += v * b1;\n    t8 += v * b2;\n    t9 += v * b3;\n    t10 += v * b4;\n    t11 += v * b5;\n    t12 += v * b6;\n    t13 += v * b7;\n    t14 += v * b8;\n    t15 += v * b9;\n    t16 += v * b10;\n    t17 += v * b11;\n    t18 += v * b12;\n    t19 += v * b13;\n    t20 += v * b14;\n    t21 += v * b15;\n    v = a[7];\n    t7 += v * b0;\n    t8 += v * b1;\n    t9 += v * b2;\n    t10 += v * b3;\n    t11 += v * b4;\n    t12 += v * b5;\n    t13 += v * b6;\n    t14 += v * b7;\n    t15 += v * b8;\n    t16 += v * b9;\n    t17 += v * b10;\n    t18 += v * b11;\n    t19 += v * b12;\n    t20 += v * b13;\n    t21 += v * b14;\n    t22 += v * b15;\n    v = a[8];\n    t8 += v * b0;\n    t9 += v * b1;\n    t10 += v * b2;\n    t11 += v * b3;\n    t12 += v * b4;\n    t13 += v * b5;\n    t14 += v * b6;\n    t15 += v * b7;\n    t16 += v * b8;\n    t17 += v * b9;\n    t18 += v * b10;\n    t19 += v * b11;\n    t20 += v * b12;\n    t21 += v * b13;\n    t22 += v * b14;\n    t23 += v * b15;\n    v = a[9];\n    t9 += v * b0;\n    t10 += v * b1;\n    t11 += v * b2;\n    t12 += v * b3;\n    t13 += v * b4;\n    t14 += v * b5;\n    t15 += v * b6;\n    t16 += v * b7;\n    t17 += v * b8;\n    t18 += v * b9;\n    t19 += v * b10;\n    t20 += v * b11;\n    t21 += v * b12;\n    t22 += v * b13;\n    t23 += v * b14;\n    t24 += v * b15;\n    v = a[10];\n    t10 += v * b0;\n    t11 += v * b1;\n    t12 += v * b2;\n    t13 += v * b3;\n    t14 += v * b4;\n    t15 += v * b5;\n    t16 += v * b6;\n    t17 += v * b7;\n    t18 += v * b8;\n    t19 += v * b9;\n    t20 += v * b10;\n    t21 += v * b11;\n    t22 += v * b12;\n    t23 += v * b13;\n    t24 += v * b14;\n    t25 += v * b15;\n    v = a[11];\n    t11 += v * b0;\n    t12 += v * b1;\n    t13 += v * b2;\n    t14 += v * b3;\n    t15 += v * b4;\n    t16 += v * b5;\n    t17 += v * b6;\n    t18 += v * b7;\n    t19 += v * b8;\n    t20 += v * b9;\n    t21 += v * b10;\n    t22 += v * b11;\n    t23 += v * b12;\n    t24 += v * b13;\n    t25 += v * b14;\n    t26 += v * b15;\n    v = a[12];\n    t12 += v * b0;\n    t13 += v * b1;\n    t14 += v * b2;\n    t15 += v * b3;\n    t16 += v * b4;\n    t17 += v * b5;\n    t18 += v * b6;\n    t19 += v * b7;\n    t20 += v * b8;\n    t21 += v * b9;\n    t22 += v * b10;\n    t23 += v * b11;\n    t24 += v * b12;\n    t25 += v * b13;\n    t26 += v * b14;\n    t27 += v * b15;\n    v = a[13];\n    t13 += v * b0;\n    t14 += v * b1;\n    t15 += v * b2;\n    t16 += v * b3;\n    t17 += v * b4;\n    t18 += v * b5;\n    t19 += v * b6;\n    t20 += v * b7;\n    t21 += v * b8;\n    t22 += v * b9;\n    t23 += v * b10;\n    t24 += v * b11;\n    t25 += v * b12;\n    t26 += v * b13;\n    t27 += v * b14;\n    t28 += v * b15;\n    v = a[14];\n    t14 += v * b0;\n    t15 += v * b1;\n    t16 += v * b2;\n    t17 += v * b3;\n    t18 += v * b4;\n    t19 += v * b5;\n    t20 += v * b6;\n    t21 += v * b7;\n    t22 += v * b8;\n    t23 += v * b9;\n    t24 += v * b10;\n    t25 += v * b11;\n    t26 += v * b12;\n    t27 += v * b13;\n    t28 += v * b14;\n    t29 += v * b15;\n    v = a[15];\n    t15 += v * b0;\n    t16 += v * b1;\n    t17 += v * b2;\n    t18 += v * b3;\n    t19 += v * b4;\n    t20 += v * b5;\n    t21 += v * b6;\n    t22 += v * b7;\n    t23 += v * b8;\n    t24 += v * b9;\n    t25 += v * b10;\n    t26 += v * b11;\n    t27 += v * b12;\n    t28 += v * b13;\n    t29 += v * b14;\n    t30 += v * b15;\n\n    t0 += 38 * t16;\n    t1 += 38 * t17;\n    t2 += 38 * t18;\n    t3 += 38 * t19;\n    t4 += 38 * t20;\n    t5 += 38 * t21;\n    t6 += 38 * t22;\n    t7 += 38 * t23;\n    t8 += 38 * t24;\n    t9 += 38 * t25;\n    t10 += 38 * t26;\n    t11 += 38 * t27;\n    t12 += 38 * t28;\n    t13 += 38 * t29;\n    t14 += 38 * t30;\n    // t15 left as is\n\n    // first car\n    c = 1;\n    v = t0 + c + 65535; c = Math.floor(v / 65536); t0 = v - c * 65536;\n    v = t1 + c + 65535; c = Math.floor(v / 65536); t1 = v - c * 65536;\n    v = t2 + c + 65535; c = Math.floor(v / 65536); t2 = v - c * 65536;\n    v = t3 + c + 65535; c = Math.floor(v / 65536); t3 = v - c * 65536;\n    v = t4 + c + 65535; c = Math.floor(v / 65536); t4 = v - c * 65536;\n    v = t5 + c + 65535; c = Math.floor(v / 65536); t5 = v - c * 65536;\n    v = t6 + c + 65535; c = Math.floor(v / 65536); t6 = v - c * 65536;\n    v = t7 + c + 65535; c = Math.floor(v / 65536); t7 = v - c * 65536;\n    v = t8 + c + 65535; c = Math.floor(v / 65536); t8 = v - c * 65536;\n    v = t9 + c + 65535; c = Math.floor(v / 65536); t9 = v - c * 65536;\n    v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n    v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n    v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n    v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n    v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n    v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n\n    // second car\n    c = 1;\n    v = t0 + c + 65535; c = Math.floor(v / 65536); t0 = v - c * 65536;\n    v = t1 + c + 65535; c = Math.floor(v / 65536); t1 = v - c * 65536;\n    v = t2 + c + 65535; c = Math.floor(v / 65536); t2 = v - c * 65536;\n    v = t3 + c + 65535; c = Math.floor(v / 65536); t3 = v - c * 65536;\n    v = t4 + c + 65535; c = Math.floor(v / 65536); t4 = v - c * 65536;\n    v = t5 + c + 65535; c = Math.floor(v / 65536); t5 = v - c * 65536;\n    v = t6 + c + 65535; c = Math.floor(v / 65536); t6 = v - c * 65536;\n    v = t7 + c + 65535; c = Math.floor(v / 65536); t7 = v - c * 65536;\n    v = t8 + c + 65535; c = Math.floor(v / 65536); t8 = v - c * 65536;\n    v = t9 + c + 65535; c = Math.floor(v / 65536); t9 = v - c * 65536;\n    v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n    v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n    v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n    v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n    v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n    v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n\n    o[0] = t0;\n    o[1] = t1;\n    o[2] = t2;\n    o[3] = t3;\n    o[4] = t4;\n    o[5] = t5;\n    o[6] = t6;\n    o[7] = t7;\n    o[8] = t8;\n    o[9] = t9;\n    o[10] = t10;\n    o[11] = t11;\n    o[12] = t12;\n    o[13] = t13;\n    o[14] = t14;\n    o[15] = t15;\n}\n\nfunction square(o: GF, a: GF) {\n    mul(o, a, a);\n}\n\nfunction inv25519(o: GF, i: GF) {\n    const c = gf();\n    let a: number;\n    for (a = 0; a < 16; a++) {\n        c[a] = i[a];\n    }\n    for (a = 253; a >= 0; a--) {\n        square(c, c);\n        if (a !== 2 && a !== 4) {\n            mul(c, c, i);\n        }\n    }\n    for (a = 0; a < 16; a++) {\n        o[a] = c[a];\n    }\n}\n\nfunction pow2523(o: GF, i: GF) {\n    const c = gf();\n    let a: number;\n    for (a = 0; a < 16; a++) {\n        c[a] = i[a];\n    }\n    for (a = 250; a >= 0; a--) {\n        square(c, c);\n        if (a !== 1) {\n            mul(c, c, i);\n        }\n    }\n    for (a = 0; a < 16; a++) {\n        o[a] = c[a];\n    }\n}\n\n\nfunction edadd(p: GF[], q: GF[]) {\n    const a = gf(), b = gf(), c = gf(),\n        d = gf(), e = gf(), f = gf(),\n        g = gf(), h = gf(), t = gf();\n\n    sub(a, p[1], p[0]);\n    sub(t, q[1], q[0]);\n    mul(a, a, t);\n    add(b, p[0], p[1]);\n    add(t, q[0], q[1]);\n    mul(b, b, t);\n    mul(c, p[3], q[3]);\n    mul(c, c, D2);\n    mul(d, p[2], q[2]);\n    add(d, d, d);\n    sub(e, b, a);\n    sub(f, d, c);\n    add(g, d, c);\n    add(h, b, a);\n\n    mul(p[0], e, f);\n    mul(p[1], h, g);\n    mul(p[2], g, f);\n    mul(p[3], e, h);\n}\n\nfunction cswap(p: GF[], q: GF[], b: number) {\n    for (let i = 0; i < 4; i++) {\n        sel25519(p[i], q[i], b);\n    }\n}\n\nfunction pack(r: Uint8Array, p: GF[]) {\n    const tx = gf(), ty = gf(), zi = gf();\n    inv25519(zi, p[2]);\n    mul(tx, p[0], zi);\n    mul(ty, p[1], zi);\n    pack25519(r, ty);\n    r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p: GF[], q: GF[], s: Uint8Array) {\n    set25519(p[0], gf0);\n    set25519(p[1], gf1);\n    set25519(p[2], gf1);\n    set25519(p[3], gf0);\n    for (let i = 255; i >= 0; --i) {\n        const b = (s[(i / 8) | 0] >> (i & 7)) & 1;\n        cswap(p, q, b);\n        edadd(q, p);\n        edadd(p, p);\n        cswap(p, q, b);\n    }\n}\n\nfunction scalarbase(p: GF[], s: Uint8Array) {\n    const q = [gf(), gf(), gf(), gf()];\n    set25519(q[0], X);\n    set25519(q[1], Y);\n    set25519(q[2], gf1);\n    mul(q[3], X, Y);\n    scalarmult(p, q, s);\n}\n\nexport interface KeyPair {\n    publicKey: Uint8Array;\n    secretKey: Uint8Array;\n}\n\n// Generates key pair from secret 32-byte seed.\nexport function generateKeyPairFromSeed(seed: Uint8Array): KeyPair {\n    if (seed.length !== SEED_LENGTH) {\n        throw new Error(`ed25519: seed must be ${SEED_LENGTH} bytes`);\n    }\n\n    const d = hash(seed);\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n\n    const publicKey = new Uint8Array(32);\n    const p = [gf(), gf(), gf(), gf()];\n    scalarbase(p, d);\n    pack(publicKey, p);\n\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n\n    return {\n        publicKey,\n        secretKey\n    };\n}\n\nexport function generateKeyPair(prng?: RandomSource): KeyPair {\n    const seed = randomBytes(32, prng);\n    const result = generateKeyPairFromSeed(seed);\n    wipe(seed);\n    return result;\n}\n\nexport function extractPublicKeyFromSecretKey(secretKey: Uint8Array): Uint8Array {\n    if (secretKey.length !== SECRET_KEY_LENGTH) {\n        throw new Error(`ed25519: secret key must be ${SECRET_KEY_LENGTH} bytes`);\n    }\n    return new Uint8Array(secretKey.subarray(32));\n}\n\nconst L = new Float64Array([\n    0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2,\n    0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10\n]);\n\nfunction modL(r: Uint8Array, x: Float64Array) {\n    let carry: number;\n    let i: number;\n    let j: number;\n    let k: number;\n    for (i = 63; i >= 32; --i) {\n        carry = 0;\n        for (j = i - 32, k = i - 12; j < k; ++j) {\n            x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n            carry = Math.floor((x[j] + 128) / 256);\n            x[j] -= carry * 256;\n        }\n        x[j] += carry;\n        x[i] = 0;\n    }\n    carry = 0;\n    for (j = 0; j < 32; j++) {\n        x[j] += carry - (x[31] >> 4) * L[j];\n        carry = x[j] >> 8;\n        x[j] &= 255;\n    }\n    for (j = 0; j < 32; j++) {\n        x[j] -= carry * L[j];\n    }\n    for (i = 0; i < 32; i++) {\n        x[i + 1] += x[i] >> 8;\n        r[i] = x[i] & 255;\n    }\n}\n\nfunction reduce(r: Uint8Array) {\n    const x = new Float64Array(64);\n    for (let i = 0; i < 64; i++) {\n        x[i] = r[i];\n    }\n    for (let i = 0; i < 64; i++) {\n        r[i] = 0;\n    }\n    modL(r, x);\n}\n\n// Returns 64-byte signature of the message under the 64-byte secret key.\nexport function sign(secretKey: Uint8Array, message: Uint8Array): Uint8Array {\n    const x = new Float64Array(64);\n    const p = [gf(), gf(), gf(), gf()];\n\n    const d = hash(secretKey.subarray(0, 32));\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n\n    const signature = new Uint8Array(64);\n    signature.set(d.subarray(32), 32);\n\n    const hs = new SHA512();\n    hs.update(signature.subarray(32));\n    hs.update(message);\n    const r = hs.digest();\n    hs.clean();\n    reduce(r);\n    scalarbase(p, r);\n    pack(signature, p);\n\n    hs.reset();\n    hs.update(signature.subarray(0, 32));\n    hs.update(secretKey.subarray(32));\n    hs.update(message);\n    const h = hs.digest();\n    reduce(h);\n\n    for (let i = 0; i < 32; i++) {\n        x[i] = r[i];\n    }\n    for (let i = 0; i < 32; i++) {\n        for (let j = 0; j < 32; j++) {\n            x[i + j] += h[i] * d[j];\n        }\n    }\n    modL(signature.subarray(32), x);\n\n    return signature;\n}\n\nfunction unpackneg(r: GF[], p: Uint8Array) {\n    const t = gf(), chk = gf(), num = gf(),\n        den = gf(), den2 = gf(), den4 = gf(),\n        den6 = gf();\n\n    set25519(r[2], gf1);\n    unpack25519(r[1], p);\n    square(num, r[1]);\n    mul(den, num, D);\n    sub(num, num, r[2]);\n    add(den, r[2], den);\n\n    square(den2, den);\n    square(den4, den2);\n    mul(den6, den4, den2);\n    mul(t, den6, num);\n    mul(t, t, den);\n\n    pow2523(t, t);\n    mul(t, t, num);\n    mul(t, t, den);\n    mul(t, t, den);\n    mul(r[0], t, den);\n\n    square(chk, r[0]);\n    mul(chk, chk, den);\n    if (neq25519(chk, num)) {\n        mul(r[0], r[0], I);\n    }\n\n    square(chk, r[0]);\n    mul(chk, chk, den);\n    if (neq25519(chk, num)) {\n        return -1;\n    }\n\n    if (par25519(r[0]) === (p[31] >> 7)) {\n        sub(r[0], gf0, r[0]);\n    }\n\n    mul(r[3], r[0], r[1]);\n    return 0;\n}\n\nexport function verify(publicKey: Uint8Array, message: Uint8Array, signature: Uint8Array): boolean {\n    const t = new Uint8Array(32);\n    const p = [gf(), gf(), gf(), gf()];\n    const q = [gf(), gf(), gf(), gf()];\n\n    if (signature.length !== SIGNATURE_LENGTH) {\n        throw new Error(`ed25519: signature must be ${SIGNATURE_LENGTH} bytes`);\n    }\n\n    if (unpackneg(q, publicKey)) {\n        return false;\n    }\n\n    const hs = new SHA512();\n    hs.update(signature.subarray(0, 32));\n    hs.update(publicKey);\n    hs.update(message);\n    const h = hs.digest();\n    reduce(h);\n    scalarmult(p, q, h);\n\n    scalarbase(q, signature.subarray(32));\n    edadd(p, q);\n    pack(t, p);\n\n    if (verify32(signature, t)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * Convert Ed25519 public key to X25519 public key.\n *\n * Throws if given an invalid public key.\n */\nexport function convertPublicKeyToX25519(publicKey: Uint8Array): Uint8Array {\n    let q = [gf(), gf(), gf(), gf()];\n\n    if (unpackneg(q, publicKey)) {\n        throw new Error(\"Ed25519: invalid public key\");\n    }\n\n    // Formula: montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p\n    let a = gf();\n    let b = gf();\n    let y = q[1];\n    add(a, gf1, y);\n    sub(b, gf1, y);\n    inv25519(b, b);\n    mul(a, a, b);\n\n    let z = new Uint8Array(32);\n    pack25519(z, a);\n    return z;\n}\n\n/**\n *  Convert Ed25519 secret (private) key to X25519 secret key.\n */\nexport function convertSecretKeyToX25519(secretKey: Uint8Array): Uint8Array {\n    const d = hash(secretKey.subarray(0, 32));\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    const o = new Uint8Array(d.subarray(0, 32));\n    wipe(d);\n    return o;\n}\n", "/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n", "import { compare } from './compare.js';\nimport { concat } from './concat.js';\nimport { equals } from './equals.js';\nimport { fromString } from './from-string.js';\nimport { toString } from './to-string.js';\nimport { xor } from './xor.js';\nexport {\n  compare,\n  concat,\n  equals,\n  fromString,\n  toString,\n  xor\n};", "import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}", "import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function xor(a, b) {\n  if (a.length !== b.length) {\n    throw new Error('Inputs should have the same length');\n  }\n  const result = allocUnsafe(a.length);\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i];\n  }\n  return asUint8Array(result);\n}", null, null, null, null, null, null, "export const PROTOCOL = \"wc\";\nexport const WC_VERSION = 2;\nexport const CONTEXT = \"ethereum_provider\";\nexport const STORAGE_KEY = `${PROTOCOL}@${WC_VERSION}:${CONTEXT}:`;\nexport const RPC_URL = \"https://rpc.walletconnect.com/v1/\";\n", "export const REQUIRED_METHODS = [\"eth_sendTransaction\", \"personal_sign\"];\nexport const OPTIONAL_METHODS = [\n  \"eth_accounts\",\n  \"eth_requestAccounts\",\n  \"eth_call\",\n  \"eth_getBalance\",\n  \"eth_sendRawTransaction\",\n  \"eth_sign\",\n  \"eth_signTransaction\",\n  \"eth_signTypedData\",\n  \"eth_signTypedData_v3\",\n  \"eth_signTypedData_v4\",\n  \"wallet_switchEthereumChain\",\n  \"wallet_addEthereumChain\",\n  \"wallet_getPermissions\",\n  \"wallet_requestPermissions\",\n  \"wallet_registerOnboarding\",\n  \"wallet_watchAsset\",\n  \"wallet_scanQRCode\",\n];\nexport const REQUIRED_EVENTS = [\"chainChanged\", \"accountsChanged\"];\nexport const OPTIONAL_EVENTS = [\"message\", \"disconnect\", \"connect\"];\n", "import { EventEmitter } from \"events\";\nimport { getAccountsFromNamespaces, getSdkError, isValidArray } from \"@walletconnect/utils\";\nimport {\n  IEthereumProvider as IProvider,\n  IEthereumProviderEvents,\n  ProviderAccounts,\n  RequestArguments,\n} from \"./types\";\nimport { Metadata, Namespace, UniversalProvider } from \"@walletconnect/universal-provider\";\nimport type { Web3Modal } from \"@web3modal/standalone\";\nimport { SessionTypes, SignClientTypes } from \"@walletconnect/types\";\nimport { STORAGE_KEY, REQUIRED_METHODS, REQUIRED_EVENTS, RPC_URL } from \"./constants\";\n\nexport type RpcMethod =\n  | \"personal_sign\"\n  | \"eth_sendTransaction\"\n  | \"eth_accounts\"\n  | \"eth_requestAccounts\"\n  | \"eth_call\"\n  | \"eth_getBalance\"\n  | \"eth_sendRawTransaction\"\n  | \"eth_sign\"\n  | \"eth_signTransaction\"\n  | \"eth_signTypedData\"\n  | \"eth_signTypedData_v3\"\n  | \"eth_signTypedData_v4\"\n  | \"wallet_switchEthereumChain\"\n  | \"wallet_addEthereumChain\"\n  | \"wallet_getPermissions\"\n  | \"wallet_requestPermissions\"\n  | \"wallet_registerOnboarding\"\n  | \"wallet_watchAsset\"\n  | \"wallet_scanQRCode\";\n\nexport type RpcEvent = \"accountsChanged\" | \"chainChanged\" | \"message\" | \"disconnect\" | \"connect\";\n\nexport interface EthereumRpcMap {\n  [chainId: string]: string;\n}\n\nexport interface SessionEvent {\n  event: { name: string; data: any };\n  chainId: string;\n}\n\nexport interface EthereumRpcConfig {\n  chains: string[];\n  optionalChains?: string[];\n  methods: string[];\n  optionalMethods?: string[];\n  /**\n   * @description Events that the wallet MUST support or the connection will be rejected\n   */\n  events: string[];\n  optionalEvents?: string[];\n  rpcMap: EthereumRpcMap;\n  projectId: string;\n  metadata?: Metadata;\n  showQrModal: boolean;\n  qrModalOptions?: Parameters<Web3Modal[\"setTheme\"]>[0];\n}\nexport interface ConnectOps {\n  chains?: number[];\n  optionalChains?: number[];\n  rpcMap?: EthereumRpcMap;\n  pairingTopic?: string;\n}\n\nexport interface IEthereumProvider extends IProvider {\n  connect(opts?: ConnectOps | undefined): Promise<void>;\n}\n\nexport function getRpcUrl(chainId: string, rpc: EthereumRpcConfig): string | undefined {\n  let rpcUrl: string | undefined;\n  if (rpc.rpcMap) {\n    rpcUrl = rpc.rpcMap[getEthereumChainId([chainId])];\n  }\n  return rpcUrl;\n}\n\nexport function getEthereumChainId(chains: string[]): number {\n  return Number(chains[0].split(\":\")[1]);\n}\n\nexport function toHexChainId(chainId: number): string {\n  return `0x${chainId.toString(16)}`;\n}\n\nexport type NamespacesParams = {\n  chains: EthereumRpcConfig[\"chains\"];\n  optionalChains?: EthereumRpcConfig[\"optionalChains\"];\n  methods?: EthereumRpcConfig[\"methods\"];\n  optionalMethods?: EthereumRpcConfig[\"methods\"];\n  events?: EthereumRpcConfig[\"events\"];\n  rpcMap: EthereumRpcConfig[\"rpcMap\"];\n  optionalEvents?: EthereumRpcConfig[\"events\"];\n};\n\nexport function buildNamespaces(params: NamespacesParams): {\n  required: Namespace;\n  optional?: Namespace;\n} {\n  const { chains, optionalChains, methods, optionalMethods, events, optionalEvents, rpcMap } =\n    params;\n  if (!isValidArray(chains)) {\n    throw new Error(\"Invalid chains\");\n  }\n\n  const requiredChains = chains;\n  const requriedMethods = methods || REQUIRED_METHODS;\n  const requiredEvents = events || REQUIRED_EVENTS;\n  const requiredRpcMap = {\n    [getEthereumChainId(requiredChains)]: rpcMap[getEthereumChainId(requiredChains)],\n  };\n\n  const required: Namespace = {\n    chains: requiredChains,\n    methods: requriedMethods,\n    events: requiredEvents,\n    rpcMap: requiredRpcMap,\n  };\n\n  // make a list of events and methods that require additional permissions\n  // so we know if we should to include the required chains in the optional namespace\n  const eventsRequiringPermissions = events?.filter((event) => !REQUIRED_EVENTS.includes(event));\n  const methodsRequiringPermissions = methods?.filter((event) => !REQUIRED_METHODS.includes(event));\n\n  if (\n    !optionalChains &&\n    !optionalEvents &&\n    !optionalMethods &&\n    !eventsRequiringPermissions?.length &&\n    !methodsRequiringPermissions?.length\n  ) {\n    return { required };\n  }\n\n  /*\n   * decides whether or not to include the required chains in the optional namespace\n   * use case: if there is a single chain as required but additonal methods/events as optional\n   */\n  const shouldIncludeRequiredChains =\n    (eventsRequiringPermissions?.length && methodsRequiringPermissions?.length) || !optionalChains;\n\n  const optional: Namespace = {\n    chains: [\n      ...new Set(\n        shouldIncludeRequiredChains ? requiredChains.concat(optionalChains || []) : optionalChains,\n      ),\n    ],\n    methods: [...new Set(requriedMethods.concat(optionalMethods || []))],\n    events: [...new Set(requiredEvents.concat(optionalEvents || []))],\n    rpcMap,\n  };\n\n  return { required, optional };\n}\nexport interface EthereumProviderOptions {\n  projectId: string;\n  /**\n   * @note Chains that your app intents to use and the peer MUST support. If the peer does not support these chains, the connection will be rejected.\n   * @default [1]\n   * @example [1, 3, 4, 5, 42]\n   */\n  chains: number[];\n  /**\n   * @note Optional chains that your app MAY attempt to use and the peer MAY support. If the peer does not support these chains, the connection will still be established.\n   * @default [1]\n   * @example [1, 3, 4, 5, 42]\n   */\n  optionalChains?: number[];\n  /**\n   * @note Methods that your app intents to use and the peer MUST support. If the peer does not support these methods, the connection will be rejected.\n   * @default [\"eth_sendTransaction\", \"personal_sign\"]\n   */\n  methods?: string[];\n  /**\n   * @note Methods that your app MAY attempt to use and the peer MAY support. If the peer does not support these methods, the connection will still be established.\n   */\n  optionalMethods?: string[];\n  events?: string[];\n  optionalEvents?: string[];\n  rpcMap?: EthereumRpcMap;\n  metadata?: Metadata;\n  showQrModal?: boolean;\n  qrModalOptions?: Parameters<Web3Modal[\"setTheme\"]>[0];\n}\n\nexport class EthereumProvider implements IEthereumProvider {\n  public events = new EventEmitter();\n  public namespace = \"eip155\";\n  public accounts: string[] = [];\n  public signer: InstanceType<typeof UniversalProvider>;\n  public chainId = 1;\n  public modal?: Web3Modal;\n\n  private rpc: EthereumRpcConfig;\n  private readonly STORAGE_KEY = STORAGE_KEY;\n\n  constructor() {\n    // assigned during initialize\n    this.signer = {} as InstanceType<typeof UniversalProvider>;\n    this.rpc = {} as EthereumRpcConfig;\n  }\n\n  static async init(opts: EthereumProviderOptions): Promise<EthereumProvider> {\n    const provider = new EthereumProvider();\n    await provider.initialize(opts);\n    return provider;\n  }\n\n  public async request<T = unknown>(args: RequestArguments): Promise<T> {\n    return await this.signer.request(args, this.formatChainId(this.chainId));\n  }\n\n  public sendAsync(\n    args: RequestArguments,\n    callback: (error: Error | null, response: any) => void,\n  ): void {\n    this.signer.sendAsync(args, callback, this.formatChainId(this.chainId));\n  }\n\n  get connected(): boolean {\n    if (!this.signer.client) return false;\n    return this.signer.client.core.relayer.connected;\n  }\n\n  get connecting(): boolean {\n    if (!this.signer.client) return false;\n    return this.signer.client.core.relayer.connecting;\n  }\n\n  public async enable(): Promise<ProviderAccounts> {\n    if (!this.session) await this.connect();\n    const accounts = await this.request({ method: \"eth_requestAccounts\" });\n    return accounts as ProviderAccounts;\n  }\n\n  public async connect(opts?: ConnectOps): Promise<void> {\n    if (!this.signer.client) {\n      throw new Error(\"Provider not initialized. Call init() first\");\n    }\n\n    this.loadConnectOpts(opts);\n    const { required, optional } = buildNamespaces(this.rpc);\n    try {\n      const session = await new Promise<SessionTypes.Struct | undefined>(\n        async (resolve, reject) => {\n          if (this.rpc.showQrModal) {\n            this.modal?.subscribeModal((state) => {\n              // the modal was closed so reject the promise\n              if (!state.open && !this.signer.session) {\n                this.signer.abortPairingAttempt();\n                reject(new Error(\"Connection request reset. Please try again.\"));\n              }\n            });\n          }\n          await this.signer\n            .connect({\n              namespaces: {\n                [this.namespace]: required,\n              },\n              ...(optional && {\n                optionalNamespaces: {\n                  [this.namespace]: optional,\n                },\n              }),\n              pairingTopic: opts?.pairingTopic,\n            })\n            .then((session) => {\n              resolve(session);\n            })\n            .catch((error: Error) => {\n              reject(new Error(error.message));\n            });\n        },\n      );\n\n      if (!session) return;\n      this.setChainIds(this.rpc.chains);\n      const accounts = getAccountsFromNamespaces(session.namespaces, [this.namespace]);\n      this.setAccounts(accounts);\n      this.events.emit(\"connect\", { chainId: toHexChainId(this.chainId) });\n    } catch (error) {\n      this.signer.logger.error(error);\n      throw error;\n    } finally {\n      if (this.modal) this.modal.closeModal();\n    }\n  }\n\n  public async disconnect(): Promise<void> {\n    if (this.session) {\n      await this.signer.disconnect();\n    }\n    this.reset();\n  }\n\n  public on: IEthereumProviderEvents[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n    return this;\n  };\n\n  public once: IEthereumProviderEvents[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n    return this;\n  };\n\n  public removeListener: IEthereumProviderEvents[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n    return this;\n  };\n\n  public off: IEthereumProviderEvents[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n    return this;\n  };\n\n  get isWalletConnect() {\n    return true;\n  }\n\n  get session() {\n    return this.signer.session;\n  }\n  // ---------- Private ----------------------------------------------- //\n\n  private registerEventListeners() {\n    this.signer.on(\"session_event\", (payload: SignClientTypes.EventArguments[\"session_event\"]) => {\n      const { params } = payload;\n      const { event } = params;\n      if (event.name === \"accountsChanged\") {\n        this.accounts = this.parseAccounts(event.data);\n        this.events.emit(\"accountsChanged\", this.accounts);\n      } else if (event.name === \"chainChanged\") {\n        this.setChainId(this.formatChainId(event.data));\n      } else {\n        this.events.emit(event.name as any, event.data);\n      }\n      this.events.emit(\"session_event\", payload);\n    });\n\n    this.signer.on(\"chainChanged\", (chainId: string) => {\n      const chain = parseInt(chainId);\n      this.chainId = chain;\n      this.events.emit(\"chainChanged\", toHexChainId(this.chainId));\n      this.persist();\n    });\n\n    this.signer.on(\n      \"session_update\",\n      (payload: SignClientTypes.EventArguments[\"session_update\"]) => {\n        this.events.emit(\"session_update\", payload);\n      },\n    );\n\n    this.signer.on(\n      \"session_delete\",\n      (payload: SignClientTypes.EventArguments[\"session_delete\"]) => {\n        this.reset();\n        this.events.emit(\"session_delete\", payload);\n        this.events.emit(\"disconnect\", {\n          ...getSdkError(\"USER_DISCONNECTED\"),\n          data: payload.topic,\n          name: \"USER_DISCONNECTED\",\n        });\n      },\n    );\n\n    this.signer.on(\"display_uri\", (uri: string) => {\n      if (this.rpc.showQrModal) {\n        // to refresh the QR we have to close the modal and open it again\n        // until proper API is provided by web3modal\n        this.modal?.closeModal();\n        this.modal?.openModal({ uri });\n      }\n      this.events.emit(\"display_uri\", uri);\n    });\n  }\n\n  private setHttpProvider(chainId: number): void {\n    this.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: chainId.toString(16) }],\n    });\n  }\n\n  private isCompatibleChainId(chainId: string): boolean {\n    return typeof chainId === \"string\" ? chainId.startsWith(`${this.namespace}:`) : false;\n  }\n\n  private formatChainId(chainId: number): string {\n    return `${this.namespace}:${chainId}`;\n  }\n\n  private parseChainId(chainId: string): number {\n    return Number(chainId.split(\":\")[1]);\n  }\n\n  private setChainIds(chains: string[]) {\n    const compatible = chains.filter((x) => this.isCompatibleChainId(x));\n    const chainIds = compatible.map((c) => this.parseChainId(c));\n    if (chainIds.length) {\n      this.chainId = chainIds[0];\n      this.events.emit(\"chainChanged\", toHexChainId(this.chainId));\n      this.persist();\n    }\n  }\n\n  private setChainId(chain: string) {\n    if (this.isCompatibleChainId(chain)) {\n      const chainId = this.parseChainId(chain);\n      this.chainId = chainId;\n      this.setHttpProvider(chainId);\n    }\n  }\n\n  private parseAccountId(account: string): { chainId: string; address: string } {\n    const [namespace, reference, address] = account.split(\":\");\n    const chainId = `${namespace}:${reference}`;\n    return { chainId, address };\n  }\n\n  private setAccounts(accounts: string[]) {\n    this.accounts = accounts\n      .filter((x) => this.parseChainId(this.parseAccountId(x).chainId) === this.chainId)\n      .map((x) => this.parseAccountId(x).address);\n    this.events.emit(\"accountsChanged\", this.accounts);\n  }\n\n  private getRpcConfig(opts: EthereumProviderOptions): EthereumRpcConfig {\n    return {\n      chains: opts.chains?.map((chain) => this.formatChainId(chain)) || [`${this.namespace}:1`],\n      optionalChains: opts.optionalChains\n        ? opts.optionalChains.map((chain) => this.formatChainId(chain))\n        : undefined,\n      methods: opts?.methods || REQUIRED_METHODS,\n      events: opts?.events || REQUIRED_EVENTS,\n      optionalMethods: opts?.optionalMethods || [],\n      optionalEvents: opts?.optionalEvents || [],\n      rpcMap:\n        opts?.rpcMap ||\n        this.buildRpcMap(opts.chains.concat(opts.optionalChains || []), opts.projectId),\n      showQrModal: opts?.showQrModal ?? true,\n      projectId: opts.projectId,\n      metadata: opts.metadata,\n    };\n  }\n\n  private buildRpcMap(chains: number[], projectId: string): EthereumRpcMap {\n    const map: EthereumRpcMap = {};\n    chains.forEach((chain) => {\n      map[chain] = this.getRpcUrl(chain, projectId);\n    });\n    return map;\n  }\n\n  private async initialize(opts: EthereumProviderOptions) {\n    this.rpc = this.getRpcConfig(opts);\n    this.chainId = getEthereumChainId(this.rpc.chains);\n    this.signer = await UniversalProvider.init({\n      projectId: this.rpc.projectId,\n      metadata: this.rpc.metadata,\n    });\n    this.registerEventListeners();\n    await this.loadPersistedSession();\n    if (this.rpc.showQrModal) {\n      try {\n        const { Web3Modal } = await import(\"@web3modal/standalone\");\n        this.modal = new Web3Modal({\n          walletConnectVersion: 2,\n          projectId: this.rpc.projectId,\n          standaloneChains: this.rpc.chains,\n          themeMode: this.rpc.qrModalOptions?.themeMode,\n          themeVariables: this.rpc.qrModalOptions?.themeVariables,\n        });\n      } catch {\n        throw new Error(\"To use QR modal, please install @web3modal/standalone package\");\n      }\n    }\n  }\n\n  private loadConnectOpts(opts?: ConnectOps) {\n    if (!opts) return;\n    const { chains, optionalChains, rpcMap } = opts;\n    if (chains && isValidArray(chains)) {\n      this.rpc.chains = chains.map((chain) => this.formatChainId(chain));\n      chains.forEach((chain) => {\n        this.rpc.rpcMap[chain] = rpcMap?.[chain] || this.getRpcUrl(chain);\n      });\n    }\n    if (optionalChains && isValidArray(optionalChains)) {\n      this.rpc.optionalChains = [];\n      this.rpc.optionalChains = optionalChains?.map((chain) => this.formatChainId(chain));\n      optionalChains.forEach((chain) => {\n        this.rpc.rpcMap[chain] = rpcMap?.[chain] || this.getRpcUrl(chain);\n      });\n    }\n  }\n\n  private getRpcUrl(chainId: number, projectId?: string): string {\n    const providedRpc = this.rpc.rpcMap?.[chainId];\n    return (\n      providedRpc ||\n      `${RPC_URL}?chainId=eip155:${chainId}&projectId=${projectId || this.rpc.projectId}`\n    );\n  }\n\n  private async loadPersistedSession() {\n    if (!this.session) return;\n    const chainId = await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`);\n    this.setChainIds(\n      chainId ? [this.formatChainId(chainId)] : this.session.namespaces[this.namespace].accounts,\n    );\n    this.setAccounts(this.session.namespaces[this.namespace].accounts);\n  }\n\n  private reset() {\n    this.chainId = 1;\n    this.accounts = [];\n  }\n\n  private persist() {\n    if (!this.session) return;\n    this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`, this.chainId);\n  }\n\n  private parseAccounts(payload: string | string[]): string[] {\n    if (typeof payload === \"string\" || payload instanceof String) {\n      return [this.parseAccount(payload)];\n    }\n    return payload.map((account: string) => this.parseAccount(account));\n  }\n\n  private parseAccount = (payload: any): string => {\n    return this.isCompatibleChainId(payload) ? this.parseAccountId(payload).address : payload;\n  };\n}\n\nexport default EthereumProvider;\n", "import { EthereumProvider as Provider } from \"./EthereumProvider\";\nexport const EthereumProvider = Provider;\nexport type { RpcEvent, RpcMethod } from \"./EthereumProvider\";\nexport * from \"./constants/rpc\";\nexport default Provider;\n", "const e=Symbol(),t=Symbol(),r=\"a\",n=\"w\";let o=(e,t)=>new Proxy(e,t);const s=Object.getPrototypeOf,c=new WeakMap,l=e=>e&&(c.has(e)?c.get(e):s(e)===Object.prototype||s(e)===Array.prototype),f=e=>\"object\"==typeof e&&null!==e,i=new WeakMap,a=e=>e[t]||e,u=(c,f,p)=>{if(!l(c))return c;const y=a(c),g=(e=>Object.isFrozen(e)||Object.values(Object.getOwnPropertyDescriptors(e)).some(e=>!e.writable))(y);let h=p&&p.get(y);return h&&h[1].f===g||(h=((o,s)=>{const c={f:s};let l=!1;const f=(e,t)=>{if(!l){let s=c[r].get(o);if(s||(s={},c[r].set(o,s)),e===n)s[n]=!0;else{let r=s[e];r||(r=new Set,s[e]=r),r.add(t)}}},i={get:(e,n)=>n===t?o:(f(\"k\",n),u(Reflect.get(e,n),c[r],c.c)),has:(t,n)=>n===e?(l=!0,c[r].delete(o),!0):(f(\"h\",n),Reflect.has(t,n)),getOwnPropertyDescriptor:(e,t)=>(f(\"o\",t),Reflect.getOwnPropertyDescriptor(e,t)),ownKeys:e=>(f(n),Reflect.ownKeys(e))};return s&&(i.set=i.deleteProperty=()=>!1),[i,c]})(y,g),h[1].p=o(g?(e=>{let t=i.get(e);if(!t){if(Array.isArray(e))t=Array.from(e);else{const r=Object.getOwnPropertyDescriptors(e);Object.values(r).forEach(e=>{e.configurable=!0}),t=Object.create(s(e),r)}i.set(e,t)}return t})(y):y,h[0]),p&&p.set(y,h)),h[1][r]=f,h[1].c=p,h[1].p},p=(e,t,r,o)=>{if(Object.is(e,t))return!1;if(!f(e)||!f(t))return!0;const s=r.get(a(e));if(!s)return!0;if(o){const r=o.get(e);if(r&&r.n===t)return r.g;o.set(e,{n:t,g:!1})}let c=null;try{for(const r of s.h||[])if(c=Reflect.has(e,r)!==Reflect.has(t,r),c)return c;if(!0===s[n]){if(c=((e,t)=>{const r=Reflect.ownKeys(e),n=Reflect.ownKeys(t);return r.length!==n.length||r.some((e,t)=>e!==n[t])})(e,t),c)return c}else for(const r of s.o||[])if(c=!!Reflect.getOwnPropertyDescriptor(e,r)!=!!Reflect.getOwnPropertyDescriptor(t,r),c)return c;for(const n of s.k||[])if(c=p(e[n],t[n],r,o),c)return c;return null===c&&(c=!0),c}finally{o&&o.set(e,{n:t,g:c})}},y=t=>!!l(t)&&e in t,g=e=>l(e)&&e[t]||null,h=(e,t=!0)=>{c.set(e,t)},w=(e,t,r)=>{const o=[],s=new WeakSet,c=(e,l)=>{if(s.has(e))return;f(e)&&s.add(e);const i=f(e)&&t.get(a(e));if(i){var u,p;if(null==(u=i.h)||u.forEach(e=>{const t=`:has(${String(e)})`;o.push(l?[...l,t]:[t])}),!0===i[n]){const e=\":ownKeys\";o.push(l?[...l,e]:[e])}else{var y;null==(y=i.o)||y.forEach(e=>{const t=`:hasOwn(${String(e)})`;o.push(l?[...l,t]:[t])})}null==(p=i.k)||p.forEach(t=>{r&&!(\"value\"in(Object.getOwnPropertyDescriptor(e,t)||{}))||c(e[t],l?[...l,t]:[t])})}else l&&o.push(l)};return c(e),o},O=e=>{o=e};export{w as affectedToPathList,u as createProxy,g as getUntracked,p as isChanged,h as markToTrack,O as replaceNewProxy,y as trackMemo};\n//# sourceMappingURL=index.modern.mjs.map\n", "import { markToTrack, getUntracked } from 'proxy-compare';\n\nconst isObject = (x) => typeof x === \"object\" && x !== null;\nconst proxyStateMap = /* @__PURE__ */ new WeakMap();\nconst refSet = /* @__PURE__ */ new WeakSet();\nconst buildProxyFunction = (objectIs = Object.is, newProxy = (target, handler) => new Proxy(target, handler), canProxy = (x) => isObject(x) && !refSet.has(x) && (Array.isArray(x) || !(Symbol.iterator in x)) && !(x instanceof WeakMap) && !(x instanceof WeakSet) && !(x instanceof Error) && !(x instanceof Number) && !(x instanceof Date) && !(x instanceof String) && !(x instanceof RegExp) && !(x instanceof ArrayBuffer), defaultHandlePromise = (promise) => {\n  switch (promise.status) {\n    case \"fulfilled\":\n      return promise.value;\n    case \"rejected\":\n      throw promise.reason;\n    default:\n      throw promise;\n  }\n}, snapCache = /* @__PURE__ */ new WeakMap(), createSnapshot = (target, version, handlePromise = defaultHandlePromise) => {\n  const cache = snapCache.get(target);\n  if ((cache == null ? void 0 : cache[0]) === version) {\n    return cache[1];\n  }\n  const snap = Array.isArray(target) ? [] : Object.create(Object.getPrototypeOf(target));\n  markToTrack(snap, true);\n  snapCache.set(target, [version, snap]);\n  Reflect.ownKeys(target).forEach((key) => {\n    const value = Reflect.get(target, key);\n    if (refSet.has(value)) {\n      markToTrack(value, false);\n      snap[key] = value;\n    } else if (value instanceof Promise) {\n      Object.defineProperty(snap, key, {\n        get() {\n          return handlePromise(value);\n        }\n      });\n    } else if (proxyStateMap.has(value)) {\n      snap[key] = snapshot(value, handlePromise);\n    } else {\n      snap[key] = value;\n    }\n  });\n  return Object.freeze(snap);\n}, proxyCache = /* @__PURE__ */ new WeakMap(), versionHolder = [1, 1], proxyFunction2 = (initialObject) => {\n  if (!isObject(initialObject)) {\n    throw new Error(\"object required\");\n  }\n  const found = proxyCache.get(initialObject);\n  if (found) {\n    return found;\n  }\n  let version = versionHolder[0];\n  const listeners = /* @__PURE__ */ new Set();\n  const notifyUpdate = (op, nextVersion = ++versionHolder[0]) => {\n    if (version !== nextVersion) {\n      version = nextVersion;\n      listeners.forEach((listener) => listener(op, nextVersion));\n    }\n  };\n  let checkVersion = versionHolder[1];\n  const ensureVersion = (nextCheckVersion = ++versionHolder[1]) => {\n    if (checkVersion !== nextCheckVersion && !listeners.size) {\n      checkVersion = nextCheckVersion;\n      propProxyStates.forEach(([propProxyState]) => {\n        const propVersion = propProxyState[1](nextCheckVersion);\n        if (propVersion > version) {\n          version = propVersion;\n        }\n      });\n    }\n    return version;\n  };\n  const createPropListener = (prop) => (op, nextVersion) => {\n    const newOp = [...op];\n    newOp[1] = [prop, ...newOp[1]];\n    notifyUpdate(newOp, nextVersion);\n  };\n  const propProxyStates = /* @__PURE__ */ new Map();\n  const addPropListener = (prop, propProxyState) => {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\" && propProxyStates.has(prop)) {\n      throw new Error(\"prop listener already exists\");\n    }\n    if (listeners.size) {\n      const remove = propProxyState[3](createPropListener(prop));\n      propProxyStates.set(prop, [propProxyState, remove]);\n    } else {\n      propProxyStates.set(prop, [propProxyState]);\n    }\n  };\n  const removePropListener = (prop) => {\n    var _a;\n    const entry = propProxyStates.get(prop);\n    if (entry) {\n      propProxyStates.delete(prop);\n      (_a = entry[1]) == null ? void 0 : _a.call(entry);\n    }\n  };\n  const addListener = (listener) => {\n    listeners.add(listener);\n    if (listeners.size === 1) {\n      propProxyStates.forEach(([propProxyState, prevRemove], prop) => {\n        if ((import.meta.env && import.meta.env.MODE) !== \"production\" && prevRemove) {\n          throw new Error(\"remove already exists\");\n        }\n        const remove = propProxyState[3](createPropListener(prop));\n        propProxyStates.set(prop, [propProxyState, remove]);\n      });\n    }\n    const removeListener = () => {\n      listeners.delete(listener);\n      if (listeners.size === 0) {\n        propProxyStates.forEach(([propProxyState, remove], prop) => {\n          if (remove) {\n            remove();\n            propProxyStates.set(prop, [propProxyState]);\n          }\n        });\n      }\n    };\n    return removeListener;\n  };\n  const baseObject = Array.isArray(initialObject) ? [] : Object.create(Object.getPrototypeOf(initialObject));\n  const handler = {\n    deleteProperty(target, prop) {\n      const prevValue = Reflect.get(target, prop);\n      removePropListener(prop);\n      const deleted = Reflect.deleteProperty(target, prop);\n      if (deleted) {\n        notifyUpdate([\"delete\", [prop], prevValue]);\n      }\n      return deleted;\n    },\n    set(target, prop, value, receiver) {\n      var _a;\n      const hasPrevValue = Reflect.has(target, prop);\n      const prevValue = Reflect.get(target, prop, receiver);\n      if (hasPrevValue && objectIs(prevValue, value)) {\n        return true;\n      }\n      removePropListener(prop);\n      if (isObject(value)) {\n        value = getUntracked(value) || value;\n      }\n      let nextValue = value;\n      if ((_a = Object.getOwnPropertyDescriptor(target, prop)) == null ? void 0 : _a.set) ; else if (value instanceof Promise) {\n        value.then((v) => {\n          value.status = \"fulfilled\";\n          value.value = v;\n          notifyUpdate([\"resolve\", [prop], v]);\n        }).catch((e) => {\n          value.status = \"rejected\";\n          value.reason = e;\n          notifyUpdate([\"reject\", [prop], e]);\n        });\n      } else {\n        if (!proxyStateMap.has(value) && canProxy(value)) {\n          nextValue = proxy(value);\n        }\n        const childProxyState = !refSet.has(nextValue) && proxyStateMap.get(nextValue);\n        if (childProxyState) {\n          addPropListener(prop, childProxyState);\n        }\n      }\n      Reflect.set(target, prop, nextValue, receiver);\n      notifyUpdate([\"set\", [prop], value, prevValue]);\n      return true;\n    }\n  };\n  const proxyObject = newProxy(baseObject, handler);\n  proxyCache.set(initialObject, proxyObject);\n  const proxyState = [\n    baseObject,\n    ensureVersion,\n    createSnapshot,\n    addListener\n  ];\n  proxyStateMap.set(proxyObject, proxyState);\n  Reflect.ownKeys(initialObject).forEach((key) => {\n    const desc = Object.getOwnPropertyDescriptor(\n      initialObject,\n      key\n    );\n    if (desc.get || desc.set) {\n      Object.defineProperty(baseObject, key, desc);\n    } else {\n      proxyObject[key] = initialObject[key];\n    }\n  });\n  return proxyObject;\n}) => [\n  // public functions\n  proxyFunction2,\n  // shared state\n  proxyStateMap,\n  refSet,\n  // internal things\n  objectIs,\n  newProxy,\n  canProxy,\n  defaultHandlePromise,\n  snapCache,\n  createSnapshot,\n  proxyCache,\n  versionHolder\n];\nconst [proxyFunction] = buildProxyFunction();\nfunction proxy(initialObject = {}) {\n  return proxyFunction(initialObject);\n}\nfunction getVersion(proxyObject) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  return proxyState == null ? void 0 : proxyState[1]();\n}\nfunction subscribe(proxyObject, callback, notifyInSync) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  let promise;\n  const ops = [];\n  const addListener = proxyState[3];\n  let isListenerActive = false;\n  const listener = (op) => {\n    ops.push(op);\n    if (notifyInSync) {\n      callback(ops.splice(0));\n      return;\n    }\n    if (!promise) {\n      promise = Promise.resolve().then(() => {\n        promise = void 0;\n        if (isListenerActive) {\n          callback(ops.splice(0));\n        }\n      });\n    }\n  };\n  const removeListener = addListener(listener);\n  isListenerActive = true;\n  return () => {\n    isListenerActive = false;\n    removeListener();\n  };\n}\nfunction snapshot(proxyObject, handlePromise) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  const [target, ensureVersion, createSnapshot] = proxyState;\n  return createSnapshot(target, ensureVersion(), handlePromise);\n}\nfunction ref(obj) {\n  refSet.add(obj);\n  return obj;\n}\nconst unstable_buildProxyFunction = buildProxyFunction;\n\nexport { getVersion, proxy, ref, snapshot, subscribe, unstable_buildProxyFunction };\n", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n", "import{proxy as d,subscribe as h}from\"valtio/vanilla\";import{Buffer as S}from\"buffer\";const o=d({selectedChain:void 0,chains:void 0,standaloneChains:void 0,standaloneUri:void 0,isStandalone:!1,isCustomDesktop:!1,isCustomMobile:!1,isDataLoaded:!1,isUiLoaded:!1,walletConnectVersion:1}),i={state:o,subscribe(e){return h(o,()=>e(o))},setChains(e){o.chains=e},setStandaloneChains(e){o.standaloneChains=e},setStandaloneUri(e){o.standaloneUri=e},getSelectedChain(){const e=C.client().getNetwork().chain;return e&&(o.selectedChain=e),o.selectedChain},setSelectedChain(e){o.selectedChain=e},setIsStandalone(e){o.isStandalone=e},setIsCustomDesktop(e){o.isCustomDesktop=e},setIsCustomMobile(e){o.isCustomMobile=e},setIsDataLoaded(e){o.isDataLoaded=e},setIsUiLoaded(e){o.isUiLoaded=e},setWalletConnectVersion(e){o.walletConnectVersion=e}},g=d({initialized:!1,ethereumClient:void 0}),C={setEthereumClient(e){!g.initialized&&e&&(g.ethereumClient=e,i.setChains(e.chains),g.initialized=!0)},client(){if(g.ethereumClient)return g.ethereumClient;throw new Error(\"ClientCtrl has no client set\")}},a=d({address:void 0,profileName:void 0,profileAvatar:void 0,profileLoading:!1,balanceLoading:!1,balance:void 0,isConnected:!1}),N={state:a,subscribe(e){return h(a,()=>e(a))},getAccount(){const e=C.client().getAccount();a.address=e.address,a.isConnected=e.isConnected},async fetchProfile(e,t){try{a.profileLoading=!0;const s=t??a.address,{id:n}=C.client().getDefaultChain();if(s&&n===1){const[l,c]=await Promise.all([C.client().fetchEnsName({address:s,chainId:1}),C.client().fetchEnsAvatar({address:s,chainId:1})]);c&&await e(c),a.profileName=l,a.profileAvatar=c}}finally{a.profileLoading=!1}},async fetchBalance(e){try{a.balanceLoading=!0;const t=e??a.address;if(t){const s=await C.client().fetchBalance({address:t});a.balance={amount:s.formatted,symbol:s.symbol}}}finally{a.balanceLoading=!1}},setAddress(e){a.address=e},setIsConnected(e){a.isConnected=e},resetBalance(){a.balance=void 0},resetAccount(){a.address=void 0,a.isConnected=!1,a.profileName=void 0,a.profileAvatar=void 0,a.balance=void 0}},b=d({projectId:\"\",mobileWallets:void 0,desktopWallets:void 0,walletImages:void 0,chainImages:void 0,tokenImages:void 0,standaloneChains:void 0,enableStandaloneMode:!1,enableNetworkView:!1,enableAccountView:!0,enableExplorer:!0,defaultChain:void 0,explorerAllowList:void 0,explorerDenyList:void 0,termsOfServiceUrl:void 0,privacyPolicyUrl:void 0}),W={state:b,subscribe(e){return h(b,()=>e(b))},setConfig(e){var t,s,n,l;if(i.setStandaloneChains(e.standaloneChains),i.setIsStandalone(!!((t=e.standaloneChains)!=null&&t.length)||!!e.enableStandaloneMode),i.setIsCustomMobile(!!((s=e.mobileWallets)!=null&&s.length)),i.setIsCustomDesktop(!!((n=e.desktopWallets)!=null&&n.length)),i.setWalletConnectVersion((l=e.walletConnectVersion)!=null?l:1),e.defaultChain)i.setSelectedChain(e.defaultChain);else if(!i.state.isStandalone){const c=C.client().getDefaultChain();i.setSelectedChain(c)}Object.assign(b,e)}},E=\"https://explorer-api.walletconnect.com\";function U(e){const t=Object.fromEntries(Object.entries(e).filter(([s,n])=>typeof n<\"u\"&&n!==null&&n!==\"\").map(([s,n])=>[s,n.toString()]));return new URLSearchParams(t).toString()}const L={async fetchWallets(e,t){const s=U(t),n=`${E}/v3/wallets?projectId=${e}&${s}`;return(await fetch(n)).json()},formatImageUrl(e,t){return`${E}/v3/logo/lg/${t}?projectId=${e}`}},u=d({wallets:{listings:[],total:0,page:1},search:{listings:[],total:0,page:1},previewWallets:[],recomendedWallets:[]});function I(){const{projectId:e}=W.state;if(!e)throw new Error(\"projectId is required to work with explorer api\");return e}const P={state:u,async getPreviewWallets(e){const{listings:t}=await L.fetchWallets(I(),e);return u.previewWallets=Object.values(t),u.previewWallets},async getRecomendedWallets(){const{listings:e}=await L.fetchWallets(I(),{page:1,entries:6});u.recomendedWallets=Object.values(e)},async getPaginatedWallets(e){const{page:t,search:s}=e,{listings:n,total:l}=await L.fetchWallets(I(),e),c=Object.values(n),v=s?\"search\":\"wallets\";return u[v]={listings:[...u[v].listings,...c],total:l,page:t??1},{listings:c,total:l}},getImageUrl(e){return L.formatImageUrl(I(),e)},resetSearch(){u.search={listings:[],total:0,page:1}}},r=d({history:[\"ConnectWallet\"],view:\"ConnectWallet\",data:void 0}),w={state:r,subscribe(e){return h(r,()=>e(r))},push(e,t){e!==r.view&&(r.view=e,t&&(r.data=t),r.history.push(e))},replace(e){r.view=e,r.history=[e]},goBack(){if(r.history.length>1){r.history.pop();const[e]=r.history.slice(-1);r.view=e}}},f=d({open:!1}),j={state:f,subscribe(e){return h(f,()=>e(f))},async open(e){return new Promise(t=>{const{isStandalone:s,isUiLoaded:n,isDataLoaded:l}=i.state,{isConnected:c}=N.state,{enableNetworkView:v}=W.state;if(s?(i.setStandaloneUri(e?.uri),i.setStandaloneChains(e?.standaloneChains),w.replace(\"ConnectWallet\")):e!=null&&e.route?w.replace(e.route):c?w.replace(\"Account\"):v?w.replace(\"SelectNetwork\"):w.replace(\"ConnectWallet\"),n&&l)f.open=!0,t();else{const O=setInterval(()=>{i.state.isUiLoaded&&i.state.isDataLoaded&&(clearInterval(O),f.open=!0,t())},200)}})},close(){f.open=!1}};function A(){return typeof matchMedia<\"u\"&&matchMedia(\"(prefers-color-scheme: dark)\").matches}const y=d({themeMode:A()?\"dark\":\"light\"}),$={state:y,subscribe(e){return h(y,()=>e(y))},setThemeConfig(e){Object.assign(y,e)}},p=d({open:!1,message:\"\",variant:\"success\"}),T={state:p,subscribe(e){return h(p,()=>e(p))},openToast(e,t){p.open=!0,p.message=e,p.variant=t},closeToast(){p.open=!1}},m={WALLETCONNECT_DEEPLINK_CHOICE:\"WALLETCONNECT_DEEPLINK_CHOICE\",isMobile(){return typeof window<\"u\"?!!(window.matchMedia(\"(pointer:coarse)\").matches||/Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)):!1},isAndroid(){return m.isMobile()&&navigator.userAgent.toLowerCase().includes(\"android\")},isEmptyObject(e){return Object.getPrototypeOf(e)===Object.prototype&&Object.getOwnPropertyNames(e).length===0&&Object.getOwnPropertySymbols(e).length===0},isHttpUrl(e){return e.startsWith(\"http://\")||e.startsWith(\"https://\")},formatNativeUrl(e,t,s){if(m.isHttpUrl(e))return this.formatUniversalUrl(e,t,s);let n=e;n.includes(\"://\")||(n=e.replaceAll(\"/\",\"\").replaceAll(\":\",\"\"),n=`${n}://`),this.setWalletConnectDeepLink(n,s);const l=encodeURIComponent(t);return`${n}wc?uri=${l}`},formatUniversalUrl(e,t,s){if(!m.isHttpUrl(e))return this.formatNativeUrl(e,t,s);let n=e;e.endsWith(\"/\")&&(n=e.slice(0,-1)),this.setWalletConnectDeepLink(n,s);const l=encodeURIComponent(t);return`${n}/wc?uri=${l}`},async wait(e){return new Promise(t=>{setTimeout(t,e)})},openHref(e,t){window.open(e,t,\"noreferrer noopener\")},setWalletConnectDeepLink(e,t){localStorage.setItem(m.WALLETCONNECT_DEEPLINK_CHOICE,JSON.stringify({href:e,name:t}))},setWalletConnectAndroidDeepLink(e){const[t]=e.split(\"?\");localStorage.setItem(m.WALLETCONNECT_DEEPLINK_CHOICE,JSON.stringify({href:t,name:\"Android\"}))},removeWalletConnectDeepLink(){localStorage.removeItem(m.WALLETCONNECT_DEEPLINK_CHOICE)},isNull(e){return e===null}};typeof window<\"u\"&&(window.Buffer||(window.Buffer=S),window.global||(window.global=window),window.process||(window.process={env:{}}));export{N as AccountCtrl,C as ClientCtrl,W as ConfigCtrl,m as CoreUtil,P as ExplorerCtrl,j as ModalCtrl,i as OptionsCtrl,w as RouterCtrl,$ as ThemeCtrl,T as ToastCtrl};\n//# sourceMappingURL=index.js.map\n", "import{ModalCtrl as r,ThemeCtrl as n,ConfigCtrl as l,OptionsCtrl as s}from\"@web3modal/core\";var c=Object.defineProperty,i=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,b=Object.prototype.propertyIsEnumerable,a=(o,e,t)=>e in o?c(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t,m=(o,e)=>{for(var t in e||(e={}))d.call(e,t)&&a(o,t,e[t]);if(i)for(var t of i(e))b.call(e,t)&&a(o,t,e[t]);return o};class f{constructor(e){this.openModal=r.open,this.closeModal=r.close,this.subscribeModal=r.subscribe,this.setTheme=n.setThemeConfig,n.setThemeConfig(e),l.setConfig(m({enableStandaloneMode:!0},e)),this.initUi()}async initUi(){if(typeof window<\"u\"){await import(\"@web3modal/ui\");const e=document.createElement(\"w3m-modal\");document.body.insertAdjacentElement(\"beforeend\",e),s.setIsUiLoaded(!0)}}}export{f as Web3Modal};\n//# sourceMappingURL=index.js.map\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=window,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),n=new WeakMap;class o{constructor(t,e,n){if(this._$cssResult$=!0,n!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=n.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&n.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new o(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const n=1===t.length?t[0]:e.reduce(((e,s,n)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[n+1]),t[0]);return new o(n,t,s)},S=(s,n)=>{e?s.adoptedStyleSheets=n.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet)):n.forEach((e=>{const n=document.createElement(\"style\"),o=t.litNonce;void 0!==o&&n.setAttribute(\"nonce\",o),n.textContent=e.cssText,s.appendChild(n)}))},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{o as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n", "import{getCompatibleStyle as t,adoptStyles as i}from\"./css-tag.js\";export{CSSResult,adoptStyles,css,getCompatibleStyle,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */var s;const e=window,r=e.trustedTypes,h=r?r.emptyScript:\"\",o=e.reactiveElementPolyfillSupport,n={toAttribute(t,i){switch(i){case Boolean:t=t?h:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,i){let s=t;switch(i){case Boolean:s=null!==t;break;case Number:s=null===t?null:Number(t);break;case Object:case Array:try{s=JSON.parse(t)}catch(t){s=null}}return s}},a=(t,i)=>i!==t&&(i==i||t==t),l={attribute:!0,type:String,converter:n,reflect:!1,hasChanged:a};class d extends HTMLElement{constructor(){super(),this._$Ei=new Map,this.isUpdatePending=!1,this.hasUpdated=!1,this._$El=null,this.u()}static addInitializer(t){var i;this.finalize(),(null!==(i=this.h)&&void 0!==i?i:this.h=[]).push(t)}static get observedAttributes(){this.finalize();const t=[];return this.elementProperties.forEach(((i,s)=>{const e=this._$Ep(s,i);void 0!==e&&(this._$Ev.set(e,s),t.push(e))})),t}static createProperty(t,i=l){if(i.state&&(i.attribute=!1),this.finalize(),this.elementProperties.set(t,i),!i.noAccessor&&!this.prototype.hasOwnProperty(t)){const s=\"symbol\"==typeof t?Symbol():\"__\"+t,e=this.getPropertyDescriptor(t,s,i);void 0!==e&&Object.defineProperty(this.prototype,t,e)}}static getPropertyDescriptor(t,i,s){return{get(){return this[i]},set(e){const r=this[t];this[i]=e,this.requestUpdate(t,r,s)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)||l}static finalize(){if(this.hasOwnProperty(\"finalized\"))return!1;this.finalized=!0;const t=Object.getPrototypeOf(this);if(t.finalize(),void 0!==t.h&&(this.h=[...t.h]),this.elementProperties=new Map(t.elementProperties),this._$Ev=new Map,this.hasOwnProperty(\"properties\")){const t=this.properties,i=[...Object.getOwnPropertyNames(t),...Object.getOwnPropertySymbols(t)];for(const s of i)this.createProperty(s,t[s])}return this.elementStyles=this.finalizeStyles(this.styles),!0}static finalizeStyles(i){const s=[];if(Array.isArray(i)){const e=new Set(i.flat(1/0).reverse());for(const i of e)s.unshift(t(i))}else void 0!==i&&s.push(t(i));return s}static _$Ep(t,i){const s=i.attribute;return!1===s?void 0:\"string\"==typeof s?s:\"string\"==typeof t?t.toLowerCase():void 0}u(){var t;this._$E_=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$Eg(),this.requestUpdate(),null===(t=this.constructor.h)||void 0===t||t.forEach((t=>t(this)))}addController(t){var i,s;(null!==(i=this._$ES)&&void 0!==i?i:this._$ES=[]).push(t),void 0!==this.renderRoot&&this.isConnected&&(null===(s=t.hostConnected)||void 0===s||s.call(t))}removeController(t){var i;null===(i=this._$ES)||void 0===i||i.splice(this._$ES.indexOf(t)>>>0,1)}_$Eg(){this.constructor.elementProperties.forEach(((t,i)=>{this.hasOwnProperty(i)&&(this._$Ei.set(i,this[i]),delete this[i])}))}createRenderRoot(){var t;const s=null!==(t=this.shadowRoot)&&void 0!==t?t:this.attachShadow(this.constructor.shadowRootOptions);return i(s,this.constructor.elementStyles),s}connectedCallback(){var t;void 0===this.renderRoot&&(this.renderRoot=this.createRenderRoot()),this.enableUpdating(!0),null===(t=this._$ES)||void 0===t||t.forEach((t=>{var i;return null===(i=t.hostConnected)||void 0===i?void 0:i.call(t)}))}enableUpdating(t){}disconnectedCallback(){var t;null===(t=this._$ES)||void 0===t||t.forEach((t=>{var i;return null===(i=t.hostDisconnected)||void 0===i?void 0:i.call(t)}))}attributeChangedCallback(t,i,s){this._$AK(t,s)}_$EO(t,i,s=l){var e;const r=this.constructor._$Ep(t,s);if(void 0!==r&&!0===s.reflect){const h=(void 0!==(null===(e=s.converter)||void 0===e?void 0:e.toAttribute)?s.converter:n).toAttribute(i,s.type);this._$El=t,null==h?this.removeAttribute(r):this.setAttribute(r,h),this._$El=null}}_$AK(t,i){var s;const e=this.constructor,r=e._$Ev.get(t);if(void 0!==r&&this._$El!==r){const t=e.getPropertyOptions(r),h=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==(null===(s=t.converter)||void 0===s?void 0:s.fromAttribute)?t.converter:n;this._$El=r,this[r]=h.fromAttribute(i,t.type),this._$El=null}}requestUpdate(t,i,s){let e=!0;void 0!==t&&(((s=s||this.constructor.getPropertyOptions(t)).hasChanged||a)(this[t],i)?(this._$AL.has(t)||this._$AL.set(t,i),!0===s.reflect&&this._$El!==t&&(void 0===this._$EC&&(this._$EC=new Map),this._$EC.set(t,s))):e=!1),!this.isUpdatePending&&e&&(this._$E_=this._$Ej())}async _$Ej(){this.isUpdatePending=!0;try{await this._$E_}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){var t;if(!this.isUpdatePending)return;this.hasUpdated,this._$Ei&&(this._$Ei.forEach(((t,i)=>this[i]=t)),this._$Ei=void 0);let i=!1;const s=this._$AL;try{i=this.shouldUpdate(s),i?(this.willUpdate(s),null===(t=this._$ES)||void 0===t||t.forEach((t=>{var i;return null===(i=t.hostUpdate)||void 0===i?void 0:i.call(t)})),this.update(s)):this._$Ek()}catch(t){throw i=!1,this._$Ek(),t}i&&this._$AE(s)}willUpdate(t){}_$AE(t){var i;null===(i=this._$ES)||void 0===i||i.forEach((t=>{var i;return null===(i=t.hostUpdated)||void 0===i?void 0:i.call(t)})),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$Ek(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$E_}shouldUpdate(t){return!0}update(t){void 0!==this._$EC&&(this._$EC.forEach(((t,i)=>this._$EO(i,this[i],t))),this._$EC=void 0),this._$Ek()}updated(t){}firstUpdated(t){}}d.finalized=!0,d.elementProperties=new Map,d.elementStyles=[],d.shadowRootOptions={mode:\"open\"},null==o||o({ReactiveElement:d}),(null!==(s=e.reactiveElementVersions)&&void 0!==s?s:e.reactiveElementVersions=[]).push(\"1.6.1\");export{d as ReactiveElement,n as defaultConverter,a as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar t;const i=window,s=i.trustedTypes,e=s?s.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,o=`lit$${(Math.random()+\"\").slice(9)}$`,n=\"?\"+o,l=`<${n}>`,h=document,r=(t=\"\")=>h.createComment(t),d=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,u=Array.isArray,c=t=>u(t)||\"function\"==typeof(null==t?void 0:t[Symbol.iterator]),v=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,a=/-->/g,f=/>/g,_=RegExp(\">|[ \\t\\n\\f\\r](?:([^\\\\s\\\"'>=/]+)([ \\t\\n\\f\\r]*=[ \\t\\n\\f\\r]*(?:[^ \\t\\n\\f\\r\\\"'`<>=]|(\\\"|')|))|$)\",\"g\"),m=/'/g,p=/\"/g,$=/^(?:script|style|textarea|title)$/i,g=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),y=g(1),w=g(2),x=Symbol.for(\"lit-noChange\"),b=Symbol.for(\"lit-nothing\"),T=new WeakMap,A=h.createTreeWalker(h,129,null,!1),E=(t,i)=>{const s=t.length-1,n=[];let h,r=2===i?\"<svg>\":\"\",d=v;for(let i=0;i<s;i++){const s=t[i];let e,u,c=-1,g=0;for(;g<s.length&&(d.lastIndex=g,u=d.exec(s),null!==u);)g=d.lastIndex,d===v?\"!--\"===u[1]?d=a:void 0!==u[1]?d=f:void 0!==u[2]?($.test(u[2])&&(h=RegExp(\"</\"+u[2],\"g\")),d=_):void 0!==u[3]&&(d=_):d===_?\">\"===u[0]?(d=null!=h?h:v,c=-1):void 0===u[1]?c=-2:(c=d.lastIndex-u[2].length,e=u[1],d=void 0===u[3]?_:'\"'===u[3]?p:m):d===p||d===m?d=_:d===a||d===f?d=v:(d=_,h=void 0);const y=d===_&&t[i+1].startsWith(\"/>\")?\" \":\"\";r+=d===v?s+l:c>=0?(n.push(e),s.slice(0,c)+\"$lit$\"+s.slice(c)+o+y):s+o+(-2===c?(n.push(void 0),i):y)}const u=r+(t[s]||\"<?>\")+(2===i?\"</svg>\":\"\");if(!Array.isArray(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return[void 0!==e?e.createHTML(u):u,n]};class C{constructor({strings:t,_$litType$:i},e){let l;this.parts=[];let h=0,d=0;const u=t.length-1,c=this.parts,[v,a]=E(t,i);if(this.el=C.createElement(v,e),A.currentNode=this.el.content,2===i){const t=this.el.content,i=t.firstChild;i.remove(),t.append(...i.childNodes)}for(;null!==(l=A.nextNode())&&c.length<u;){if(1===l.nodeType){if(l.hasAttributes()){const t=[];for(const i of l.getAttributeNames())if(i.endsWith(\"$lit$\")||i.startsWith(o)){const s=a[d++];if(t.push(i),void 0!==s){const t=l.getAttribute(s.toLowerCase()+\"$lit$\").split(o),i=/([.?@])?(.*)/.exec(s);c.push({type:1,index:h,name:i[2],strings:t,ctor:\".\"===i[1]?M:\"?\"===i[1]?k:\"@\"===i[1]?H:S})}else c.push({type:6,index:h})}for(const i of t)l.removeAttribute(i)}if($.test(l.tagName)){const t=l.textContent.split(o),i=t.length-1;if(i>0){l.textContent=s?s.emptyScript:\"\";for(let s=0;s<i;s++)l.append(t[s],r()),A.nextNode(),c.push({type:2,index:++h});l.append(t[i],r())}}}else if(8===l.nodeType)if(l.data===n)c.push({type:2,index:h});else{let t=-1;for(;-1!==(t=l.data.indexOf(o,t+1));)c.push({type:7,index:h}),t+=o.length-1}h++}}static createElement(t,i){const s=h.createElement(\"template\");return s.innerHTML=t,s}}function P(t,i,s=t,e){var o,n,l,h;if(i===x)return i;let r=void 0!==e?null===(o=s._$Co)||void 0===o?void 0:o[e]:s._$Cl;const u=d(i)?void 0:i._$litDirective$;return(null==r?void 0:r.constructor)!==u&&(null===(n=null==r?void 0:r._$AO)||void 0===n||n.call(r,!1),void 0===u?r=void 0:(r=new u(t),r._$AT(t,s,e)),void 0!==e?(null!==(l=(h=s)._$Co)&&void 0!==l?l:h._$Co=[])[e]=r:s._$Cl=r),void 0!==r&&(i=P(t,r._$AS(t,i.values),r,e)),i}class V{constructor(t,i){this.u=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}v(t){var i;const{el:{content:s},parts:e}=this._$AD,o=(null!==(i=null==t?void 0:t.creationScope)&&void 0!==i?i:h).importNode(s,!0);A.currentNode=o;let n=A.nextNode(),l=0,r=0,d=e[0];for(;void 0!==d;){if(l===d.index){let i;2===d.type?i=new N(n,n.nextSibling,this,t):1===d.type?i=new d.ctor(n,d.name,d.strings,this,t):6===d.type&&(i=new I(n,this,t)),this.u.push(i),d=e[++r]}l!==(null==d?void 0:d.index)&&(n=A.nextNode(),l++)}return o}p(t){let i=0;for(const s of this.u)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class N{constructor(t,i,s,e){var o;this.type=2,this._$AH=b,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cm=null===(o=null==e?void 0:e.isConnected)||void 0===o||o}get _$AU(){var t,i;return null!==(i=null===(t=this._$AM)||void 0===t?void 0:t._$AU)&&void 0!==i?i:this._$Cm}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===t.nodeType&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=P(this,t,i),d(t)?t===b||null==t||\"\"===t?(this._$AH!==b&&this._$AR(),this._$AH=b):t!==this._$AH&&t!==x&&this.g(t):void 0!==t._$litType$?this.$(t):void 0!==t.nodeType?this.T(t):c(t)?this.k(t):this.g(t)}O(t,i=this._$AB){return this._$AA.parentNode.insertBefore(t,i)}T(t){this._$AH!==t&&(this._$AR(),this._$AH=this.O(t))}g(t){this._$AH!==b&&d(this._$AH)?this._$AA.nextSibling.data=t:this.T(h.createTextNode(t)),this._$AH=t}$(t){var i;const{values:s,_$litType$:e}=t,o=\"number\"==typeof e?this._$AC(t):(void 0===e.el&&(e.el=C.createElement(e.h,this.options)),e);if((null===(i=this._$AH)||void 0===i?void 0:i._$AD)===o)this._$AH.p(s);else{const t=new V(o,this),i=t.v(this.options);t.p(s),this.T(i),this._$AH=t}}_$AC(t){let i=T.get(t.strings);return void 0===i&&T.set(t.strings,i=new C(t)),i}k(t){u(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const o of t)e===i.length?i.push(s=new N(this.O(r()),this.O(r()),this,this.options)):s=i[e],s._$AI(o),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){var s;for(null===(s=this._$AP)||void 0===s||s.call(this,!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){var i;void 0===this._$AM&&(this._$Cm=t,null===(i=this._$AP)||void 0===i||i.call(this,t))}}class S{constructor(t,i,s,e,o){this.type=1,this._$AH=b,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=o,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=b}get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}_$AI(t,i=this,s,e){const o=this.strings;let n=!1;if(void 0===o)t=P(this,t,i,0),n=!d(t)||t!==this._$AH&&t!==x,n&&(this._$AH=t);else{const e=t;let l,h;for(t=o[0],l=0;l<o.length-1;l++)h=P(this,e[s+l],i,l),h===x&&(h=this._$AH[l]),n||(n=!d(h)||h!==this._$AH[l]),h===b?t=b:t!==b&&(t+=(null!=h?h:\"\")+o[l+1]),this._$AH[l]=h}n&&!e&&this.j(t)}j(t){t===b?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,null!=t?t:\"\")}}class M extends S{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===b?void 0:t}}const R=s?s.emptyScript:\"\";class k extends S{constructor(){super(...arguments),this.type=4}j(t){t&&t!==b?this.element.setAttribute(this.name,R):this.element.removeAttribute(this.name)}}class H extends S{constructor(t,i,s,e,o){super(t,i,s,e,o),this.type=5}_$AI(t,i=this){var s;if((t=null!==(s=P(this,t,i,0))&&void 0!==s?s:b)===x)return;const e=this._$AH,o=t===b&&e!==b||t.capture!==e.capture||t.once!==e.once||t.passive!==e.passive,n=t!==b&&(e===b||o);o&&this.element.removeEventListener(this.name,this,e),n&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){var i,s;\"function\"==typeof this._$AH?this._$AH.call(null!==(s=null===(i=this.options)||void 0===i?void 0:i.host)&&void 0!==s?s:this.element,t):this._$AH.handleEvent(t)}}class I{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){P(this,t)}}const L={P:\"$lit$\",A:o,M:n,C:1,L:E,R:V,D:c,V:P,I:N,H:S,N:k,U:H,B:M,F:I},z=i.litHtmlPolyfillSupport;null==z||z(C,N),(null!==(t=i.litHtmlVersions)&&void 0!==t?t:i.litHtmlVersions=[]).push(\"2.6.1\");const Z=(t,i,s)=>{var e,o;const n=null!==(e=null==s?void 0:s.renderBefore)&&void 0!==e?e:i;let l=n._$litPart$;if(void 0===l){const t=null!==(o=null==s?void 0:s.renderBefore)&&void 0!==o?o:null;n._$litPart$=l=new N(i.insertBefore(r(),t),t,void 0,null!=s?s:{})}return l._$AI(t),l};export{L as _$LH,y as html,x as noChange,b as nothing,Z as render,w as svg};\n//# sourceMappingURL=lit-html.js.map\n", "import{ReactiveElement as t}from\"@lit/reactive-element\";export*from\"@lit/reactive-element\";import{render as e,noChange as i}from\"lit-html\";export*from\"lit-html\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */var l,o;const r=t;class s extends t{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){var t,e;const i=super.createRenderRoot();return null!==(t=(e=this.renderOptions).renderBefore)&&void 0!==t||(e.renderBefore=i.firstChild),i}update(t){const i=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=e(i,this.renderRoot,this.renderOptions)}connectedCallback(){var t;super.connectedCallback(),null===(t=this._$Do)||void 0===t||t.setConnected(!0)}disconnectedCallback(){var t;super.disconnectedCallback(),null===(t=this._$Do)||void 0===t||t.setConnected(!1)}render(){return i}}s.finalized=!0,s._$litElement$=!0,null===(l=globalThis.litElementHydrateSupport)||void 0===l||l.call(globalThis,{LitElement:s});const n=globalThis.litElementPolyfillSupport;null==n||n({LitElement:s});const h={_$AK:(t,e,i)=>{t._$AK(e,i)},_$AL:t=>t._$AL};(null!==(o=globalThis.litElementVersions)&&void 0!==o?o:globalThis.litElementVersions=[]).push(\"3.2.2\");export{s as LitElement,r as UpdatingElement,h as _$LE};\n//# sourceMappingURL=lit-element.js.map\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst e=e=>n=>\"function\"==typeof n?((e,n)=>(customElements.define(e,n),n))(e,n):((e,n)=>{const{kind:t,elements:s}=n;return{kind:t,elements:s,finisher(n){customElements.define(e,n)}}})(e,n);export{e as customElement};\n//# sourceMappingURL=custom-element.js.map\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst i=(i,e)=>\"method\"===e.kind&&e.descriptor&&!(\"value\"in e.descriptor)?{...e,finisher(n){n.createProperty(e.key,i)}}:{kind:\"field\",key:Symbol(),placement:\"own\",descriptor:{},originalKey:e.key,initializer(){\"function\"==typeof e.initializer&&(this[e.key]=e.initializer.call(this))},finisher(n){n.createProperty(e.key,i)}};function e(e){return(n,t)=>void 0!==t?((i,e,n)=>{e.constructor.createProperty(n,i)})(e,n,t):i(e,n)}export{e as property};\n//# sourceMappingURL=property.js.map\n", "import{property as r}from\"./property.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function t(t){return r({...t,state:!0})}export{t as state};\n//# sourceMappingURL=state.js.map\n", "import{decorateProperty as o}from\"./base.js\";\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */var n;const e=null!=(null===(n=window.HTMLSlotElement)||void 0===n?void 0:n.prototype.assignedElements)?(o,n)=>o.assignedElements(n):(o,n)=>o.assignedNodes(n).filter((o=>o.nodeType===Node.ELEMENT_NODE));function l(n){const{slot:l,selector:t}=null!=n?n:{};return o({descriptor:o=>({get(){var o;const r=\"slot\"+(l?`[name=${l}]`:\":not([name])\"),i=null===(o=this.renderRoot)||void 0===o?void 0:o.querySelector(r),s=null!=i?e(i,n):[];return t?s.filter((o=>o.matches(t))):s},enumerable:!0,configurable:!0})})}export{l as queryAssignedElements};\n//# sourceMappingURL=query-assigned-elements.js.map\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t={ATTRIBUTE:1,CHILD:2,PROPERTY:3,BOOLEAN_ATTRIBUTE:4,EVENT:5,ELEMENT:6},e=t=>(...e)=>({_$litDirective$:t,values:e});class i{constructor(t){}get _$AU(){return this._$AM._$AU}_$AT(t,e,i){this._$Ct=t,this._$AM=e,this._$Ci=i}_$AS(t,e){return this.update(t,e)}update(t,e){return this.render(...e)}}export{i as Directive,t as PartType,e as directive};\n//# sourceMappingURL=directive.js.map\n", "import{noChange as t}from\"../lit-html.js\";import{directive as i,Directive as s,PartType as r}from\"../directive.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const o=i(class extends s{constructor(t){var i;if(super(t),t.type!==r.ATTRIBUTE||\"class\"!==t.name||(null===(i=t.strings)||void 0===i?void 0:i.length)>2)throw Error(\"`classMap()` can only be used in the `class` attribute and must be the only part in the attribute.\")}render(t){return\" \"+Object.keys(t).filter((i=>t[i])).join(\" \")+\" \"}update(i,[s]){var r,o;if(void 0===this.nt){this.nt=new Set,void 0!==i.strings&&(this.st=new Set(i.strings.join(\" \").split(/\\s/).filter((t=>\"\"!==t))));for(const t in s)s[t]&&!(null===(r=this.st)||void 0===r?void 0:r.has(t))&&this.nt.add(t);return this.render(s)}const e=i.element.classList;this.nt.forEach((t=>{t in s||(e.remove(t),this.nt.delete(t))}));for(const t in s){const i=!!s[t];i===this.nt.has(t)||(null===(o=this.st)||void 0===o?void 0:o.has(t))||(i?(e.add(t),this.nt.add(t)):(e.remove(t),this.nt.delete(t)))}return t}});export{o as classMap};\n//# sourceMappingURL=class-map.js.map\n", "function addUniqueItem(array, item) {\n    array.indexOf(item) === -1 && array.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    index > -1 && arr.splice(index, 1);\n}\n\nexport { addUniqueItem, removeItem };\n", "const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n", "const defaults = {\n    duration: 0.3,\n    delay: 0,\n    endDelay: 0,\n    repeat: 0,\n    easing: \"ease\",\n};\n\nexport { defaults };\n", "const isNumber = (value) => typeof value === \"number\";\n\nexport { isNumber };\n", "import { isNumber } from './is-number.es.js';\n\nconst isEasingList = (easing) => Array.isArray(easing) && !isNumber(easing[0]);\n\nexport { isEasingList };\n", "const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n", "import { isEasingList } from './is-easing-list.es.js';\nimport { wrap } from './wrap.es.js';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingList(easing)\n        ? easing[wrap(0, easing.length, i)]\n        : easing;\n}\n\nexport { getEasingForSegment };\n", "const mix = (min, max, progress) => -progress * min + progress * max + min;\n\nexport { mix };\n", "const noop = () => { };\nconst noopReturn = (v) => v;\n\nexport { noop, noopReturn };\n", "const progress = (min, max, value) => max - min === 0 ? 1 : (value - min) / (max - min);\n\nexport { progress };\n", "import { mix } from './mix.es.js';\nimport { progress } from './progress.es.js';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\nfunction defaultOffset(length) {\n    const offset = [0];\n    fillOffset(offset, length - 1);\n    return offset;\n}\n\nexport { defaultOffset, fillOffset };\n", "import { mix } from './mix.es.js';\nimport { noopReturn } from './noop.es.js';\nimport { fillOffset, defaultOffset } from './offset.es.js';\nimport { progress } from './progress.es.js';\nimport { getEasingForSegment } from './easing.es.js';\nimport { clamp } from './clamp.es.js';\n\nfunction interpolate(output, input = defaultOffset(output.length), easing = noopReturn) {\n    const length = output.length;\n    /**\n     * If the input length is lower than the output we\n     * fill the input to match. This currently assumes the input\n     * is an animation progress value so is a good candidate for\n     * moving outside the function.\n     */\n    const remainder = length - input.length;\n    remainder > 0 && fillOffset(input, remainder);\n    return (t) => {\n        let i = 0;\n        for (; i < length - 2; i++) {\n            if (t < input[i + 1])\n                break;\n        }\n        let progressInRange = clamp(0, 1, progress(input[i], input[i + 1], t));\n        const segmentEasing = getEasingForSegment(easing, i);\n        progressInRange = segmentEasing(progressInRange);\n        return mix(output[i], output[i + 1], progressInRange);\n    };\n}\n\nexport { interpolate };\n", "import { isNumber } from './is-number.es.js';\n\nconst isCubicBezier = (easing) => Array.isArray(easing) && isNumber(easing[0]);\n\nexport { isCubicBezier };\n", "const isEasingGenerator = (easing) => typeof easing === \"object\" &&\n    Boolean(easing.createAnimation);\n\nexport { isEasingGenerator };\n", "const isFunction = (value) => typeof value === \"function\";\n\nexport { isFunction };\n", "const isString = (value) => typeof value === \"string\";\n\nexport { isString };\n", "const time = {\n    ms: (seconds) => seconds * 1000,\n    s: (milliseconds) => milliseconds / 1000,\n};\n\nexport { time };\n", "/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n", "import { noopReturn } from '@motionone/utils';\n\n/*\n  Bezier function generator\n\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) * t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noopReturn;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n", "import { clamp } from '@motionone/utils';\n\nconst steps = (steps, direction = \"end\") => (progress) => {\n    progress =\n        direction === \"end\"\n            ? Math.min(progress, 0.999)\n            : Math.max(progress, 0.001);\n    const expanded = progress * steps;\n    const rounded = direction === \"end\" ? Math.floor(expanded) : Math.ceil(expanded);\n    return clamp(0, 1, rounded / steps);\n};\n\nexport { steps };\n", "import { cubicBezier, steps } from '@motionone/easing';\nimport { isFunction, isCubicBezier, noopReturn } from '@motionone/utils';\n\nconst namedEasings = {\n    ease: cubicBezier(0.25, 0.1, 0.25, 1.0),\n    \"ease-in\": cubicBezier(0.42, 0.0, 1.0, 1.0),\n    \"ease-in-out\": cubicBezier(0.42, 0.0, 0.58, 1.0),\n    \"ease-out\": cubicBezier(0.0, 0.0, 0.58, 1.0),\n};\nconst functionArgsRegex = /\\((.*?)\\)/;\nfunction getEasingFunction(definition) {\n    // If already an easing function, return\n    if (isFunction(definition))\n        return definition;\n    // If an easing curve definition, return bezier function\n    if (isCubicBezier(definition))\n        return cubicBezier(...definition);\n    // If we have a predefined easing function, return\n    if (namedEasings[definition])\n        return namedEasings[definition];\n    // If this is a steps function, attempt to create easing curve\n    if (definition.startsWith(\"steps\")) {\n        const args = functionArgsRegex.exec(definition);\n        if (args) {\n            const argsArray = args[1].split(\",\");\n            return steps(parseFloat(argsArray[0]), argsArray[1].trim());\n        }\n    }\n    return noopReturn;\n}\n\nexport { getEasingFunction };\n", "import { noopReturn, defaults, isEasingGenerator, isEasingList, interpolate } from '@motionone/utils';\nimport { getEasingFunction } from './utils/easing.es.js';\n\nclass Animation {\n    constructor(output, keyframes = [0, 1], { easing, duration: initialDuration = defaults.duration, delay = defaults.delay, endDelay = defaults.endDelay, repeat = defaults.repeat, offset, direction = \"normal\", } = {}) {\n        this.startTime = null;\n        this.rate = 1;\n        this.t = 0;\n        this.cancelTimestamp = null;\n        this.easing = noopReturn;\n        this.duration = 0;\n        this.totalDuration = 0;\n        this.repeat = 0;\n        this.playState = \"idle\";\n        this.finished = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n        easing = easing || defaults.easing;\n        if (isEasingGenerator(easing)) {\n            const custom = easing.createAnimation(keyframes);\n            easing = custom.easing;\n            keyframes = custom.keyframes || keyframes;\n            initialDuration = custom.duration || initialDuration;\n        }\n        this.repeat = repeat;\n        this.easing = isEasingList(easing) ? noopReturn : getEasingFunction(easing);\n        this.updateDuration(initialDuration);\n        const interpolate$1 = interpolate(keyframes, offset, isEasingList(easing) ? easing.map(getEasingFunction) : noopReturn);\n        this.tick = (timestamp) => {\n            var _a;\n            // TODO: Temporary fix for OptionsResolver typing\n            delay = delay;\n            let t = 0;\n            if (this.pauseTime !== undefined) {\n                t = this.pauseTime;\n            }\n            else {\n                t = (timestamp - this.startTime) * this.rate;\n            }\n            this.t = t;\n            // Convert to seconds\n            t /= 1000;\n            // Rebase on delay\n            t = Math.max(t - delay, 0);\n            /**\n             * If this animation has finished, set the current time\n             * to the total duration.\n             */\n            if (this.playState === \"finished\" && this.pauseTime === undefined) {\n                t = this.totalDuration;\n            }\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = t / this.duration;\n            // TODO progress += iterationStart\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            iterationProgress === 1 && currentIteration--;\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = currentIteration % 2;\n            if (direction === \"reverse\" ||\n                (direction === \"alternate\" && iterationIsOdd) ||\n                (direction === \"alternate-reverse\" && !iterationIsOdd)) {\n                iterationProgress = 1 - iterationProgress;\n            }\n            const p = t >= this.totalDuration ? 1 : Math.min(iterationProgress, 1);\n            const latest = interpolate$1(this.easing(p));\n            output(latest);\n            const isAnimationFinished = this.pauseTime === undefined &&\n                (this.playState === \"finished\" || t >= this.totalDuration + endDelay);\n            if (isAnimationFinished) {\n                this.playState = \"finished\";\n                (_a = this.resolve) === null || _a === void 0 ? void 0 : _a.call(this, latest);\n            }\n            else if (this.playState !== \"idle\") {\n                this.frameRequestId = requestAnimationFrame(this.tick);\n            }\n        };\n        this.play();\n    }\n    play() {\n        const now = performance.now();\n        this.playState = \"running\";\n        if (this.pauseTime !== undefined) {\n            this.startTime = now - this.pauseTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = now;\n        }\n        this.cancelTimestamp = this.startTime;\n        this.pauseTime = undefined;\n        this.frameRequestId = requestAnimationFrame(this.tick);\n    }\n    pause() {\n        this.playState = \"paused\";\n        this.pauseTime = this.t;\n    }\n    finish() {\n        this.playState = \"finished\";\n        this.tick(0);\n    }\n    stop() {\n        var _a;\n        this.playState = \"idle\";\n        if (this.frameRequestId !== undefined) {\n            cancelAnimationFrame(this.frameRequestId);\n        }\n        (_a = this.reject) === null || _a === void 0 ? void 0 : _a.call(this, false);\n    }\n    cancel() {\n        this.stop();\n        this.tick(this.cancelTimestamp);\n    }\n    reverse() {\n        this.rate *= -1;\n    }\n    commitStyles() { }\n    updateDuration(duration) {\n        this.duration = duration;\n        this.totalDuration = duration * (this.repeat + 1);\n    }\n    get currentTime() {\n        return this.t;\n    }\n    set currentTime(t) {\n        if (this.pauseTime !== undefined || this.rate === 0) {\n            this.pauseTime = t;\n        }\n        else {\n            this.startTime = performance.now() - t / this.rate;\n        }\n    }\n    get playbackRate() {\n        return this.rate;\n    }\n    set playbackRate(rate) {\n        this.rate = rate;\n    }\n}\n\nexport { Animation };\n", "var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n", "/**\n * The MotionValue tracks the state of a single animatable\n * value. Currently, updatedAt and current are unused. The\n * long term idea is to use this to minimise the number\n * of DOM reads, and to abstract the DOM interactions here.\n */\nclass MotionValue {\n    setAnimation(animation) {\n        this.animation = animation;\n        animation === null || animation === void 0 ? void 0 : animation.finished.then(() => this.clearAnimation()).catch(() => { });\n    }\n    clearAnimation() {\n        this.animation = this.generator = undefined;\n    }\n}\n\nexport { MotionValue };\n", "import { MotionValue } from '@motionone/types';\n\nconst data = new WeakMap();\nfunction getAnimationData(element) {\n    if (!data.has(element)) {\n        data.set(element, {\n            transforms: [],\n            values: new Map(),\n        });\n    }\n    return data.get(element);\n}\nfunction getMotionValue(motionValues, name) {\n    if (!motionValues.has(name)) {\n        motionValues.set(name, new MotionValue());\n    }\n    return motionValues.get(name);\n}\n\nexport { getAnimationData, getMotionValue };\n", "import { noopReturn, addUniqueItem } from '@motionone/utils';\nimport { getAnimationData } from '../data.es.js';\n\n/**\n * A list of all transformable axes. We'll use this list to generated a version\n * of each axes for each transform.\n */\nconst axes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * An ordered array of each transformable value. By default, transform values\n * will be sorted to this order.\n */\nconst order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\nconst transformAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n};\nconst rotation = {\n    syntax: \"<angle>\",\n    initialValue: \"0deg\",\n    toDefaultUnit: (v) => v + \"deg\",\n};\nconst baseTransformProperties = {\n    translate: {\n        syntax: \"<length-percentage>\",\n        initialValue: \"0px\",\n        toDefaultUnit: (v) => v + \"px\",\n    },\n    rotate: rotation,\n    scale: {\n        syntax: \"<number>\",\n        initialValue: 1,\n        toDefaultUnit: noopReturn,\n    },\n    skew: rotation,\n};\nconst transformDefinitions = new Map();\nconst asTransformCssVar = (name) => `--motion-${name}`;\n/**\n * Generate a list of every possible transform key\n */\nconst transforms = [\"x\", \"y\", \"z\"];\norder.forEach((name) => {\n    axes.forEach((axis) => {\n        transforms.push(name + axis);\n        transformDefinitions.set(asTransformCssVar(name + axis), baseTransformProperties[name]);\n    });\n});\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst compareTransformOrder = (a, b) => transforms.indexOf(a) - transforms.indexOf(b);\n/**\n * Provide a quick way to check if a string is the name of a transform\n */\nconst transformLookup = new Set(transforms);\nconst isTransform = (name) => transformLookup.has(name);\nconst addTransformToElement = (element, name) => {\n    // Map x to translateX etc\n    if (transformAlias[name])\n        name = transformAlias[name];\n    const { transforms } = getAnimationData(element);\n    addUniqueItem(transforms, name);\n    /**\n     * TODO: An optimisation here could be to cache the transform in element data\n     * and only update if this has changed.\n     */\n    element.style.transform = buildTransformTemplate(transforms);\n};\nconst buildTransformTemplate = (transforms) => transforms\n    .sort(compareTransformOrder)\n    .reduce(transformListToString, \"\")\n    .trim();\nconst transformListToString = (template, name) => `${template} ${name}(var(${asTransformCssVar(name)}))`;\n\nexport { addTransformToElement, asTransformCssVar, axes, buildTransformTemplate, compareTransformOrder, isTransform, transformAlias, transformDefinitions };\n", "import { transformDefinitions } from './transforms.es.js';\n\nconst isCssVar = (name) => name.startsWith(\"--\");\nconst registeredProperties = new Set();\nfunction registerCssVariable(name) {\n    if (registeredProperties.has(name))\n        return;\n    registeredProperties.add(name);\n    try {\n        const { syntax, initialValue } = transformDefinitions.has(name)\n            ? transformDefinitions.get(name)\n            : {};\n        CSS.registerProperty({\n            name,\n            inherits: false,\n            syntax,\n            initialValue,\n        });\n    }\n    catch (e) { }\n}\n\nexport { isCssVar, registerCssVariable, registeredProperties };\n", "const testAnimation = (keyframes, options) => document.createElement(\"div\").animate(keyframes, options);\nconst featureTests = {\n    cssRegisterProperty: () => typeof CSS !== \"undefined\" &&\n        Object.hasOwnProperty.call(CSS, \"registerProperty\"),\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n    partialKeyframes: () => {\n        try {\n            testAnimation({ opacity: [1] });\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    },\n    finished: () => Boolean(testAnimation({ opacity: [0, 1] }, { duration: 0.001 }).finished),\n    linearEasing: () => {\n        try {\n            testAnimation({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    },\n};\nconst results = {};\nconst supports = {};\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n", "import { isFunction, defaults, isCubicBezier, progress } from '@motionone/utils';\nimport { supports } from './feature-detection.es.js';\n\n// Create a linear easing point for every x second\nconst resolution = 0.015;\nconst generateLinearEasingPoints = (easing, duration) => {\n    let points = \"\";\n    const numPoints = Math.round(duration / resolution);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return points.substring(0, points.length - 2);\n};\nconst convertEasing = (easing, duration) => {\n    if (isFunction(easing)) {\n        return supports.linearEasing()\n            ? `linear(${generateLinearEasingPoints(easing, duration)})`\n            : defaults.easing;\n    }\n    else {\n        return isCubicBezier(easing) ? cubicBezierAsString(easing) : easing;\n    }\n};\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { convertEasing, cubicBezierAsString, generateLinearEasingPoints };\n", "function hydrateKeyframes(keyframes, readInitialValue) {\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i ? keyframes[i - 1] : readInitialValue();\n        }\n    }\n    return keyframes;\n}\nconst keyframesList = (keyframes) => Array.isArray(keyframes) ? keyframes : [keyframes];\n\nexport { hydrateKeyframes, keyframesList };\n", "import { isTransform, asTransformCssVar, transformAlias } from './transforms.es.js';\n\nfunction getStyleName(key) {\n    if (transformAlias[key])\n        key = transformAlias[key];\n    return isTransform(key) ? asTransformCssVar(key) : key;\n}\n\nexport { getStyleName };\n", "import { isCssVar } from './utils/css-var.es.js';\nimport { getStyleName } from './utils/get-style-name.es.js';\nimport { transformDefinitions } from './utils/transforms.es.js';\n\nconst style = {\n    get: (element, name) => {\n        name = getStyleName(name);\n        let value = isCssVar(name)\n            ? element.style.getPropertyValue(name)\n            : getComputedStyle(element)[name];\n        if (!value && value !== 0) {\n            const definition = transformDefinitions.get(name);\n            if (definition)\n                value = definition.initialValue;\n        }\n        return value;\n    },\n    set: (element, name, value) => {\n        name = getStyleName(name);\n        if (isCssVar(name)) {\n            element.style.setProperty(name, value);\n        }\n        else {\n            element.style[name] = value;\n        }\n    },\n};\n\nexport { style };\n", "function stopAnimation(animation, needsCommit = true) {\n    if (!animation || animation.playState === \"finished\")\n        return;\n    // Suppress error thrown by WAAPI\n    try {\n        if (animation.stop) {\n            animation.stop();\n        }\n        else {\n            needsCommit && animation.commitStyles();\n            animation.cancel();\n        }\n    }\n    catch (e) { }\n}\n\nexport { stopAnimation };\n", "import { noopReturn, isString } from '@motionone/utils';\n\nfunction getUnitConverter(keyframes, definition) {\n    var _a;\n    let toUnit = (definition === null || definition === void 0 ? void 0 : definition.toDefaultUnit) || noopReturn;\n    const finalKeyframe = keyframes[keyframes.length - 1];\n    if (isString(finalKeyframe)) {\n        const unit = ((_a = finalKeyframe.match(/(-?[\\d.]+)([a-z%]*)/)) === null || _a === void 0 ? void 0 : _a[2]) || \"\";\n        if (unit)\n            toUnit = (value) => value + unit;\n    }\n    return toUnit;\n}\n\nexport { getUnitConverter };\n", "import { getAnimationData, getMotionValue } from './data.es.js';\nimport { isCssVar, registerCssVariable } from './utils/css-var.es.js';\nimport { defaults, isEasingGenerator, isFunction, isEasingList, isNumber, time, noop } from '@motionone/utils';\nimport { isTransform, addTransformToElement, transformDefinitions } from './utils/transforms.es.js';\nimport { convertEasing } from './utils/easing.es.js';\nimport { supports } from './utils/feature-detection.es.js';\nimport { hydrateKeyframes, keyframesList } from './utils/keyframes.es.js';\nimport { style } from './style.es.js';\nimport { getStyleName } from './utils/get-style-name.es.js';\nimport { stopAnimation } from './utils/stop-animation.es.js';\nimport { getUnitConverter } from './utils/get-unit.es.js';\n\nfunction getDevToolsRecord() {\n    return window.__MOTION_DEV_TOOLS_RECORD;\n}\nfunction animateStyle(element, key, keyframesDefinition, options = {}, AnimationPolyfill) {\n    const record = getDevToolsRecord();\n    const isRecording = options.record !== false && record;\n    let animation;\n    let { duration = defaults.duration, delay = defaults.delay, endDelay = defaults.endDelay, repeat = defaults.repeat, easing = defaults.easing, persist = false, direction, offset, allowWebkitAcceleration = false, } = options;\n    const data = getAnimationData(element);\n    const valueIsTransform = isTransform(key);\n    let canAnimateNatively = supports.waapi();\n    /**\n     * If this is an individual transform, we need to map its\n     * key to a CSS variable and update the element's transform style\n     */\n    valueIsTransform && addTransformToElement(element, key);\n    const name = getStyleName(key);\n    const motionValue = getMotionValue(data.values, name);\n    /**\n     * Get definition of value, this will be used to convert numerical\n     * keyframes into the default value type.\n     */\n    const definition = transformDefinitions.get(name);\n    /**\n     * Stop the current animation, if any. Because this will trigger\n     * commitStyles (DOM writes) and we might later trigger DOM reads,\n     * this is fired now and we return a factory function to create\n     * the actual animation that can get called in batch,\n     */\n    stopAnimation(motionValue.animation, !(isEasingGenerator(easing) && motionValue.generator) &&\n        options.record !== false);\n    /**\n     * Batchable factory function containing all DOM reads.\n     */\n    return () => {\n        const readInitialValue = () => { var _a, _b; return (_b = (_a = style.get(element, name)) !== null && _a !== void 0 ? _a : definition === null || definition === void 0 ? void 0 : definition.initialValue) !== null && _b !== void 0 ? _b : 0; };\n        /**\n         * Replace null values with the previous keyframe value, or read\n         * it from the DOM if it's the first keyframe.\n         */\n        let keyframes = hydrateKeyframes(keyframesList(keyframesDefinition), readInitialValue);\n        /**\n         * Detect unit type of keyframes.\n         */\n        const toUnit = getUnitConverter(keyframes, definition);\n        if (isEasingGenerator(easing)) {\n            const custom = easing.createAnimation(keyframes, key !== \"opacity\", readInitialValue, name, motionValue);\n            easing = custom.easing;\n            keyframes = custom.keyframes || keyframes;\n            duration = custom.duration || duration;\n        }\n        /**\n         * If this is a CSS variable we need to register it with the browser\n         * before it can be animated natively. We also set it with setProperty\n         * rather than directly onto the element.style object.\n         */\n        if (isCssVar(name)) {\n            if (supports.cssRegisterProperty()) {\n                registerCssVariable(name);\n            }\n            else {\n                canAnimateNatively = false;\n            }\n        }\n        /**\n         * If we've been passed a custom easing function, and this browser\n         * does **not** support linear() easing, and the value is a transform\n         * (and thus a pure number) we can still support the custom easing\n         * by falling back to the animation polyfill.\n         */\n        if (valueIsTransform &&\n            !supports.linearEasing() &&\n            (isFunction(easing) || (isEasingList(easing) && easing.some(isFunction)))) {\n            canAnimateNatively = false;\n        }\n        /**\n         * If we can animate this value with WAAPI, do so.\n         */\n        if (canAnimateNatively) {\n            /**\n             * Convert numbers to default value types. Currently this only supports\n             * transforms but it could also support other value types.\n             */\n            if (definition) {\n                keyframes = keyframes.map((value) => isNumber(value) ? definition.toDefaultUnit(value) : value);\n            }\n            /**\n             * If this browser doesn't support partial/implicit keyframes we need to\n             * explicitly provide one.\n             */\n            if (keyframes.length === 1 &&\n                (!supports.partialKeyframes() || isRecording)) {\n                keyframes.unshift(readInitialValue());\n            }\n            const animationOptions = {\n                delay: time.ms(delay),\n                duration: time.ms(duration),\n                endDelay: time.ms(endDelay),\n                easing: !isEasingList(easing)\n                    ? convertEasing(easing, duration)\n                    : undefined,\n                direction,\n                iterations: repeat + 1,\n                fill: \"both\",\n            };\n            animation = element.animate({\n                [name]: keyframes,\n                offset,\n                easing: isEasingList(easing)\n                    ? easing.map((thisEasing) => convertEasing(thisEasing, duration))\n                    : undefined,\n            }, animationOptions);\n            /**\n             * Polyfill finished Promise in browsers that don't support it\n             */\n            if (!animation.finished) {\n                animation.finished = new Promise((resolve, reject) => {\n                    animation.onfinish = resolve;\n                    animation.oncancel = reject;\n                });\n            }\n            const target = keyframes[keyframes.length - 1];\n            animation.finished\n                .then(() => {\n                if (persist)\n                    return;\n                // Apply styles to target\n                style.set(element, name, target);\n                // Ensure fill modes don't persist\n                animation.cancel();\n            })\n                .catch(noop);\n            /**\n             * This forces Webkit to run animations on the main thread by exploiting\n             * this condition:\n             * https://trac.webkit.org/browser/webkit/trunk/Source/WebCore/platform/graphics/ca/GraphicsLayerCA.cpp?rev=281238#L1099\n             *\n             * This fixes Webkit's timing bugs, like accelerated animations falling\n             * out of sync with main thread animations and massive delays in starting\n             * accelerated animations in WKWebView.\n             */\n            if (!allowWebkitAcceleration)\n                animation.playbackRate = 1.000001;\n            /**\n             * If we can't animate the value natively then we can fallback to the numbers-only\n             * polyfill for transforms.\n             */\n        }\n        else if (AnimationPolyfill && valueIsTransform) {\n            /**\n             * If any keyframe is a string (because we measured it from the DOM), we need to convert\n             * it into a number before passing to the Animation polyfill.\n             */\n            keyframes = keyframes.map((value) => typeof value === \"string\" ? parseFloat(value) : value);\n            /**\n             * If we only have a single keyframe, we need to create an initial keyframe by reading\n             * the current value from the DOM.\n             */\n            if (keyframes.length === 1) {\n                keyframes.unshift(parseFloat(readInitialValue()));\n            }\n            animation = new AnimationPolyfill((latest) => {\n                style.set(element, name, toUnit ? toUnit(latest) : latest);\n            }, keyframes, Object.assign(Object.assign({}, options), { duration,\n                easing }));\n        }\n        else {\n            const target = keyframes[keyframes.length - 1];\n            style.set(element, name, definition && isNumber(target)\n                ? definition.toDefaultUnit(target)\n                : target);\n        }\n        if (isRecording) {\n            record(element, key, keyframes, {\n                duration,\n                delay: delay,\n                easing,\n                repeat,\n                offset,\n            }, \"motion-one\");\n        }\n        motionValue.setAnimation(animation);\n        return animation;\n    };\n}\n\nexport { animateStyle };\n", "const getOptions = (options, key) => \n/**\n * TODO: Make test for this\n * Always return a new object otherwise delay is overwritten by results of stagger\n * and this results in no stagger\n */\noptions[key] ? Object.assign(Object.assign({}, options), options[key]) : Object.assign({}, options);\n\nexport { getOptions };\n", "function resolveElements(elements, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = document.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = document.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n", "import { defaults, noop, time } from '@motionone/utils';\nimport { stopAnimation } from './stop-animation.es.js';\n\nconst createAnimation = (factory) => factory();\nconst withControls = (animationFactory, options, duration = defaults.duration) => {\n    return new Proxy({\n        animations: animationFactory.map(createAnimation).filter(Boolean),\n        duration,\n        options,\n    }, controls);\n};\n/**\n * TODO:\n * Currently this returns the first animation, ideally it would return\n * the first active animation.\n */\nconst getActiveAnimation = (state) => state.animations[0];\nconst controls = {\n    get: (target, key) => {\n        const activeAnimation = getActiveAnimation(target);\n        switch (key) {\n            case \"duration\":\n                return target.duration;\n            case \"currentTime\":\n                return time.s((activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key]) || 0);\n            case \"playbackRate\":\n            case \"playState\":\n                return activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key];\n            case \"finished\":\n                if (!target.finished) {\n                    target.finished = Promise.all(target.animations.map(selectFinished)).catch(noop);\n                }\n                return target.finished;\n            case \"stop\":\n                return () => {\n                    target.animations.forEach((animation) => stopAnimation(animation));\n                };\n            case \"forEachNative\":\n                /**\n                 * This is for internal use only, fire a callback for each\n                 * underlying animation.\n                 */\n                return (callback) => {\n                    target.animations.forEach((animation) => callback(animation, target));\n                };\n            default:\n                return typeof (activeAnimation === null || activeAnimation === void 0 ? void 0 : activeAnimation[key]) === \"undefined\"\n                    ? undefined\n                    : () => target.animations.forEach((animation) => animation[key]());\n        }\n    },\n    set: (target, key, value) => {\n        switch (key) {\n            case \"currentTime\":\n                value = time.ms(value);\n            case \"currentTime\":\n            case \"playbackRate\":\n                for (let i = 0; i < target.animations.length; i++) {\n                    target.animations[i][key] = value;\n                }\n                return true;\n        }\n        return false;\n    },\n};\nconst selectFinished = (animation) => animation.finished;\n\nexport { controls, withControls };\n", "import { isNumber, isFunction } from '@motionone/utils';\nimport { getEasingFunction } from '@motionone/animation';\n\nfunction stagger(duration = 0.1, { start = 0, from = 0, easing } = {}) {\n    return (i, total) => {\n        const fromIndex = isNumber(from) ? from : getFromIndex(from, total);\n        const distance = Math.abs(fromIndex - i);\n        let delay = duration * distance;\n        if (easing) {\n            const maxDelay = total * duration;\n            const easingFunction = getEasingFunction(easing);\n            delay = easingFunction(delay / maxDelay) * maxDelay;\n        }\n        return start + delay;\n    };\n}\nfunction getFromIndex(from, total) {\n    if (from === \"first\") {\n        return 0;\n    }\n    else {\n        const lastIndex = total - 1;\n        return from === \"last\" ? lastIndex : lastIndex / 2;\n    }\n}\nfunction resolveOption(option, i, total) {\n    return isFunction(option) ? option(i, total) : option;\n}\n\nexport { getFromIndex, resolveOption, stagger };\n", "import { invariant } from 'hey-listen';\nimport { animateStyle } from './animate-style.es.js';\nimport { getOptions } from './utils/options.es.js';\nimport { resolveElements } from '../utils/resolve-elements.es.js';\nimport { withControls } from './utils/controls.es.js';\nimport { resolveOption } from '../utils/stagger.es.js';\n\nfunction createAnimate(AnimatePolyfill) {\n    return function animate(elements, keyframes, options = {}) {\n        elements = resolveElements(elements);\n        const numElements = elements.length;\n        invariant(Boolean(numElements), \"No valid element provided.\");\n        invariant(Boolean(keyframes), \"No keyframes defined.\");\n        /**\n         * Create and start new animations\n         */\n        const animationFactories = [];\n        for (let i = 0; i < numElements; i++) {\n            const element = elements[i];\n            for (const key in keyframes) {\n                const valueOptions = getOptions(options, key);\n                valueOptions.delay = resolveOption(valueOptions.delay, i, numElements);\n                const animation = animateStyle(element, key, keyframes[key], valueOptions, AnimatePolyfill);\n                animationFactories.push(animation);\n            }\n        }\n        return withControls(animationFactories, options, \n        /**\n         * TODO:\n         * If easing is set to spring or glide, duration will be dynamically\n         * generated. Ideally we would dynamically generate this from\n         * animation.effect.getComputedTiming().duration but this isn't\n         * supported in iOS13 or our number polyfill. Perhaps it's possible\n         * to Proxy animations returned from animateStyle that has duration\n         * as a getter.\n         */\n        options.duration);\n    };\n}\n\nexport { createAnimate };\n", "import { Animation } from '@motionone/animation';\nimport { createAnimate } from './create-animate.es.js';\n\nconst animate = createAnimate(Animation);\n\nexport { animate };\n", "/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n", "import { velocityPerSecond } from '@motionone/utils';\n\nconst sampleT = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - sampleT, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n", "const defaults = {\n    stiffness: 100.0,\n    damping: 10.0,\n    mass: 1.0,\n};\n\nexport { defaults };\n", "import { defaults } from './defaults.es.js';\n\nconst calcDampingRatio = (stiffness = defaults.stiffness, damping = defaults.damping, mass = defaults.mass) => damping / (2 * Math.sqrt(stiffness * mass));\n\nexport { calcDampingRatio };\n", "function hasReachedTarget(origin, target, current) {\n    return ((origin < target && current >= target) ||\n        (origin > target && current <= target));\n}\n\nexport { hasReachedTarget };\n", "import { time } from '@motionone/utils';\nimport { defaults } from './defaults.es.js';\nimport { calcDampingRatio } from './utils.es.js';\nimport { hasReachedTarget } from '../utils/has-reached-target.es.js';\nimport { calcGeneratorVelocity } from '../utils/velocity.es.js';\n\nconst spring = ({ stiffness = defaults.stiffness, damping = defaults.damping, mass = defaults.mass, from = 0, to = 1, velocity = 0.0, restSpeed = 2, restDistance = 0.5, } = {}) => {\n    velocity = velocity ? time.s(velocity) : 0.0;\n    const state = {\n        done: false,\n        hasReachedTarget: false,\n        current: from,\n        target: to,\n    };\n    const initialDelta = to - from;\n    const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n    const dampingRatio = calcDampingRatio(stiffness, damping, mass);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = undampedAngularFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n        // Underdamped spring (bouncy)\n        resolveSpring = (t) => to -\n            Math.exp(-dampingRatio * undampedAngularFreq * t) *\n                (((-velocity + dampingRatio * undampedAngularFreq * initialDelta) /\n                    angularFreq) *\n                    Math.sin(angularFreq * t) +\n                    initialDelta * Math.cos(angularFreq * t));\n    }\n    else {\n        // Critically damped spring\n        resolveSpring = (t) => {\n            return (to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta + (-velocity + undampedAngularFreq * initialDelta) * t));\n        };\n    }\n    return (t) => {\n        state.current = resolveSpring(t);\n        const currentVelocity = t === 0\n            ? velocity\n            : calcGeneratorVelocity(resolveSpring, t, state.current);\n        const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n        const isBelowDisplacementThreshold = Math.abs(to - state.current) <= restDistance;\n        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n        state.hasReachedTarget = hasReachedTarget(from, to, state.current);\n        return state;\n    };\n};\n\nexport { spring };\n", "import { noopReturn } from '@motionone/utils';\n\nconst timeStep = 10;\nconst maxDuration = 10000;\nfunction pregenerateKeyframes(generator, toUnit = noopReturn) {\n    let overshootDuration = undefined;\n    let timestamp = timeStep;\n    let state = generator(0);\n    const keyframes = [toUnit(state.current)];\n    while (!state.done && timestamp < maxDuration) {\n        state = generator(timestamp);\n        keyframes.push(toUnit(state.done ? state.target : state.current));\n        if (overshootDuration === undefined && state.hasReachedTarget) {\n            overshootDuration = timestamp;\n        }\n        timestamp += timeStep;\n    }\n    const duration = timestamp - timeStep;\n    /**\n     * If generating an animation that didn't actually move,\n     * generate a second keyframe so we have an origin and target.\n     */\n    if (keyframes.length === 1)\n        keyframes.push(state.current);\n    return {\n        keyframes,\n        duration: duration / 1000,\n        overshootDuration: (overshootDuration !== null && overshootDuration !== void 0 ? overshootDuration : duration) / 1000,\n    };\n}\n\nexport { pregenerateKeyframes };\n", "import { calcGeneratorVelocity, pregenerateKeyframes } from '@motionone/generators';\nimport { isNumber, isString, noopReturn } from '@motionone/utils';\nimport { getUnitConverter } from '../animate/utils/get-unit.es.js';\nimport { transformDefinitions } from '../animate/utils/transforms.es.js';\nimport { getStyleName } from '../animate/utils/get-style-name.es.js';\n\nfunction canGenerate(value) {\n    return isNumber(value) && !isNaN(value);\n}\nfunction getAsNumber(value) {\n    return isString(value) ? parseFloat(value) : value;\n}\nfunction createGeneratorEasing(createGenerator) {\n    const keyframesCache = new WeakMap();\n    return (options = {}) => {\n        const generatorCache = new Map();\n        const getGenerator = (from = 0, to = 100, velocity = 0, isScale = false) => {\n            const key = `${from}-${to}-${velocity}-${isScale}`;\n            if (!generatorCache.has(key)) {\n                generatorCache.set(key, createGenerator(Object.assign({ from,\n                    to,\n                    velocity, restSpeed: isScale ? 0.05 : 2, restDistance: isScale ? 0.01 : 0.5 }, options)));\n            }\n            return generatorCache.get(key);\n        };\n        const getKeyframes = (generator, toUnit) => {\n            if (!keyframesCache.has(generator)) {\n                keyframesCache.set(generator, pregenerateKeyframes(generator, toUnit));\n            }\n            return keyframesCache.get(generator);\n        };\n        return {\n            createAnimation: (keyframes, shouldGenerate = true, getOrigin, name, motionValue) => {\n                let settings;\n                let origin;\n                let target;\n                let velocity = 0;\n                let toUnit = noopReturn;\n                const numKeyframes = keyframes.length;\n                /**\n                 * If we should generate an animation for this value, run some preperation\n                 * like resolving target/origin, finding a unit (if any) and determine if\n                 * it is actually possible to generate.\n                 */\n                if (shouldGenerate) {\n                    toUnit = getUnitConverter(keyframes, name ? transformDefinitions.get(getStyleName(name)) : undefined);\n                    const targetDefinition = keyframes[numKeyframes - 1];\n                    target = getAsNumber(targetDefinition);\n                    if (numKeyframes > 1 && keyframes[0] !== null) {\n                        /**\n                         * If we have multiple keyframes, take the initial keyframe as the origin.\n                         */\n                        origin = getAsNumber(keyframes[0]);\n                    }\n                    else {\n                        const prevGenerator = motionValue === null || motionValue === void 0 ? void 0 : motionValue.generator;\n                        /**\n                         * If we have an existing generator for this value we can use it to resolve\n                         * the animation's current value and velocity.\n                         */\n                        if (prevGenerator) {\n                            /**\n                             * If we have a generator for this value we can use it to resolve\n                             * the animations's current value and velocity.\n                             */\n                            const { animation, generatorStartTime } = motionValue;\n                            const startTime = (animation === null || animation === void 0 ? void 0 : animation.startTime) || generatorStartTime || 0;\n                            const currentTime = (animation === null || animation === void 0 ? void 0 : animation.currentTime) || performance.now() - startTime;\n                            const prevGeneratorCurrent = prevGenerator(currentTime).current;\n                            origin = prevGeneratorCurrent;\n                            velocity = calcGeneratorVelocity((t) => prevGenerator(t).current, currentTime, prevGeneratorCurrent);\n                        }\n                        else if (getOrigin) {\n                            /**\n                             * As a last resort, read the origin from the DOM.\n                             */\n                            origin = getAsNumber(getOrigin());\n                        }\n                    }\n                }\n                /**\n                 * If we've determined it is possible to generate an animation, do so.\n                 */\n                if (canGenerate(origin) && canGenerate(target)) {\n                    const generator = getGenerator(origin, target, velocity, name === null || name === void 0 ? void 0 : name.includes(\"scale\"));\n                    settings = Object.assign(Object.assign({}, getKeyframes(generator, toUnit)), { easing: \"linear\" });\n                    // TODO Add test for this\n                    if (motionValue) {\n                        motionValue.generator = generator;\n                        motionValue.generatorStartTime = performance.now();\n                    }\n                }\n                /**\n                 * If by now we haven't generated a set of keyframes, create a generic generator\n                 * based on the provided props that animates from 0-100 to fetch a rough\n                 * \"overshootDuration\" - the moment when the generator first hits the animation target.\n                 * Then return animation settings that will run a normal animation for that duration.\n                 */\n                if (!settings) {\n                    const keyframesMetadata = getKeyframes(getGenerator(0, 100));\n                    settings = {\n                        easing: \"ease\",\n                        duration: keyframesMetadata.overshootDuration,\n                    };\n                }\n                return settings;\n            },\n        };\n    };\n}\n\nexport { createGeneratorEasing };\n", "import { spring as spring$1 } from '@motionone/generators';\nimport { createGeneratorEasing } from '../create-generator-easing.es.js';\n\nconst spring = createGeneratorEasing(spring$1);\n\nexport { spring };\n", "import { resolveElements } from '../utils/resolve-elements.es.js';\nimport { isFunction } from '@motionone/utils';\n\nconst thresholds = {\n    any: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"any\" } = {}) {\n    /**\n     * If this browser doesn't support IntersectionObserver, return a dummy stop function.\n     * Default triggering of onStart is tricky - it could be used for starting/stopping\n     * videos, lazy loading content etc. We could provide an option to enable a fallback, or\n     * provide a fallback callback option.\n     */\n    if (typeof IntersectionObserver === \"undefined\") {\n        return () => { };\n    }\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (isFunction(newOnEnd)) {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n", "const motionEvent = (name, target) => new CustomEvent(name, { detail: { target } });\nfunction dispatchPointerEvent(element, name, event) {\n    element.dispatchEvent(new CustomEvent(name, { detail: { originalEvent: event } }));\n}\nfunction dispatchViewEvent(element, name, entry) {\n    element.dispatchEvent(new CustomEvent(name, { detail: { originalEntry: entry } }));\n}\n\nexport { dispatchPointerEvent, dispatchViewEvent, motionEvent };\n", "import { __rest } from 'tslib';\nimport { dispatchViewEvent } from '../utils/events.es.js';\nimport { inView as inView$1 } from '../../gestures/in-view.es.js';\n\nconst inView = {\n    isActive: (options) => Boolean(options.inView),\n    subscribe: (element, { enable, disable }, { inViewOptions = {} }) => {\n        const { once } = inViewOptions, viewOptions = __rest(inViewOptions, [\"once\"]);\n        return inView$1(element, (enterEntry) => {\n            enable();\n            dispatchViewEvent(element, \"viewenter\", enterEntry);\n            if (!once) {\n                return (leaveEntry) => {\n                    disable();\n                    dispatchViewEvent(element, \"viewleave\", leaveEntry);\n                };\n            }\n        }, viewOptions);\n    },\n};\n\nexport { inView };\n", "import { dispatchPointerEvent } from '../utils/events.es.js';\n\nconst mouseEvent = (element, name, action) => (event) => {\n    if (event.pointerType && event.pointerType !== \"mouse\")\n        return;\n    action();\n    dispatchPointerEvent(element, name, event);\n};\nconst hover = {\n    isActive: (options) => Boolean(options.hover),\n    subscribe: (element, { enable, disable }) => {\n        const onEnter = mouseEvent(element, \"hoverstart\", enable);\n        const onLeave = mouseEvent(element, \"hoverend\", disable);\n        element.addEventListener(\"pointerenter\", onEnter);\n        element.addEventListener(\"pointerleave\", onLeave);\n        return () => {\n            element.removeEventListener(\"pointerenter\", onEnter);\n            element.removeEventListener(\"pointerleave\", onLeave);\n        };\n    },\n};\n\nexport { hover };\n", "import { dispatchPointerEvent } from '../utils/events.es.js';\n\nconst press = {\n    isActive: (options) => Boolean(options.press),\n    subscribe: (element, { enable, disable }) => {\n        const onPointerUp = (event) => {\n            disable();\n            dispatchPointerEvent(element, \"pressend\", event);\n            window.removeEventListener(\"pointerup\", onPointerUp);\n        };\n        const onPointerDown = (event) => {\n            enable();\n            dispatchPointerEvent(element, \"pressstart\", event);\n            window.addEventListener(\"pointerup\", onPointerUp);\n        };\n        element.addEventListener(\"pointerdown\", onPointerDown);\n        return () => {\n            element.removeEventListener(\"pointerdown\", onPointerDown);\n            window.removeEventListener(\"pointerup\", onPointerUp);\n        };\n    },\n};\n\nexport { press };\n", "import { __rest } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport { noop } from '@motionone/utils';\nimport { animateStyle } from '../animate/animate-style.es.js';\nimport { style } from '../animate/style.es.js';\nimport { getOptions } from '../animate/utils/options.es.js';\nimport { hasChanged } from './utils/has-changed.es.js';\nimport { resolveVariant } from './utils/resolve-variant.es.js';\nimport { scheduleAnimation, unscheduleAnimation } from './utils/schedule.es.js';\nimport { inView } from './gestures/in-view.es.js';\nimport { hover } from './gestures/hover.es.js';\nimport { press } from './gestures/press.es.js';\nimport { motionEvent } from './utils/events.es.js';\nimport { Animation } from '@motionone/animation';\n\nconst gestures = { inView, hover, press };\n/**\n * A list of state types, in priority order. If a value is defined in\n * a righter-most type, it will override any definition in a lefter-most.\n */\nconst stateTypes = [\"initial\", \"animate\", ...Object.keys(gestures), \"exit\"];\n/**\n * A global store of all generated motion states. This can be used to lookup\n * a motion state for a given Element.\n */\nconst mountedStates = new WeakMap();\nfunction createMotionState(options = {}, parent) {\n    /**\n     * The element represented by the motion state. This is an empty reference\n     * when we create the state to support SSR and allow for later mounting\n     * in view libraries.\n     *\n     * @ts-ignore\n     */\n    let element;\n    /**\n     * Calculate a depth that we can use to order motion states by tree depth.\n     */\n    let depth = parent ? parent.getDepth() + 1 : 0;\n    /**\n     * Track which states are currently active.\n     */\n    const activeStates = { initial: true, animate: true };\n    /**\n     * A map of functions that, when called, will remove event listeners for\n     * a given gesture.\n     */\n    const gestureSubscriptions = {};\n    /**\n     * Initialise a context to share through motion states. This\n     * will be populated by variant names (if any).\n     */\n    const context = {};\n    for (const name of stateTypes) {\n        context[name] =\n            typeof options[name] === \"string\"\n                ? options[name]\n                : parent === null || parent === void 0 ? void 0 : parent.getContext()[name];\n    }\n    /**\n     * If initial is set to false we use the animate prop as the initial\n     * animation state.\n     */\n    const initialVariantSource = options.initial === false ? \"animate\" : \"initial\";\n    /**\n     * Destructure an initial target out from the resolved initial variant.\n     */\n    let _a = resolveVariant(options[initialVariantSource] || context[initialVariantSource], options.variants) || {}, target = __rest(_a, [\"transition\"]);\n    /**\n     * The base target is a cached map of values that we'll use to animate\n     * back to if a value is removed from all active state types. This\n     * is usually the initial value as read from the DOM, for instance if\n     * it hasn't been defined in initial.\n     */\n    const baseTarget = Object.assign({}, target);\n    /**\n     * A generator that will be processed by the global animation scheduler.\n     * This yeilds when it switches from reading the DOM to writing to it\n     * to prevent layout thrashing.\n     */\n    function* animateUpdates() {\n        var _a, _b;\n        const prevTarget = target;\n        target = {};\n        const animationOptions = {};\n        for (const name of stateTypes) {\n            if (!activeStates[name])\n                continue;\n            const variant = resolveVariant(options[name]);\n            if (!variant)\n                continue;\n            for (const key in variant) {\n                if (key === \"transition\")\n                    continue;\n                target[key] = variant[key];\n                animationOptions[key] = getOptions((_b = (_a = variant.transition) !== null && _a !== void 0 ? _a : options.transition) !== null && _b !== void 0 ? _b : {}, key);\n            }\n        }\n        const allTargetKeys = new Set([\n            ...Object.keys(target),\n            ...Object.keys(prevTarget),\n        ]);\n        const animationFactories = [];\n        allTargetKeys.forEach((key) => {\n            var _a;\n            if (target[key] === undefined) {\n                target[key] = baseTarget[key];\n            }\n            if (hasChanged(prevTarget[key], target[key])) {\n                (_a = baseTarget[key]) !== null && _a !== void 0 ? _a : (baseTarget[key] = style.get(element, key));\n                animationFactories.push(animateStyle(element, key, target[key], animationOptions[key], Animation));\n            }\n        });\n        // Wait for all animation states to read from the DOM\n        yield;\n        const animations = animationFactories\n            .map((factory) => factory())\n            .filter(Boolean);\n        if (!animations.length)\n            return;\n        const animationTarget = target;\n        element.dispatchEvent(motionEvent(\"motionstart\", animationTarget));\n        Promise.all(animations.map((animation) => animation.finished))\n            .then(() => {\n            element.dispatchEvent(motionEvent(\"motioncomplete\", animationTarget));\n        })\n            .catch(noop);\n    }\n    const setGesture = (name, isActive) => () => {\n        activeStates[name] = isActive;\n        scheduleAnimation(state);\n    };\n    const updateGestureSubscriptions = () => {\n        for (const name in gestures) {\n            const isGestureActive = gestures[name].isActive(options);\n            const remove = gestureSubscriptions[name];\n            if (isGestureActive && !remove) {\n                gestureSubscriptions[name] = gestures[name].subscribe(element, {\n                    enable: setGesture(name, true),\n                    disable: setGesture(name, false),\n                }, options);\n            }\n            else if (!isGestureActive && remove) {\n                remove();\n                delete gestureSubscriptions[name];\n            }\n        }\n    };\n    const state = {\n        update: (newOptions) => {\n            if (!element)\n                return;\n            options = newOptions;\n            updateGestureSubscriptions();\n            scheduleAnimation(state);\n        },\n        setActive: (name, isActive) => {\n            if (!element)\n                return;\n            activeStates[name] = isActive;\n            scheduleAnimation(state);\n        },\n        animateUpdates,\n        getDepth: () => depth,\n        getTarget: () => target,\n        getOptions: () => options,\n        getContext: () => context,\n        mount: (newElement) => {\n            invariant(Boolean(newElement), \"Animation state must be mounted with valid Element\");\n            element = newElement;\n            mountedStates.set(element, state);\n            updateGestureSubscriptions();\n            return () => {\n                mountedStates.delete(element);\n                unscheduleAnimation(state);\n                for (const key in gestureSubscriptions) {\n                    gestureSubscriptions[key]();\n                }\n            };\n        },\n        isMounted: () => Boolean(element),\n    };\n    return state;\n}\n\nexport { createMotionState, mountedStates };\n", "import { animate as animate$1, withControls } from '@motionone/dom';\nimport { isFunction } from '@motionone/utils';\nimport { Animation } from '@motionone/animation';\n\nfunction animateProgress(target, options = {}) {\n    return withControls([\n        () => {\n            const animation = new Animation(target, [0, 1], options);\n            animation.finished.catch(() => { });\n            return animation;\n        },\n    ], options, options.duration);\n}\nfunction animate(target, keyframesOrOptions, options) {\n    const factory = isFunction(target) ? animateProgress : animate$1;\n    return factory(target, keyframesOrOptions, options);\n}\n\nexport { animate, animateProgress };\n", "import{nothing as t}from\"../lit-html.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const l=l=>null!=l?l:t;export{l as ifDefined};\n//# sourceMappingURL=if-defined.js.map\n", "// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then\n}\n", "let toSJISFunction\nconst CODEWORDS_COUNT = [\n  0, // Not used\n  26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n  404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n  1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n  2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n]\n\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nexports.getSymbolSize = function getSymbolSize (version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined')\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40')\n  return version * 4 + 17\n}\n\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nexports.getSymbolTotalCodewords = function getSymbolTotalCodewords (version) {\n  return CODEWORDS_COUNT[version]\n}\n\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nexports.getBCHDigit = function (data) {\n  let digit = 0\n\n  while (data !== 0) {\n    digit++\n    data >>>= 1\n  }\n\n  return digit\n}\n\nexports.setToSJISFunction = function setToSJISFunction (f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.')\n  }\n\n  toSJISFunction = f\n}\n\nexports.isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined'\n}\n\nexports.toSJIS = function toSJIS (kanji) {\n  return toSJISFunction(kanji)\n}\n", "exports.L = { bit: 1 }\nexports.M = { bit: 0 }\nexports.Q = { bit: 3 }\nexports.H = { bit: 2 }\n\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L\n\n    case 'm':\n    case 'medium':\n      return exports.M\n\n    case 'q':\n    case 'quartile':\n      return exports.Q\n\n    case 'h':\n    case 'high':\n      return exports.H\n\n    default:\n      throw new Error('Unknown EC Level: ' + string)\n  }\n}\n\nexports.isValid = function isValid (level) {\n  return level && typeof level.bit !== 'undefined' &&\n    level.bit >= 0 && level.bit < 4\n}\n\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n", "function BitBuffer () {\n  this.buffer = []\n  this.length = 0\n}\n\nBitBuffer.prototype = {\n\n  get: function (index) {\n    const bufIndex = Math.floor(index / 8)\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n  },\n\n  put: function (num, length) {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n    }\n  },\n\n  getLengthInBits: function () {\n    return this.length\n  },\n\n  putBit: function (bit) {\n    const bufIndex = Math.floor(this.length / 8)\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0)\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n    }\n\n    this.length++\n  }\n}\n\nmodule.exports = BitBuffer\n", "/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix (size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0')\n  }\n\n  this.size = size\n  this.data = new Uint8Array(size * size)\n  this.reservedBit = new Uint8Array(size * size)\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  const index = row * this.size + col\n  this.data[index] = value\n  if (reserved) this.reservedBit[index] = true\n}\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col]\n}\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value\n}\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col]\n}\n\nmodule.exports = BitMatrix\n", "/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nconst getSymbolSize = require('./utils').getSymbolSize\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords (version) {\n  if (version === 1) return []\n\n  const posCount = Math.floor(version / 7) + 2\n  const size = getSymbolSize(version)\n  const intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2\n  const positions = [size - 7] // Last coord is always (size - 7)\n\n  for (let i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals\n  }\n\n  positions.push(6) // First coord is always 6\n\n  return positions.reverse()\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * let pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const coords = []\n  const pos = exports.getRowColCoords(version)\n  const posLength = pos.length\n\n  for (let i = 0; i < posLength; i++) {\n    for (let j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) || // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push([pos[i], pos[j]])\n    }\n  }\n\n  return coords\n}\n", "const getSymbolSize = require('./utils').getSymbolSize\nconst FINDER_PATTERN_SIZE = 7\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const size = getSymbolSize(version)\n\n  return [\n    // top-left\n    [0, 0],\n    // top-right\n    [size - FINDER_PATTERN_SIZE, 0],\n    // bottom-left\n    [0, size - FINDER_PATTERN_SIZE]\n  ]\n}\n", "/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n}\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nconst PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n}\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid (mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n}\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from (value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined\n}\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1 (data) {\n  const size = data.size\n  let points = 0\n  let sameCountCol = 0\n  let sameCountRow = 0\n  let lastCol = null\n  let lastRow = null\n\n  for (let row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0\n    lastCol = lastRow = null\n\n    for (let col = 0; col < size; col++) {\n      let module = data.get(row, col)\n      if (module === lastCol) {\n        sameCountCol++\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n        lastCol = module\n        sameCountCol = 1\n      }\n\n      module = data.get(col, row)\n      if (module === lastRow) {\n        sameCountRow++\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n        lastRow = module\n        sameCountRow = 1\n      }\n    }\n\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n  }\n\n  return points\n}\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2 (data) {\n  const size = data.size\n  let points = 0\n\n  for (let row = 0; row < size - 1; row++) {\n    for (let col = 0; col < size - 1; col++) {\n      const last = data.get(row, col) +\n        data.get(row, col + 1) +\n        data.get(row + 1, col) +\n        data.get(row + 1, col + 1)\n\n      if (last === 4 || last === 0) points++\n    }\n  }\n\n  return points * PenaltyScores.N2\n}\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3 (data) {\n  const size = data.size\n  let points = 0\n  let bitsCol = 0\n  let bitsRow = 0\n\n  for (let row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0\n    for (let col = 0; col < size; col++) {\n      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n\n      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n    }\n  }\n\n  return points * PenaltyScores.N3\n}\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4 (data) {\n  let darkCount = 0\n  const modulesCount = data.data.length\n\n  for (let i = 0; i < modulesCount; i++) darkCount += data.data[i]\n\n  const k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n\n  return k * PenaltyScores.N4\n}\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt (maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n    case exports.Patterns.PATTERN001: return i % 2 === 0\n    case exports.Patterns.PATTERN010: return j % 3 === 0\n    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n\n    default: throw new Error('bad maskPattern:' + maskPattern)\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask (pattern, data) {\n  const size = data.size\n\n  for (let col = 0; col < size; col++) {\n    for (let row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue\n      data.xor(row, col, getMaskAt(pattern, row, col))\n    }\n  }\n}\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask (data, setupFormatFunc) {\n  const numPatterns = Object.keys(exports.Patterns).length\n  let bestPattern = 0\n  let lowerPenalty = Infinity\n\n  for (let p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p)\n    exports.applyMask(p, data)\n\n    // Calculate penalty\n    const penalty =\n      exports.getPenaltyN1(data) +\n      exports.getPenaltyN2(data) +\n      exports.getPenaltyN3(data) +\n      exports.getPenaltyN4(data)\n\n    // Undo previously applied mask\n    exports.applyMask(p, data)\n\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty\n      bestPattern = p\n    }\n  }\n\n  return bestPattern\n}\n", "const ECLevel = require('./error-correction-level')\r\n\r\nconst EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nconst EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n", "const EXP_TABLE = new Uint8Array(512)\nconst LOG_TABLE = new Uint8Array(256)\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */\n;(function initTables () {\n  let x = 1\n  for (let i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x\n    LOG_TABLE[x] = i\n\n    x <<= 1 // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (let i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255]\n  }\n}())\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log (n) {\n  if (n < 1) throw new Error('log(' + n + ')')\n  return LOG_TABLE[n]\n}\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp (n) {\n  return EXP_TABLE[n]\n}\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul (x, y) {\n  if (x === 0 || y === 0) return 0\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]\n}\n", "const GF = require('./galois-field')\n\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Uint8Array} p1 Polynomial\n * @param  {Uint8Array} p2 Polynomial\n * @return {Uint8Array}    Product of p1 and p2\n */\nexports.mul = function mul (p1, p2) {\n  const coeff = new Uint8Array(p1.length + p2.length - 1)\n\n  for (let i = 0; i < p1.length; i++) {\n    for (let j = 0; j < p2.length; j++) {\n      coeff[i + j] ^= GF.mul(p1[i], p2[j])\n    }\n  }\n\n  return coeff\n}\n\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Uint8Array} divident Polynomial\n * @param  {Uint8Array} divisor  Polynomial\n * @return {Uint8Array}          Remainder\n */\nexports.mod = function mod (divident, divisor) {\n  let result = new Uint8Array(divident)\n\n  while ((result.length - divisor.length) >= 0) {\n    const coeff = result[0]\n\n    for (let i = 0; i < divisor.length; i++) {\n      result[i] ^= GF.mul(divisor[i], coeff)\n    }\n\n    // remove all zeros from buffer head\n    let offset = 0\n    while (offset < result.length && result[offset] === 0) offset++\n    result = result.slice(offset)\n  }\n\n  return result\n}\n\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Uint8Array}    Buffer containing polynomial coefficients\n */\nexports.generateECPolynomial = function generateECPolynomial (degree) {\n  let poly = new Uint8Array([1])\n  for (let i = 0; i < degree; i++) {\n    poly = exports.mul(poly, new Uint8Array([1, GF.exp(i)]))\n  }\n\n  return poly\n}\n", "const Polynomial = require('./polynomial')\n\nfunction ReedSolomonEncoder (degree) {\n  this.genPoly = undefined\n  this.degree = degree\n\n  if (this.degree) this.initialize(this.degree)\n}\n\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize (degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree\n  this.genPoly = Polynomial.generateECPolynomial(this.degree)\n}\n\n/**\n * Encodes a chunk of data\n *\n * @param  {Uint8Array} data Buffer containing input data\n * @return {Uint8Array}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode (data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized')\n  }\n\n  // Calculate EC for this data block\n  // extends data size to data+genPoly size\n  const paddedData = new Uint8Array(data.length + this.degree)\n  paddedData.set(data)\n\n  // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n  const remainder = Polynomial.mod(paddedData, this.genPoly)\n\n  // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n  const start = this.degree - remainder.length\n  if (start > 0) {\n    const buff = new Uint8Array(this.degree)\n    buff.set(remainder, start)\n\n    return buff\n  }\n\n  return remainder\n}\n\nmodule.exports = ReedSolomonEncoder\n", "/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nexports.isValid = function isValid (version) {\n  return !isNaN(version) && version >= 1 && version <= 40\n}\n", "const numeric = '[0-9]+'\nconst alphanumeric = '[A-Z $%*+\\\\-./:]+'\nlet kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\nkanji = kanji.replace(/u/g, '\\\\u')\n\nconst byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n\nexports.KANJI = new RegExp(kanji, 'g')\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\nexports.BYTE = new RegExp(byte, 'g')\nexports.NUMERIC = new RegExp(numeric, 'g')\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n\nconst TEST_KANJI = new RegExp('^' + kanji + '$')\nconst TEST_NUMERIC = new RegExp('^' + numeric + '$')\nconst TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n\nexports.testKanji = function testKanji (str) {\n  return TEST_KANJI.test(str)\n}\n\nexports.testNumeric = function testNumeric (str) {\n  return TEST_NUMERIC.test(str)\n}\n\nexports.testAlphanumeric = function testAlphanumeric (str) {\n  return TEST_ALPHANUMERIC.test(str)\n}\n", "const VersionCheck = require('./version-check')\nconst Regex = require('./regex')\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */\nexports.NUMERIC = {\n  id: 'Numeric',\n  bit: 1 << 0,\n  ccBits: [10, 12, 14]\n}\n\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */\nexports.ALPHANUMERIC = {\n  id: 'Alphanumeric',\n  bit: 1 << 1,\n  ccBits: [9, 11, 13]\n}\n\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */\nexports.BYTE = {\n  id: 'Byte',\n  bit: 1 << 2,\n  ccBits: [8, 16, 16]\n}\n\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */\nexports.KANJI = {\n  id: 'Kanji',\n  bit: 1 << 3,\n  ccBits: [8, 10, 12]\n}\n\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */\nexports.MIXED = {\n  bit: -1\n}\n\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */\nexports.getCharCountIndicator = function getCharCountIndicator (mode, version) {\n  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode)\n\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid version: ' + version)\n  }\n\n  if (version >= 1 && version < 10) return mode.ccBits[0]\n  else if (version < 27) return mode.ccBits[1]\n  return mode.ccBits[2]\n}\n\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */\nexports.getBestModeForData = function getBestModeForData (dataStr) {\n  if (Regex.testNumeric(dataStr)) return exports.NUMERIC\n  else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC\n  else if (Regex.testKanji(dataStr)) return exports.KANJI\n  else return exports.BYTE\n}\n\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */\nexports.toString = function toString (mode) {\n  if (mode && mode.id) return mode.id\n  throw new Error('Invalid mode')\n}\n\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */\nexports.isValid = function isValid (mode) {\n  return mode && mode.bit && mode.ccBits\n}\n\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'numeric':\n      return exports.NUMERIC\n    case 'alphanumeric':\n      return exports.ALPHANUMERIC\n    case 'kanji':\n      return exports.KANJI\n    case 'byte':\n      return exports.BYTE\n    default:\n      throw new Error('Unknown mode: ' + string)\n  }\n}\n\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n", "const Utils = require('./utils')\nconst ECCode = require('./error-correction-code')\nconst ECLevel = require('./error-correction-level')\nconst Mode = require('./mode')\nconst VersionCheck = require('./version-check')\n\n// Generator polynomial used to encode version information\nconst G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)\nconst G18_BCH = Utils.getBCHDigit(G18)\n\nfunction getBestVersionForDataLength (mode, length, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\nfunction getReservedBitsCount (mode, version) {\n  // Character count indicator + mode indicator bits\n  return Mode.getCharCountIndicator(mode, version) + 4\n}\n\nfunction getTotalBitsFromDataArray (segments, version) {\n  let totalBits = 0\n\n  segments.forEach(function (data) {\n    const reservedBits = getReservedBitsCount(data.mode, version)\n    totalBits += reservedBits + data.getBitsLength()\n  })\n\n  return totalBits\n}\n\nfunction getBestVersionForMixedData (segments, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    const length = getTotalBitsFromDataArray(segments, currentVersion)\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */\nexports.from = function from (value, defaultValue) {\n  if (VersionCheck.isValid(value)) {\n    return parseInt(value, 10)\n  }\n\n  return defaultValue\n}\n\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */\nexports.getCapacity = function getCapacity (version, errorCorrectionLevel, mode) {\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  // Use Byte mode as default\n  if (typeof mode === 'undefined') mode = Mode.BYTE\n\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  if (mode === Mode.MIXED) return dataTotalCodewordsBits\n\n  const usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version)\n\n  // Return max number of storable codewords\n  switch (mode) {\n    case Mode.NUMERIC:\n      return Math.floor((usableBits / 10) * 3)\n\n    case Mode.ALPHANUMERIC:\n      return Math.floor((usableBits / 11) * 2)\n\n    case Mode.KANJI:\n      return Math.floor(usableBits / 13)\n\n    case Mode.BYTE:\n    default:\n      return Math.floor(usableBits / 8)\n  }\n}\n\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */\nexports.getBestVersionForData = function getBestVersionForData (data, errorCorrectionLevel) {\n  let seg\n\n  const ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M)\n\n  if (Array.isArray(data)) {\n    if (data.length > 1) {\n      return getBestVersionForMixedData(data, ecl)\n    }\n\n    if (data.length === 0) {\n      return 1\n    }\n\n    seg = data[0]\n  } else {\n    seg = data\n  }\n\n  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl)\n}\n\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */\nexports.getEncodedBits = function getEncodedBits (version) {\n  if (!VersionCheck.isValid(version) || version < 7) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  let d = version << 12\n\n  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n    d ^= (G18 << (Utils.getBCHDigit(d) - G18_BCH))\n  }\n\n  return (version << 12) | d\n}\n", "const Utils = require('./utils')\n\nconst G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\nconst G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\nconst G15_BCH = Utils.getBCHDigit(G15)\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {\n  const data = ((errorCorrectionLevel.bit << 3) | mask)\n  let d = data << 10\n\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return ((data << 10) | d) ^ G15_MASK\n}\n", "const Mode = require('./mode')\n\nfunction NumericData (data) {\n  this.mode = Mode.NUMERIC\n  this.data = data.toString()\n}\n\nNumericData.getBitsLength = function getBitsLength (length) {\n  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)\n}\n\nNumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nNumericData.prototype.getBitsLength = function getBitsLength () {\n  return NumericData.getBitsLength(this.data.length)\n}\n\nNumericData.prototype.write = function write (bitBuffer) {\n  let i, group, value\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, 10)\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  const remainingNum = this.data.length - i\n  if (remainingNum > 0) {\n    group = this.data.substr(i)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, remainingNum * 3 + 1)\n  }\n}\n\nmodule.exports = NumericData\n", "const Mode = require('./mode')\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nconst ALPHA_NUM_CHARS = [\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n]\n\nfunction AlphanumericData (data) {\n  this.mode = Mode.ALPHANUMERIC\n  this.data = data\n}\n\nAlphanumericData.getBitsLength = function getBitsLength (length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2)\n}\n\nAlphanumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nAlphanumericData.prototype.getBitsLength = function getBitsLength () {\n  return AlphanumericData.getBitsLength(this.data.length)\n}\n\nAlphanumericData.prototype.write = function write (bitBuffer) {\n  let i\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    let value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11)\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)\n  }\n}\n\nmodule.exports = AlphanumericData\n", "'use strict'\n\nmodule.exports = function encodeUtf8 (input) {\n  var result = []\n  var size = input.length\n\n  for (var index = 0; index < size; index++) {\n    var point = input.charCodeAt(index)\n\n    if (point >= 0xD800 && point <= 0xDBFF && size > index + 1) {\n      var second = input.charCodeAt(index + 1)\n\n      if (second >= 0xDC00 && second <= 0xDFFF) {\n        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        point = (point - 0xD800) * 0x400 + second - 0xDC00 + 0x10000\n        index += 1\n      }\n    }\n\n    // US-ASCII\n    if (point < 0x80) {\n      result.push(point)\n      continue\n    }\n\n    // 2-byte UTF-8\n    if (point < 0x800) {\n      result.push((point >> 6) | 192)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // 3-byte UTF-8\n    if (point < 0xD800 || (point >= 0xE000 && point < 0x10000)) {\n      result.push((point >> 12) | 224)\n      result.push(((point >> 6) & 63) | 128)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // 4-byte UTF-8\n    if (point >= 0x10000 && point <= 0x10FFFF) {\n      result.push((point >> 18) | 240)\n      result.push(((point >> 12) & 63) | 128)\n      result.push(((point >> 6) & 63) | 128)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // Invalid character\n    result.push(0xEF, 0xBF, 0xBD)\n  }\n\n  return new Uint8Array(result).buffer\n}\n", "const encodeUtf8 = require('encode-utf8')\nconst Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  if (typeof (data) === 'string') {\n    data = encodeUtf8(data)\n  }\n  this.data = new Uint8Array(data)\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (let i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n", "const Mode = require('./mode')\nconst Utils = require('./utils')\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  let i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    let value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n", "'use strict';\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (typeof module !== 'undefined') {\n  module.exports = dijkstra;\n}\n", "const Mode = require('./mode')\nconst NumericData = require('./numeric-data')\nconst AlphanumericData = require('./alphanumeric-data')\nconst ByteData = require('./byte-data')\nconst KanjiData = require('./kanji-data')\nconst Regex = require('./regex')\nconst Utils = require('./utils')\nconst dijkstra = require('dijkstrajs')\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */\nfunction getStringByteLength (str) {\n  return unescape(encodeURIComponent(str)).length\n}\n\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */\nfunction getSegments (regex, mode, str) {\n  const segments = []\n  let result\n\n  while ((result = regex.exec(str)) !== null) {\n    segments.push({\n      data: result[0],\n      index: result.index,\n      mode: mode,\n      length: result[0].length\n    })\n  }\n\n  return segments\n}\n\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */\nfunction getSegmentsFromString (dataStr) {\n  const numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr)\n  const alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr)\n  let byteSegs\n  let kanjiSegs\n\n  if (Utils.isKanjiModeEnabled()) {\n    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)\n    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)\n  } else {\n    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)\n    kanjiSegs = []\n  }\n\n  const segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs)\n\n  return segs\n    .sort(function (s1, s2) {\n      return s1.index - s2.index\n    })\n    .map(function (obj) {\n      return {\n        data: obj.data,\n        mode: obj.mode,\n        length: obj.length\n      }\n    })\n}\n\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */\nfunction getSegmentBitsLength (length, mode) {\n  switch (mode) {\n    case Mode.NUMERIC:\n      return NumericData.getBitsLength(length)\n    case Mode.ALPHANUMERIC:\n      return AlphanumericData.getBitsLength(length)\n    case Mode.KANJI:\n      return KanjiData.getBitsLength(length)\n    case Mode.BYTE:\n      return ByteData.getBitsLength(length)\n  }\n}\n\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction mergeSegments (segs) {\n  return segs.reduce(function (acc, curr) {\n    const prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null\n    if (prevSeg && prevSeg.mode === curr.mode) {\n      acc[acc.length - 1].data += curr.data\n      return acc\n    }\n\n    acc.push(curr)\n    return acc\n  }, [])\n}\n\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction buildNodes (segs) {\n  const nodes = []\n  for (let i = 0; i < segs.length; i++) {\n    const seg = segs[i]\n\n    switch (seg.mode) {\n      case Mode.NUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.ALPHANUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.KANJI:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n        break\n      case Mode.BYTE:\n        nodes.push([\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n    }\n  }\n\n  return nodes\n}\n\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */\nfunction buildGraph (nodes, version) {\n  const table = {}\n  const graph = { start: {} }\n  let prevNodeIds = ['start']\n\n  for (let i = 0; i < nodes.length; i++) {\n    const nodeGroup = nodes[i]\n    const currentNodeIds = []\n\n    for (let j = 0; j < nodeGroup.length; j++) {\n      const node = nodeGroup[j]\n      const key = '' + i + j\n\n      currentNodeIds.push(key)\n      table[key] = { node: node, lastCount: 0 }\n      graph[key] = {}\n\n      for (let n = 0; n < prevNodeIds.length; n++) {\n        const prevNodeId = prevNodeIds[n]\n\n        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n          graph[prevNodeId][key] =\n            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n            getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)\n\n          table[prevNodeId].lastCount += node.length\n        } else {\n          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length\n\n          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n            4 + Mode.getCharCountIndicator(node.mode, version) // switch cost\n        }\n      }\n    }\n\n    prevNodeIds = currentNodeIds\n  }\n\n  for (let n = 0; n < prevNodeIds.length; n++) {\n    graph[prevNodeIds[n]].end = 0\n  }\n\n  return { map: graph, table: table }\n}\n\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */\nfunction buildSingleSegment (data, modesHint) {\n  let mode\n  const bestMode = Mode.getBestModeForData(data)\n\n  mode = Mode.from(modesHint, bestMode)\n\n  // Make sure data can be encoded\n  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n    throw new Error('\"' + data + '\"' +\n      ' cannot be encoded with mode ' + Mode.toString(mode) +\n      '.\\n Suggested mode is: ' + Mode.toString(bestMode))\n  }\n\n  // Use Mode.BYTE if Kanji support is disabled\n  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n    mode = Mode.BYTE\n  }\n\n  switch (mode) {\n    case Mode.NUMERIC:\n      return new NumericData(data)\n\n    case Mode.ALPHANUMERIC:\n      return new AlphanumericData(data)\n\n    case Mode.KANJI:\n      return new KanjiData(data)\n\n    case Mode.BYTE:\n      return new ByteData(data)\n  }\n}\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */\nexports.fromArray = function fromArray (array) {\n  return array.reduce(function (acc, seg) {\n    if (typeof seg === 'string') {\n      acc.push(buildSingleSegment(seg, null))\n    } else if (seg.data) {\n      acc.push(buildSingleSegment(seg.data, seg.mode))\n    }\n\n    return acc\n  }, [])\n}\n\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */\nexports.fromString = function fromString (data, version) {\n  const segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n\n  const nodes = buildNodes(segs)\n  const graph = buildGraph(nodes, version)\n  const path = dijkstra.find_path(graph.map, 'start', 'end')\n\n  const optimizedSegs = []\n  for (let i = 1; i < path.length - 1; i++) {\n    optimizedSegs.push(graph.table[path[i]].node)\n  }\n\n  return exports.fromArray(mergeSegments(optimizedSegs))\n}\n\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */\nexports.rawSplit = function rawSplit (data) {\n  return exports.fromArray(\n    getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n  )\n}\n", "const Utils = require('./utils')\nconst ECLevel = require('./error-correction-level')\nconst BitBuffer = require('./bit-buffer')\nconst BitMatrix = require('./bit-matrix')\nconst AlignmentPattern = require('./alignment-pattern')\nconst FinderPattern = require('./finder-pattern')\nconst MaskPattern = require('./mask-pattern')\nconst ECCode = require('./error-correction-code')\nconst ReedSolomonEncoder = require('./reed-solomon-encoder')\nconst Version = require('./version')\nconst FormatInfo = require('./format-info')\nconst Mode = require('./mode')\nconst Segments = require('./segments')\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern (matrix, version) {\n  const size = matrix.size\n  const pos = FinderPattern.getPositions(version)\n\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0]\n    const col = pos[i][1]\n\n    for (let r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue\n\n      for (let c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue\n\n        if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern (matrix) {\n  const size = matrix.size\n\n  for (let r = 8; r < size - 8; r++) {\n    const value = r % 2 === 0\n    matrix.set(r, 6, value, true)\n    matrix.set(6, r, value, true)\n  }\n}\n\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern (matrix, version) {\n  const pos = AlignmentPattern.getPositions(version)\n\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0]\n    const col = pos[i][1]\n\n    for (let r = -2; r <= 2; r++) {\n      for (let c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 ||\n          (r === 0 && c === 0)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo (matrix, version) {\n  const size = matrix.size\n  const bits = Version.getEncodedBits(version)\n  let row, col, mod\n\n  for (let i = 0; i < 18; i++) {\n    row = Math.floor(i / 3)\n    col = i % 3 + size - 8 - 3\n    mod = ((bits >> i) & 1) === 1\n\n    matrix.set(row, col, mod, true)\n    matrix.set(col, row, mod, true)\n  }\n}\n\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo (matrix, errorCorrectionLevel, maskPattern) {\n  const size = matrix.size\n  const bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern)\n  let i, mod\n\n  for (i = 0; i < 15; i++) {\n    mod = ((bits >> i) & 1) === 1\n\n    // vertical\n    if (i < 6) {\n      matrix.set(i, 8, mod, true)\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true)\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true)\n    }\n\n    // horizontal\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true)\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true)\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true)\n    }\n  }\n\n  // fixed module\n  matrix.set(size - 8, 8, 1, true)\n}\n\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix}  matrix Modules matrix\n * @param  {Uint8Array} data   Data codewords\n */\nfunction setupData (matrix, data) {\n  const size = matrix.size\n  let inc = -1\n  let row = size - 1\n  let bitIndex = 7\n  let byteIndex = 0\n\n  for (let col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--\n\n    while (true) {\n      for (let c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          let dark = false\n\n          if (byteIndex < data.length) {\n            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n          }\n\n          matrix.set(row, col - c, dark)\n          bitIndex--\n\n          if (bitIndex === -1) {\n            byteIndex++\n            bitIndex = 7\n          }\n        }\n      }\n\n      row += inc\n\n      if (row < 0 || size <= row) {\n        row -= inc\n        inc = -inc\n        break\n      }\n    }\n  }\n}\n\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Uint8Array}                    Buffer containing encoded codewords\n */\nfunction createData (version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  const buffer = new BitBuffer()\n\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4)\n\n    // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version))\n\n    // add binary data sequence to buffer\n    data.write(buffer)\n  })\n\n  // Calculate required number of bits\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4)\n  }\n\n  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0)\n  }\n\n  // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n  const remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8\n  for (let i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8)\n  }\n\n  return createCodewords(buffer, version, errorCorrectionLevel)\n}\n\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Uint8Array}                     Buffer containing encoded codewords\n */\nfunction createCodewords (bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  const dataTotalCodewords = totalCodewords - ecTotalCodewords\n\n  // Total number of blocks\n  const ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel)\n\n  // Calculate how many blocks each group should contain\n  const blocksInGroup2 = totalCodewords % ecTotalBlocks\n  const blocksInGroup1 = ecTotalBlocks - blocksInGroup2\n\n  const totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks)\n\n  const dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks)\n  const dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1\n\n  // Number of EC codewords is the same for both groups\n  const ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1\n\n  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n  const rs = new ReedSolomonEncoder(ecCount)\n\n  let offset = 0\n  const dcData = new Array(ecTotalBlocks)\n  const ecData = new Array(ecTotalBlocks)\n  let maxDataSize = 0\n  const buffer = new Uint8Array(bitBuffer.buffer)\n\n  // Divide the buffer into the required number of blocks\n  for (let b = 0; b < ecTotalBlocks; b++) {\n    const dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2\n\n    // extract a block of data from buffer\n    dcData[b] = buffer.slice(offset, offset + dataSize)\n\n    // Calculate EC codewords for this data block\n    ecData[b] = rs.encode(dcData[b])\n\n    offset += dataSize\n    maxDataSize = Math.max(maxDataSize, dataSize)\n  }\n\n  // Create final data\n  // Interleave the data and error correction codewords from each block\n  const data = new Uint8Array(totalCodewords)\n  let index = 0\n  let i, r\n\n  // Add data codewords\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i]\n      }\n    }\n  }\n\n  // Apped EC codewords\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i]\n    }\n  }\n\n  return data\n}\n\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol (data, version, errorCorrectionLevel, maskPattern) {\n  let segments\n\n  if (Array.isArray(data)) {\n    segments = Segments.fromArray(data)\n  } else if (typeof data === 'string') {\n    let estimatedVersion = version\n\n    if (!estimatedVersion) {\n      const rawSegments = Segments.rawSplit(data)\n\n      // Estimate best version that can contain raw splitted segments\n      estimatedVersion = Version.getBestVersionForData(rawSegments, errorCorrectionLevel)\n    }\n\n    // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n    segments = Segments.fromString(data, estimatedVersion || 40)\n  } else {\n    throw new Error('Invalid data')\n  }\n\n  // Get the min version that can contain data\n  const bestVersion = Version.getBestVersionForData(segments, errorCorrectionLevel)\n\n  // If no version is found, data cannot be stored\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code')\n  }\n\n  // If not specified, use min version as default\n  if (!version) {\n    version = bestVersion\n\n  // Check if the specified version can contain the data\n  } else if (version < bestVersion) {\n    throw new Error('\\n' +\n      'The chosen QR Code version cannot contain this amount of data.\\n' +\n      'Minimum version required to store current data is: ' + bestVersion + '.\\n'\n    )\n  }\n\n  const dataBits = createData(version, errorCorrectionLevel, segments)\n\n  // Allocate matrix buffer\n  const moduleCount = Utils.getSymbolSize(version)\n  const modules = new BitMatrix(moduleCount)\n\n  // Add function modules\n  setupFinderPattern(modules, version)\n  setupTimingPattern(modules)\n  setupAlignmentPattern(modules, version)\n\n  // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n  setupFormatInfo(modules, errorCorrectionLevel, 0)\n\n  if (version >= 7) {\n    setupVersionInfo(modules, version)\n  }\n\n  // Add data codewords\n  setupData(modules, dataBits)\n\n  if (isNaN(maskPattern)) {\n    // Find best mask pattern\n    maskPattern = MaskPattern.getBestMask(modules,\n      setupFormatInfo.bind(null, modules, errorCorrectionLevel))\n  }\n\n  // Apply mask pattern\n  MaskPattern.applyMask(maskPattern, modules)\n\n  // Replace format info bits with correct values\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern)\n\n  return {\n    modules: modules,\n    version: version,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern,\n    segments: segments\n  }\n}\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nexports.create = function create (data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text')\n  }\n\n  let errorCorrectionLevel = ECLevel.M\n  let version\n  let mask\n\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M)\n    version = Version.from(options.version)\n    mask = MaskPattern.from(options.maskPattern)\n\n    if (options.toSJISFunc) {\n      Utils.setToSJISFunction(options.toSJISFunc)\n    }\n  }\n\n  return createSymbol(data, version, errorCorrectionLevel, mask)\n}\n", "function hex2rgba (hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString()\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  let hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  const hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  const margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0\n    ? 4\n    : options.margin\n\n  const width = options.width && options.width >= 21 ? options.width : undefined\n  const scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  const scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  const size = qr.modules.size\n  const data = qr.modules.data\n  const scale = exports.getScale(size, opts)\n  const symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  const scaledMargin = opts.margin * scale\n  const palette = [opts.color.light, opts.color.dark]\n\n  for (let i = 0; i < symbolSize; i++) {\n    for (let j = 0; j < symbolSize; j++) {\n      let posDst = (i * symbolSize + j) * 4\n      let pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        const iSrc = Math.floor((i - scaledMargin) / scale)\n        const jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n", "const Utils = require('./utils')\n\nfunction clearCanvas (ctx, canvas, size) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n  if (!canvas.style) canvas.style = {}\n  canvas.height = size\n  canvas.width = size\n  canvas.style.height = size + 'px'\n  canvas.style.width = size + 'px'\n}\n\nfunction getCanvasElement () {\n  try {\n    return document.createElement('canvas')\n  } catch (e) {\n    throw new Error('You need to specify a canvas element')\n  }\n}\n\nexports.render = function render (qrData, canvas, options) {\n  let opts = options\n  let canvasEl = canvas\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!canvas) {\n    canvasEl = getCanvasElement()\n  }\n\n  opts = Utils.getOptions(opts)\n  const size = Utils.getImageWidth(qrData.modules.size, opts)\n\n  const ctx = canvasEl.getContext('2d')\n  const image = ctx.createImageData(size, size)\n  Utils.qrToImageData(image.data, qrData, opts)\n\n  clearCanvas(ctx, canvasEl, size)\n  ctx.putImageData(image, 0, 0)\n\n  return canvasEl\n}\n\nexports.renderToDataURL = function renderToDataURL (qrData, canvas, options) {\n  let opts = options\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!opts) opts = {}\n\n  const canvasEl = exports.render(qrData, canvas, opts)\n\n  const type = opts.type || 'image/png'\n  const rendererOpts = opts.rendererOpts || {}\n\n  return canvasEl.toDataURL(type, rendererOpts.quality)\n}\n", "const Utils = require('./utils')\n\nfunction getColorAttrib (color, attrib) {\n  const alpha = color.a / 255\n  const str = attrib + '=\"' + color.hex + '\"'\n\n  return alpha < 1\n    ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n    : str\n}\n\nfunction svgCmd (cmd, x, y) {\n  let str = cmd + x\n  if (typeof y !== 'undefined') str += ' ' + y\n\n  return str\n}\n\nfunction qrToPath (data, size, margin) {\n  let path = ''\n  let moveBy = 0\n  let newRow = false\n  let lineLength = 0\n\n  for (let i = 0; i < data.length; i++) {\n    const col = Math.floor(i % size)\n    const row = Math.floor(i / size)\n\n    if (!col && !newRow) newRow = true\n\n    if (data[i]) {\n      lineLength++\n\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow\n          ? svgCmd('M', col + margin, 0.5 + row + margin)\n          : svgCmd('m', moveBy, 0)\n\n        moveBy = 0\n        newRow = false\n      }\n\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength)\n        lineLength = 0\n      }\n    } else {\n      moveBy++\n    }\n  }\n\n  return path\n}\n\nexports.render = function render (qrData, options, cb) {\n  const opts = Utils.getOptions(options)\n  const size = qrData.modules.size\n  const data = qrData.modules.data\n  const qrcodesize = size + opts.margin * 2\n\n  const bg = !opts.color.light.a\n    ? ''\n    : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n      ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>'\n\n  const path =\n    '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n    ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>'\n\n  const viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"'\n\n  const width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" '\n\n  const svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n'\n\n  if (typeof cb === 'function') {\n    cb(null, svgTag)\n  }\n\n  return svgTag\n}\n", "\nconst canPromise = require('./can-promise')\n\nconst QRCode = require('./core/qrcode')\nconst CanvasRenderer = require('./renderer/canvas')\nconst SvgRenderer = require('./renderer/svg-tag.js')\n\nfunction renderCanvas (renderFunc, canvas, text, opts, cb) {\n  const args = [].slice.call(arguments, 1)\n  const argsNum = args.length\n  const isLastArgCb = typeof args[argsNum - 1] === 'function'\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument')\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 2) {\n      cb = text\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts\n        opts = undefined\n      } else {\n        cb = opts\n        opts = text\n        text = canvas\n        canvas = undefined\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 1) {\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text\n      text = canvas\n      canvas = undefined\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        const data = QRCode.create(text, opts)\n        resolve(renderFunc(data, canvas, opts))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  try {\n    const data = QRCode.create(text, opts)\n    cb(null, renderFunc(data, canvas, opts))\n  } catch (e) {\n    cb(e)\n  }\n}\n\nexports.create = QRCode.create\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts)\n})\n", "import{css as u,LitElement as c,html as i,svg as Re}from\"lit\";import{property as h,customElement as d,state as y}from\"lit/decorators.js\";import{ThemeCtrl as ne,RouterCtrl as x,ModalCtrl as T,OptionsCtrl as v,ConfigCtrl as j,ExplorerCtrl as E,CoreUtil as f,ClientCtrl as P,ToastCtrl as A,AccountCtrl as $}from\"@web3modal/core\";import{classMap as D}from\"lit/directives/class-map.js\";import{svg as b}from\"lit-html\";import{animate as U,spring as ke}from\"motion\";import{ifDefined as _}from\"lit/directives/if-defined.js\";import Pt from\"qrcode\";var At=Object.defineProperty,wt=Object.getOwnPropertySymbols,Lt=Object.prototype.hasOwnProperty,Tt=Object.prototype.propertyIsEnumerable,pt=(e,t,o)=>t in e?At(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,$e=(e,t)=>{for(var o in t||(t={}))Lt.call(t,o)&&pt(e,o,t[o]);if(wt)for(var o of wt(t))Tt.call(t,o)&&pt(e,o,t[o]);return e};function Nt(){var e;const t=(e=ne.state.themeMode)!=null?e:\"dark\",o={light:{foreground:{1:\"rgb(20,20,20)\",2:\"rgb(121,134,134)\",3:\"rgb(158,169,169)\"},background:{1:\"rgb(255,255,255)\",2:\"rgb(241,243,243)\",3:\"rgb(228,231,231)\"},overlay:\"rgba(0,0,0,0.1)\"},dark:{foreground:{1:\"rgb(228,231,231)\",2:\"rgb(148,158,158)\",3:\"rgb(110,119,119)\"},background:{1:\"rgb(20,20,20)\",2:\"rgb(39,42,42)\",3:\"rgb(59,64,64)\"},overlay:\"rgba(255,255,255,0.1)\"}}[t];return{\"--w3m-color-fg-1\":o.foreground[1],\"--w3m-color-fg-2\":o.foreground[2],\"--w3m-color-fg-3\":o.foreground[3],\"--w3m-color-bg-1\":o.background[1],\"--w3m-color-bg-2\":o.background[2],\"--w3m-color-bg-3\":o.background[3],\"--w3m-color-overlay\":o.overlay}}function _t(){return{\"--w3m-accent-color\":\"#3396FF\",\"--w3m-accent-fill-color\":\"#FFFFFF\",\"--w3m-z-index\":\"89\",\"--w3m-background-color\":\"#3396FF\",\"--w3m-background-border-radius\":\"8px\",\"--w3m-container-border-radius\":\"30px\",\"--w3m-wallet-icon-border-radius\":\"15px\",\"--w3m-input-border-radius\":\"28px\",\"--w3m-button-border-radius\":\"10px\",\"--w3m-notification-border-radius\":\"36px\",\"--w3m-secondary-button-border-radius\":\"28px\",\"--w3m-icon-button-border-radius\":\"50%\",\"--w3m-button-hover-highlight-border-radius\":\"10px\",\"--w3m-text-big-bold-size\":\"20px\",\"--w3m-text-big-bold-weight\":\"600\",\"--w3m-text-big-bold-line-height\":\"24px\",\"--w3m-text-big-bold-letter-spacing\":\"-0.03em\",\"--w3m-text-big-bold-text-transform\":\"none\",\"--w3m-text-xsmall-bold-size\":\"10px\",\"--w3m-text-xsmall-bold-weight\":\"700\",\"--w3m-text-xsmall-bold-line-height\":\"12px\",\"--w3m-text-xsmall-bold-letter-spacing\":\"0.02em\",\"--w3m-text-xsmall-bold-text-transform\":\"uppercase\",\"--w3m-text-xsmall-regular-size\":\"12px\",\"--w3m-text-xsmall-regular-weight\":\"600\",\"--w3m-text-xsmall-regular-line-height\":\"14px\",\"--w3m-text-xsmall-regular-letter-spacing\":\"-0.03em\",\"--w3m-text-xsmall-regular-text-transform\":\"none\",\"--w3m-text-small-thin-size\":\"14px\",\"--w3m-text-small-thin-weight\":\"500\",\"--w3m-text-small-thin-line-height\":\"16px\",\"--w3m-text-small-thin-letter-spacing\":\"-0.03em\",\"--w3m-text-small-thin-text-transform\":\"none\",\"--w3m-text-small-regular-size\":\"14px\",\"--w3m-text-small-regular-weight\":\"600\",\"--w3m-text-small-regular-line-height\":\"16px\",\"--w3m-text-small-regular-letter-spacing\":\"-0.03em\",\"--w3m-text-small-regular-text-transform\":\"none\",\"--w3m-text-medium-regular-size\":\"16px\",\"--w3m-text-medium-regular-weight\":\"600\",\"--w3m-text-medium-regular-line-height\":\"20px\",\"--w3m-text-medium-regular-letter-spacing\":\"-0.03em\",\"--w3m-text-medium-regular-text-transform\":\"none\",\"--w3m-font-family\":\"-apple-system, system-ui, BlinkMacSystemFont, 'Segoe UI', Roboto, Ubuntu, 'Helvetica Neue', sans-serif\",\"--w3m-success-color\":\"rgb(38,181,98)\",\"--w3m-error-color\":\"rgb(242, 90, 103)\"}}function Dt(){const{themeVariables:e}=ne.state;return{\"--w3m-background-image-url\":e!=null&&e[\"--w3m-background-image-url\"]?`url(${e[\"--w3m-background-image-url\"]})`:\"none\"}}const m={setTheme(){const e=document.querySelector(\":root\"),{themeVariables:t}=ne.state;if(e){const o=$e($e($e($e({},Nt()),_t()),t),Dt());Object.entries(o).forEach(([r,a])=>e.style.setProperty(r,a))}},globalCss:u`*,::after,::before{margin:0;padding:0;box-sizing:border-box;font-style:normal;text-rendering:optimizeSpeed;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-webkit-tap-highlight-color:transparent;backface-visibility:hidden}button{cursor:pointer;display:flex;justify-content:center;align-items:center;position:relative;border:none;background-color:transparent}button::after{content:'';position:absolute;inset:0;transition:background-color,.2s ease}button:disabled{cursor:not-allowed}button svg,button w3m-text{position:relative;z-index:1}input{border:none;outline:0;appearance:none}img{display:block}::selection{color:var(--w3m-accent-fill-color);background:var(--w3m-accent-color)}`},Rt=u`button{display:flex;border-radius:var(--w3m-button-hover-highlight-border-radius);flex-direction:column;transition:background-color .2s ease;justify-content:center;padding:5px;width:100px}button:hover{background-color:var(--w3m-color-overlay)}button>div{display:flex;justify-content:center;align-items:center;width:32px;height:32px;box-shadow:inset 0 0 0 1px var(--w3m-color-overlay);background-color:var(--w3m-accent-color);border-radius:var(--w3m-icon-button-border-radius);margin-bottom:4px}button path{fill:var(--w3m-accent-fill-color)}`;var Zt=Object.defineProperty,Ht=Object.getOwnPropertyDescriptor,Oe=(e,t,o,r)=>{for(var a=r>1?void 0:r?Ht(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Zt(t,o,a),a};let te=class extends c{constructor(){super(...arguments),this.icon=void 0,this.label=\"\",this.onClick=()=>null}render(){return i`<button @click=\"${this.onClick}\"><div>${this.icon}</div><w3m-text variant=\"xsmall-regular\" color=\"accent\">${this.label}</w3m-text></button>`}};te.styles=[m.globalCss,Rt],Oe([h()],te.prototype,\"icon\",2),Oe([h()],te.prototype,\"label\",2),Oe([h()],te.prototype,\"onClick\",2),te=Oe([d(\"w3m-box-button\")],te);const St=u`button{border-radius:var(--w3m-secondary-button-border-radius);height:28px;padding:0 10px;background-color:var(--w3m-accent-color)}button path{fill:var(--w3m-accent-fill-color)}button::after{border-radius:inherit;border:1px solid var(--w3m-color-overlay)}button:disabled::after{background-color:transparent}.w3m-icon-left svg{margin-right:5px}.w3m-icon-right svg{margin-left:5px}button:hover::after{background-color:var(--w3m-color-overlay)}button:disabled{background-color:var(--w3m-color-bg-3)}`;var Bt=Object.defineProperty,Vt=Object.getOwnPropertyDescriptor,ce=(e,t,o,r)=>{for(var a=r>1?void 0:r?Vt(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Bt(t,o,a),a};let G=class extends c{constructor(){super(...arguments),this.disabled=!1,this.iconLeft=void 0,this.iconRight=void 0,this.onClick=()=>null}render(){const e={\"w3m-icon-left\":this.iconLeft!==void 0,\"w3m-icon-right\":this.iconRight!==void 0};return i`<button class=\"${D(e)}\" ?disabled=\"${this.disabled}\" @click=\"${this.onClick}\">${this.iconLeft}<w3m-text variant=\"small-regular\" color=\"inverse\"><slot></slot></w3m-text>${this.iconRight}</button>`}};G.styles=[m.globalCss,St],ce([h()],G.prototype,\"disabled\",2),ce([h()],G.prototype,\"iconLeft\",2),ce([h()],G.prototype,\"iconRight\",2),ce([h()],G.prototype,\"onClick\",2),G=ce([d(\"w3m-button\")],G);const Ut=u`:host{display:inline-block}button{padding:0 15px 1px;height:40px;border-radius:var(--w3m-button-border-radius);color:var(--w3m-accent-fill-color);background-color:var(--w3m-accent-color)}button::after{content:'';inset:0;position:absolute;background-color:transparent;border-radius:inherit;transition:background-color .2s ease;border:1px solid var(--w3m-color-overlay)}button:hover::after{background-color:var(--w3m-color-overlay)}button:disabled{padding-bottom:0;background-color:var(--w3m-color-bg-3);color:var(--w3m-color-fg-3)}.w3m-secondary{color:var(--w3m-accent-color);background-color:transparent}.w3m-secondary::after{display:none}`;var zt=Object.defineProperty,Gt=Object.getOwnPropertyDescriptor,Ze=(e,t,o,r)=>{for(var a=r>1?void 0:r?Gt(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&zt(t,o,a),a};let de=class extends c{constructor(){super(...arguments),this.disabled=!1,this.variant=\"primary\"}render(){const e={\"w3m-secondary\":this.variant===\"secondary\"};return i`<button ?disabled=\"${this.disabled}\" class=\"${D(e)}\"><slot></slot></button>`}};de.styles=[m.globalCss,Ut],Ze([h()],de.prototype,\"disabled\",2),Ze([h()],de.prototype,\"variant\",2),de=Ze([d(\"w3m-button-big\")],de);const p={CROSS_ICON:b`<svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\"><path d=\"M9.94 11A.75.75 0 1 0 11 9.94L7.414 6.353a.5.5 0 0 1 0-.708L11 2.061A.75.75 0 1 0 9.94 1L6.353 4.586a.5.5 0 0 1-.708 0L2.061 1A.75.75 0 0 0 1 2.06l3.586 3.586a.5.5 0 0 1 0 .708L1 9.939A.75.75 0 1 0 2.06 11l3.586-3.586a.5.5 0 0 1 .708 0L9.939 11Z\" fill=\"#fff\"/></svg>`,WALLET_CONNECT_LOGO:b`<svg width=\"178\" height=\"29\" viewBox=\"0 0 178 29\" id=\"w3m-wc-logo\"><path d=\"M10.683 7.926c5.284-5.17 13.85-5.17 19.134 0l.636.623a.652.652 0 0 1 0 .936l-2.176 2.129a.343.343 0 0 1-.478 0l-.875-.857c-3.686-3.607-9.662-3.607-13.348 0l-.937.918a.343.343 0 0 1-.479 0l-2.175-2.13a.652.652 0 0 1 0-.936l.698-.683Zm23.633 4.403 1.935 1.895a.652.652 0 0 1 0 .936l-8.73 8.543a.687.687 0 0 1-.956 0L20.37 17.64a.172.172 0 0 0-.239 0l-6.195 6.063a.687.687 0 0 1-.957 0l-8.73-8.543a.652.652 0 0 1 0-.936l1.936-1.895a.687.687 0 0 1 .957 0l6.196 6.064a.172.172 0 0 0 .239 0l6.195-6.064a.687.687 0 0 1 .957 0l6.196 6.064a.172.172 0 0 0 .24 0l6.195-6.064a.687.687 0 0 1 .956 0ZM48.093 20.948l2.338-9.355c.139-.515.258-1.07.416-1.942.12.872.258 1.427.357 1.942l2.022 9.355h4.181l3.528-13.874h-3.21l-1.943 8.523a24.825 24.825 0 0 0-.456 2.457c-.158-.931-.317-1.625-.495-2.438l-1.883-8.542h-4.201l-2.042 8.542a41.204 41.204 0 0 0-.475 2.438 41.208 41.208 0 0 0-.476-2.438l-1.903-8.542h-3.349l3.508 13.874h4.083ZM63.33 21.304c1.585 0 2.596-.654 3.11-1.605-.059.297-.078.595-.078.892v.357h2.655V15.22c0-2.735-1.248-4.32-4.3-4.32-2.636 0-4.36 1.466-4.52 3.487h2.914c.1-.891.734-1.426 1.705-1.426.911 0 1.407.515 1.407 1.11 0 .435-.258.693-1.03.792l-1.388.159c-2.061.257-3.825 1.01-3.825 3.19 0 1.982 1.645 3.092 3.35 3.092Zm.891-2.041c-.773 0-1.348-.436-1.348-1.19 0-.733.655-1.09 1.645-1.268l.674-.119c.575-.118.892-.218 1.09-.396v.912c0 1.228-.892 2.06-2.06 2.06ZM70.398 7.074v13.874h2.874V7.074h-2.874ZM74.934 7.074v13.874h2.874V7.074h-2.874ZM84.08 21.304c2.735 0 4.5-1.546 4.697-3.567h-2.893c-.139.892-.892 1.387-1.804 1.387-1.228 0-2.12-.99-2.14-2.358h6.897v-.555c0-3.21-1.764-5.312-4.816-5.312-2.933 0-4.994 2.062-4.994 5.173 0 3.37 2.12 5.232 5.053 5.232Zm-2.16-6.421c.119-1.11.932-1.922 2.081-1.922 1.11 0 1.883.772 1.903 1.922H81.92ZM94.92 21.146c.633 0 1.248-.1 1.525-.179v-2.18c-.218.04-.475.06-.693.06-1.05 0-1.427-.595-1.427-1.566v-3.805h2.338v-2.24h-2.338V7.788H91.47v3.448H89.37v2.24h2.1v4.201c0 2.3 1.15 3.469 3.45 3.469ZM104.62 21.304c3.924 0 6.302-2.299 6.599-5.608h-3.111c-.238 1.803-1.506 3.032-3.369 3.032-2.2 0-3.746-1.784-3.746-4.796 0-2.953 1.605-4.638 3.805-4.638 1.883 0 2.953 1.15 3.171 2.834h3.191c-.317-3.448-2.854-5.41-6.342-5.41-3.984 0-7.036 2.695-7.036 7.214 0 4.677 2.676 7.372 6.838 7.372ZM117.449 21.304c2.993 0 5.114-1.882 5.114-5.172 0-3.23-2.121-5.233-5.114-5.233-2.972 0-5.093 2.002-5.093 5.233 0 3.29 2.101 5.172 5.093 5.172Zm0-2.22c-1.327 0-2.18-1.09-2.18-2.952 0-1.903.892-2.973 2.18-2.973 1.308 0 2.2 1.07 2.2 2.973 0 1.862-.872 2.953-2.2 2.953ZM126.569 20.948v-5.689c0-1.208.753-2.1 1.823-2.1 1.011 0 1.606.773 1.606 2.06v5.729h2.873v-6.144c0-2.339-1.229-3.905-3.428-3.905-1.526 0-2.458.734-2.953 1.606a5.31 5.31 0 0 0 .079-.892v-.377h-2.874v9.712h2.874ZM137.464 20.948v-5.689c0-1.208.753-2.1 1.823-2.1 1.011 0 1.606.773 1.606 2.06v5.729h2.873v-6.144c0-2.339-1.228-3.905-3.428-3.905-1.526 0-2.458.734-2.953 1.606a5.31 5.31 0 0 0 .079-.892v-.377h-2.874v9.712h2.874ZM149.949 21.304c2.735 0 4.499-1.546 4.697-3.567h-2.893c-.139.892-.892 1.387-1.804 1.387-1.228 0-2.12-.99-2.14-2.358h6.897v-.555c0-3.21-1.764-5.312-4.816-5.312-2.933 0-4.994 2.062-4.994 5.173 0 3.37 2.12 5.232 5.053 5.232Zm-2.16-6.421c.119-1.11.932-1.922 2.081-1.922 1.11 0 1.883.772 1.903 1.922h-3.984ZM160.876 21.304c3.013 0 4.658-1.645 4.975-4.201h-2.874c-.099 1.07-.713 1.982-2.001 1.982-1.309 0-2.2-1.21-2.2-2.993 0-1.942 1.03-2.933 2.259-2.933 1.209 0 1.803.872 1.883 1.882h2.873c-.218-2.358-1.823-4.142-4.776-4.142-2.874 0-5.153 1.903-5.153 5.193 0 3.25 1.923 5.212 5.014 5.212ZM172.067 21.146c.634 0 1.248-.1 1.526-.179v-2.18c-.218.04-.476.06-.694.06-1.05 0-1.427-.595-1.427-1.566v-3.805h2.339v-2.24h-2.339V7.788h-2.854v3.448h-2.1v2.24h2.1v4.201c0 2.3 1.15 3.469 3.449 3.469Z\" fill=\"#fff\"/></svg>`,WALLET_CONNECT_ICON:b`<svg width=\"28\" height=\"20\" viewBox=\"0 0 28 20\"><g clip-path=\"url(#a)\"><path d=\"M7.386 6.482c3.653-3.576 9.575-3.576 13.228 0l.44.43a.451.451 0 0 1 0 .648L19.55 9.033a.237.237 0 0 1-.33 0l-.606-.592c-2.548-2.496-6.68-2.496-9.228 0l-.648.634a.237.237 0 0 1-.33 0L6.902 7.602a.451.451 0 0 1 0-.647l.483-.473Zm16.338 3.046 1.339 1.31a.451.451 0 0 1 0 .648l-6.035 5.909a.475.475 0 0 1-.662 0L14.083 13.2a.119.119 0 0 0-.166 0l-4.283 4.194a.475.475 0 0 1-.662 0l-6.035-5.91a.451.451 0 0 1 0-.647l1.338-1.31a.475.475 0 0 1 .662 0l4.283 4.194c.046.044.12.044.166 0l4.283-4.194a.475.475 0 0 1 .662 0l4.283 4.194c.046.044.12.044.166 0l4.283-4.194a.475.475 0 0 1 .662 0Z\" fill=\"#000000\"/></g><defs><clipPath id=\"a\"><path fill=\"#ffffff\" d=\"M0 0h28v20H0z\"/></clipPath></defs></svg>`,WALLET_CONNECT_ICON_COLORED:b`<svg width=\"96\" height=\"96\" fill=\"none\"><path fill=\"#fff\" d=\"M25.322 33.597c12.525-12.263 32.83-12.263 45.355 0l1.507 1.476a1.547 1.547 0 0 1 0 2.22l-5.156 5.048a.814.814 0 0 1-1.134 0l-2.074-2.03c-8.737-8.555-22.903-8.555-31.64 0l-2.222 2.175a.814.814 0 0 1-1.134 0l-5.156-5.049a1.547 1.547 0 0 1 0-2.22l1.654-1.62Zm56.019 10.44 4.589 4.494a1.547 1.547 0 0 1 0 2.22l-20.693 20.26a1.628 1.628 0 0 1-2.267 0L48.283 56.632a.407.407 0 0 0-.567 0L33.03 71.012a1.628 1.628 0 0 1-2.268 0L10.07 50.75a1.547 1.547 0 0 1 0-2.22l4.59-4.494a1.628 1.628 0 0 1 2.267 0l14.687 14.38c.156.153.41.153.567 0l14.685-14.38a1.628 1.628 0 0 1 2.268 0l14.687 14.38c.156.153.41.153.567 0l14.686-14.38a1.628 1.628 0 0 1 2.268 0Z\"/><path stroke=\"#000\" d=\"M25.672 33.954c12.33-12.072 32.325-12.072 44.655 0l1.508 1.476a1.047 1.047 0 0 1 0 1.506l-5.157 5.048a.314.314 0 0 1-.434 0l-2.074-2.03c-8.932-8.746-23.409-8.746-32.34 0l-2.222 2.174a.314.314 0 0 1-.434 0l-5.157-5.048a1.047 1.047 0 0 1 0-1.506l1.655-1.62Zm55.319 10.44 4.59 4.494a1.047 1.047 0 0 1 0 1.506l-20.694 20.26a1.128 1.128 0 0 1-1.568 0l-14.686-14.38a.907.907 0 0 0-1.267 0L32.68 70.655a1.128 1.128 0 0 1-1.568 0L10.42 50.394a1.047 1.047 0 0 1 0-1.506l4.59-4.493a1.128 1.128 0 0 1 1.567 0l14.687 14.379a.907.907 0 0 0 1.266 0l-.35-.357.35.357 14.686-14.38a1.128 1.128 0 0 1 1.568 0l14.687 14.38a.907.907 0 0 0 1.267 0l14.686-14.38a1.128 1.128 0 0 1 1.568 0Z\"/></svg>`,BACK_ICON:b`<svg width=\"10\" height=\"18\" viewBox=\"0 0 10 18\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.735.179a.75.75 0 0 1 .087 1.057L2.92 8.192a1.25 1.25 0 0 0 0 1.617l5.902 6.956a.75.75 0 1 1-1.144.97L1.776 10.78a2.75 2.75 0 0 1 0-3.559L7.678.265A.75.75 0 0 1 8.735.18Z\" fill=\"#fff\"/></svg>`,COPY_ICON:b`<svg width=\"24\" height=\"24\" fill=\"none\"><path fill=\"#fff\" fill-rule=\"evenodd\" d=\"M7.01 7.01c.03-1.545.138-2.5.535-3.28A5 5 0 0 1 9.73 1.545C10.8 1 12.2 1 15 1c2.8 0 4.2 0 5.27.545a5 5 0 0 1 2.185 2.185C23 4.8 23 6.2 23 9c0 2.8 0 4.2-.545 5.27a5 5 0 0 1-2.185 2.185c-.78.397-1.735.505-3.28.534l-.001.01c-.03 1.54-.138 2.493-.534 3.27a5 5 0 0 1-2.185 2.186C13.2 23 11.8 23 9 23c-2.8 0-4.2 0-5.27-.545a5 5 0 0 1-2.185-2.185C1 19.2 1 17.8 1 15c0-2.8 0-4.2.545-5.27A5 5 0 0 1 3.73 7.545C4.508 7.149 5.46 7.04 7 7.01h.01ZM15 15.5c-1.425 0-2.403-.001-3.162-.063-.74-.06-1.139-.172-1.427-.319a3.5 3.5 0 0 1-1.53-1.529c-.146-.288-.257-.686-.318-1.427C8.501 11.403 8.5 10.425 8.5 9c0-1.425.001-2.403.063-3.162.06-.74.172-1.139.318-1.427a3.5 3.5 0 0 1 1.53-1.53c.288-.146.686-.257 1.427-.318.759-.062 1.737-.063 3.162-.063 1.425 0 2.403.001 3.162.063.74.06 1.139.172 1.427.318a3.5 3.5 0 0 1 1.53 1.53c.146.288.257.686.318 1.427.062.759.063 1.737.063 3.162 0 1.425-.001 2.403-.063 3.162-.06.74-.172 1.139-.319 1.427a3.5 3.5 0 0 1-1.529 1.53c-.288.146-.686.257-1.427.318-.759.062-1.737.063-3.162.063ZM7 8.511c-.444.009-.825.025-1.162.052-.74.06-1.139.172-1.427.318a3.5 3.5 0 0 0-1.53 1.53c-.146.288-.257.686-.318 1.427-.062.759-.063 1.737-.063 3.162 0 1.425.001 2.403.063 3.162.06.74.172 1.139.318 1.427a3.5 3.5 0 0 0 1.53 1.53c.288.146.686.257 1.427.318.759.062 1.737.063 3.162.063 1.425 0 2.403-.001 3.162-.063.74-.06 1.139-.172 1.427-.319a3.5 3.5 0 0 0 1.53-1.53c.146-.287.257-.685.318-1.426.027-.337.043-.718.052-1.162H15c-2.8 0-4.2 0-5.27-.545a5 5 0 0 1-2.185-2.185C7 13.2 7 11.8 7 9v-.489Z\" clip-rule=\"evenodd\"/></svg>`,RETRY_ICON:b`<svg width=\"15\" height=\"16\" viewBox=\"0 0 15 16\"><path d=\"M6.464 2.03A.75.75 0 0 0 5.403.97L2.08 4.293a1 1 0 0 0 0 1.414L5.403 9.03a.75.75 0 0 0 1.06-1.06L4.672 6.177a.25.25 0 0 1 .177-.427h2.085a4 4 0 1 1-3.93 4.746c-.077-.407-.405-.746-.82-.746-.414 0-.755.338-.7.748a5.501 5.501 0 1 0 5.45-6.248H4.848a.25.25 0 0 1-.177-.427L6.464 2.03Z\" fill=\"#fff\"/></svg>`,DESKTOP_ICON:b`<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 5.98c0-1.85 0-2.775.394-3.466a3 3 0 0 1 1.12-1.12C2.204 1 3.13 1 4.98 1h6.04c1.85 0 2.775 0 3.466.394a3 3 0 0 1 1.12 1.12C16 3.204 16 4.13 16 5.98v1.04c0 1.85 0 2.775-.394 3.466a3 3 0 0 1-1.12 1.12C13.796 12 12.87 12 11.02 12H4.98c-1.85 0-2.775 0-3.466-.394a3 3 0 0 1-1.12-1.12C0 9.796 0 8.87 0 7.02V5.98ZM4.98 2.5h6.04c.953 0 1.568.001 2.034.043.446.04.608.108.69.154a1.5 1.5 0 0 1 .559.56c.046.08.114.243.154.69.042.465.043 1.08.043 2.033v1.04c0 .952-.001 1.568-.043 2.034-.04.446-.108.608-.154.69a1.499 1.499 0 0 1-.56.559c-.08.046-.243.114-.69.154-.466.042-1.08.043-2.033.043H4.98c-.952 0-1.568-.001-2.034-.043-.446-.04-.608-.108-.69-.154a1.5 1.5 0 0 1-.559-.56c-.046-.08-.114-.243-.154-.69-.042-.465-.043-1.08-.043-2.033V5.98c0-.952.001-1.568.043-2.034.04-.446.108-.608.154-.69a1.5 1.5 0 0 1 .56-.559c.08-.046.243-.114.69-.154.465-.042 1.08-.043 2.033-.043Z\" fill=\"#fff\"/><path d=\"M4 14.25a.75.75 0 0 1 .75-.75h6.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1-.75-.75Z\" fill=\"#fff\"/></svg>`,MOBILE_ICON:b`<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><path d=\"M6.75 5a1.25 1.25 0 1 0 0-2.5 1.25 1.25 0 0 0 0 2.5Z\" fill=\"#fff\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3 4.98c0-1.85 0-2.775.394-3.466a3 3 0 0 1 1.12-1.12C5.204 0 6.136 0 8 0s2.795 0 3.486.394a3 3 0 0 1 1.12 1.12C13 2.204 13 3.13 13 4.98v6.04c0 1.85 0 2.775-.394 3.466a3 3 0 0 1-1.12 1.12C10.796 16 9.864 16 8 16s-2.795 0-3.486-.394a3 3 0 0 1-1.12-1.12C3 13.796 3 12.87 3 11.02V4.98Zm8.5 0v6.04c0 .953-.001 1.568-.043 2.034-.04.446-.108.608-.154.69a1.499 1.499 0 0 1-.56.559c-.08.045-.242.113-.693.154-.47.042-1.091.043-2.05.043-.959 0-1.58-.001-2.05-.043-.45-.04-.613-.109-.693-.154a1.5 1.5 0 0 1-.56-.56c-.046-.08-.114-.243-.154-.69-.042-.466-.043-1.08-.043-2.033V4.98c0-.952.001-1.568.043-2.034.04-.446.108-.608.154-.69a1.5 1.5 0 0 1 .56-.559c.08-.045.243-.113.693-.154C6.42 1.501 7.041 1.5 8 1.5c.959 0 1.58.001 2.05.043.45.04.613.109.693.154a1.5 1.5 0 0 1 .56.56c.046.08.114.243.154.69.042.465.043 1.08.043 2.033Z\" fill=\"#fff\"/></svg>`,ARROW_DOWN_ICON:b`<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\"><path d=\"M2.28 7.47a.75.75 0 0 0-1.06 1.06l5.25 5.25a.75.75 0 0 0 1.06 0l5.25-5.25a.75.75 0 0 0-1.06-1.06l-3.544 3.543a.25.25 0 0 1-.426-.177V.75a.75.75 0 0 0-1.5 0v10.086a.25.25 0 0 1-.427.176L2.28 7.47Z\" fill=\"#fff\"/></svg>`,ARROW_UP_RIGHT_ICON:b`<svg width=\"15\" height=\"14\" fill=\"none\"><path d=\"M4.5 1.75A.75.75 0 0 1 5.25 1H12a1.5 1.5 0 0 1 1.5 1.5v6.75a.75.75 0 0 1-1.5 0V4.164a.25.25 0 0 0-.427-.176L4.061 11.5A.75.75 0 0 1 3 10.44l7.513-7.513a.25.25 0 0 0-.177-.427H5.25a.75.75 0 0 1-.75-.75Z\" fill=\"#fff\"/></svg>`,ARROW_RIGHT_ICON:b`<svg width=\"6\" height=\"14\" viewBox=\"0 0 6 14\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.181 1.099a.75.75 0 0 1 1.024.279l2.433 4.258a2.75 2.75 0 0 1 0 2.729l-2.433 4.257a.75.75 0 1 1-1.303-.744L4.335 7.62a1.25 1.25 0 0 0 0-1.24L1.902 2.122a.75.75 0 0 1 .28-1.023Z\" fill=\"#fff\"/></svg>`,QRCODE_ICON:b`<svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\"><path d=\"M23.748 9a.748.748 0 0 0 .748-.752c-.018-2.596-.128-4.07-.784-5.22a6 6 0 0 0-2.24-2.24c-1.15-.656-2.624-.766-5.22-.784a.748.748 0 0 0-.752.748c0 .414.335.749.748.752 1.015.007 1.82.028 2.494.088.995.09 1.561.256 1.988.5.7.398 1.28.978 1.679 1.678.243.427.41.993.498 1.988.061.675.082 1.479.09 2.493a.753.753 0 0 0 .75.749ZM3.527.788C4.677.132 6.152.022 8.747.004A.748.748 0 0 1 9.5.752a.753.753 0 0 1-.749.752c-1.014.007-1.818.028-2.493.088-.995.09-1.561.256-1.988.5-.7.398-1.28.978-1.679 1.678-.243.427-.41.993-.499 1.988-.06.675-.081 1.479-.088 2.493A.753.753 0 0 1 1.252 9a.748.748 0 0 1-.748-.752c.018-2.596.128-4.07.784-5.22a6 6 0 0 1 2.24-2.24ZM1.252 15a.748.748 0 0 0-.748.752c.018 2.596.128 4.07.784 5.22a6 6 0 0 0 2.24 2.24c1.15.656 2.624.766 5.22.784a.748.748 0 0 0 .752-.748.753.753 0 0 0-.749-.752c-1.014-.007-1.818-.028-2.493-.089-.995-.089-1.561-.255-1.988-.498a4.5 4.5 0 0 1-1.679-1.68c-.243-.426-.41-.992-.499-1.987-.06-.675-.081-1.479-.088-2.493A.753.753 0 0 0 1.252 15ZM22.996 15.749a.753.753 0 0 1 .752-.749c.415 0 .751.338.748.752-.018 2.596-.128 4.07-.784 5.22a6 6 0 0 1-2.24 2.24c-1.15.656-2.624.766-5.22.784a.748.748 0 0 1-.752-.748c0-.414.335-.749.748-.752 1.015-.007 1.82-.028 2.494-.089.995-.089 1.561-.255 1.988-.498a4.5 4.5 0 0 0 1.679-1.68c.243-.426.41-.992.498-1.987.061-.675.082-1.479.09-2.493Z\" fill=\"#fff\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 4a2.5 2.5 0 0 0-2.5 2.5v2A2.5 2.5 0 0 0 7 11h2a2.5 2.5 0 0 0 2.5-2.5v-2A2.5 2.5 0 0 0 9 4H7Zm2 1.5H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1ZM13.5 6.5A2.5 2.5 0 0 1 16 4h2a2.5 2.5 0 0 1 2.5 2.5v2A2.5 2.5 0 0 1 18 11h-2a2.5 2.5 0 0 1-2.5-2.5v-2Zm2.5-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-2a1 1 0 0 1 1-1ZM7 13a2.5 2.5 0 0 0-2.5 2.5v2A2.5 2.5 0 0 0 7 20h2a2.5 2.5 0 0 0 2.5-2.5v-2A2.5 2.5 0 0 0 9 13H7Zm2 1.5H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1Z\" fill=\"#fff\"/><path d=\"M13.5 15.5c0-.465 0-.697.038-.89a2 2 0 0 1 1.572-1.572C15.303 13 15.535 13 16 13v2.5h-2.5ZM18 13c.465 0 .697 0 .89.038a2 2 0 0 1 1.572 1.572c.038.193.038.425.038.89H18V13ZM18 17.5h2.5c0 .465 0 .697-.038.89a2 2 0 0 1-1.572 1.572C18.697 20 18.465 20 18 20v-2.5ZM13.5 17.5H16V20c-.465 0-.697 0-.89-.038a2 2 0 0 1-1.572-1.572c-.038-.193-.038-.425-.038-.89Z\" fill=\"#fff\"/></svg>`,SCAN_ICON:b`<svg width=\"16\" height=\"16\" fill=\"none\"><path fill=\"#fff\" d=\"M10 15.216c0 .422.347.763.768.74 1.202-.064 2.025-.222 2.71-.613a5.001 5.001 0 0 0 1.865-1.866c.39-.684.549-1.507.613-2.709a.735.735 0 0 0-.74-.768.768.768 0 0 0-.76.732c-.009.157-.02.306-.032.447-.073.812-.206 1.244-.384 1.555-.31.545-.761.996-1.306 1.306-.311.178-.743.311-1.555.384-.141.013-.29.023-.447.032a.768.768 0 0 0-.732.76ZM10 .784c0 .407.325.737.732.76.157.009.306.02.447.032.812.073 1.244.206 1.555.384a3.5 3.5 0 0 1 1.306 1.306c.178.311.311.743.384 1.555.013.142.023.29.032.447a.768.768 0 0 0 .76.732.734.734 0 0 0 .74-.768c-.064-1.202-.222-2.025-.613-2.71A5 5 0 0 0 13.477.658c-.684-.39-1.507-.549-2.709-.613a.735.735 0 0 0-.768.74ZM5.232.044A.735.735 0 0 1 6 .784a.768.768 0 0 1-.732.76c-.157.009-.305.02-.447.032-.812.073-1.244.206-1.555.384A3.5 3.5 0 0 0 1.96 3.266c-.178.311-.311.743-.384 1.555-.013.142-.023.29-.032.447A.768.768 0 0 1 .784 6a.735.735 0 0 1-.74-.768c.064-1.202.222-2.025.613-2.71A5 5 0 0 1 2.523.658C3.207.267 4.03.108 5.233.044ZM5.268 14.456a.768.768 0 0 1 .732.76.734.734 0 0 1-.768.74c-1.202-.064-2.025-.222-2.71-.613a5 5 0 0 1-1.865-1.866c-.39-.684-.549-1.507-.613-2.709A.735.735 0 0 1 .784 10c.407 0 .737.325.76.732.009.157.02.306.032.447.073.812.206 1.244.384 1.555a3.5 3.5 0 0 0 1.306 1.306c.311.178.743.311 1.555.384.142.013.29.023.447.032Z\"/></svg>`,CHECKMARK_ICON:b`<svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.155.132a.75.75 0 0 1 .232 1.035L5.821 11.535a1 1 0 0 1-1.626.09L.665 7.21a.75.75 0 1 1 1.17-.937L4.71 9.867a.25.25 0 0 0 .406-.023L11.12.364a.75.75 0 0 1 1.035-.232Z\" fill=\"#fff\"/></svg>`,HELP_ETH_IMG:b`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><g clip-path=\"url(#j)\"><rect width=\"60\" height=\"60\" rx=\"30\" fill=\"#987DE8\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"m15.48 28.367 11.966-19.3c1.174-1.892 3.927-1.892 5.1 0l11.97 19.306a6 6 0 0 1 .9 3.142v.028a6 6 0 0 1-1.154 3.56L33.227 50.208c-1.599 2.188-4.864 2.188-6.461 0L15.733 35.095a6 6 0 0 1-1.154-3.538v-.029a6 6 0 0 1 .9-3.161Z\" fill=\"#fff\"/><path d=\"M30.84 10.112a.992.992 0 0 0-.844-.464V24.5l12.598 5.53c.081-.466-.001-.963-.27-1.398L30.84 10.112Z\" fill=\"#643CDD\"/><path d=\"M29.996 9.648a.991.991 0 0 0-.845.465l-11.489 18.53a1.991 1.991 0 0 0-.264 1.387l12.598-5.53V9.648Z\" fill=\"#BDADEB\"/><path d=\"M29.996 50.544a.994.994 0 0 0 .808-.41l11.235-15.38c.307-.434-.193-.988-.658-.72L31.49 39.71a2.998 2.998 0 0 1-1.494.398v10.437Z\" fill=\"#643CDD\"/><path d=\"M17.966 34.762 29.19 50.134c.2.274.503.41.807.41V40.108a2.998 2.998 0 0 1-1.493-.398l-9.884-5.676c-.468-.27-.971.292-.653.728Z\" fill=\"#BDADEB\"/><path d=\"M42.594 30.03 29.996 24.5v13.138a3 3 0 0 0 1.495-.399l10.149-5.83c.525-.31.856-.823.954-1.38Z\" fill=\"#401AB3\"/><path d=\"M29.996 37.638V24.462l-12.598 5.566c.098.564.437 1.083.974 1.392l10.13 5.82c.462.265.978.398 1.494.398Z\" fill=\"#7C5AE2\"/></g><rect class=\"help-img-highlight\" x=\".5\" y=\".5\" width=\"59\" height=\"59\" rx=\"29.5\"/><defs><clipPath id=\"j\"><rect width=\"60\" height=\"60\" rx=\"30\" fill=\"#fff\"/></clipPath></defs></svg>`,HELP_PAINTING_IMG:b`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><g clip-path=\"url(#k)\"><rect width=\"60\" height=\"60\" rx=\"3\" fill=\"#C653C6\"/><path d=\"M52.094 47.344c0-4.246-1.436-9.557-5.885-12.4a2.876 2.876 0 0 0-1.615-3.891v-.819a4.037 4.037 0 0 0-1.34-3.007 4.75 4.75 0 0 0-2.41-6.252v-5.506c0-6.248-5.065-11.313-11.313-11.313-6.247 0-11.312 5.065-11.312 11.313v2.152a3.343 3.343 0 0 0-1.18 5.045 4.738 4.738 0 0 0-1.633 3.584 4.73 4.73 0 0 0 .956 2.858 5.218 5.218 0 0 0-2.358 6.815c-3.06 4.129-6.098 8.298-6.098 15.64 0 2.668.364 4.856.731 6.385.184.765.368 1.366.509 1.78a12.721 12.721 0 0 0 .225.611l.015.037.005.011.001.004v.002h.001l.92-.393-.92.394.26.606h38.26l.291-.49-.86-.51.86.51v-.001l.002-.002.002-.005.01-.017.035-.06.127-.225c.108-.195.26-.477.441-.835.363-.714.845-1.732 1.328-2.953.959-2.427 1.945-5.725 1.945-9.068Z\" fill=\"#E87DE8\" stroke=\"#fff\" stroke-width=\"2\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M26.5 29.5c-3-.5-5.5-3-5.503-7l.002-7c0-.466 0-.698.026-.893a3 3 0 0 1 2.582-2.582c.195-.026.428-.026.893-.026 2 0 2.5-2.5 2.5-2.5s0 2.5 2.5 2.5c1.398 0 2.097 0 2.648.229a3 3 0 0 1 1.624 1.623c.228.552.228 1.25.228 2.649v6c0 4-3 7-6.5 7 1.35.23 4 0 6.5-2v9.53C34 38.5 31.495 40 28 40s-6-1.5-6-2.97L24 34l2.5 1.5v-6ZM26 47h4.5c2.5 0 3 4 3 5.5h-3l-1-1.5H26v-4Zm-6.25 5.5H24V57h-8c0-1 1-4.5 3.75-4.5Z\" fill=\"#fff\"/></g><rect class=\"help-img-highlight\" x=\".5\" y=\".5\" width=\"59\" height=\"59\" rx=\"2.5\"/><defs><clipPath id=\"k\"><rect width=\"60\" height=\"60\" rx=\"3\" fill=\"#fff\"/></clipPath></defs></svg>`,HELP_CHART_IMG:b`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><g clip-path=\"url(#l)\"><path d=\"M0 25.01C0 15.76 0 11.133 1.97 7.678a15 15 0 0 1 5.598-5.597C11.023.11 15.648.11 24.9.11h10.2c9.251 0 13.877 0 17.332 1.97a15 15 0 0 1 5.597 5.597C60 11.133 60 15.758 60 25.01v10.2c0 9.252 0 13.877-1.97 17.332a15 15 0 0 1-5.598 5.598c-3.455 1.97-8.08 1.97-17.332 1.97H24.9c-9.251 0-13.877 0-17.332-1.97a14.999 14.999 0 0 1-5.597-5.598C0 49.087 0 44.462 0 35.21v-10.2Z\" fill=\"#1DC956\"/><path d=\"M.5 25.01c0-4.635 0-8.078.244-10.795.244-2.71.726-4.65 1.66-6.289a14.5 14.5 0 0 1 5.412-5.41c1.639-.936 3.579-1.418 6.289-1.661C16.822.61 20.265.61 24.9.61h10.2c4.635 0 8.078 0 10.795.245 2.71.243 4.65.725 6.29 1.66a14.5 14.5 0 0 1 5.41 5.411c.935 1.64 1.417 3.579 1.66 6.29.244 2.717.245 6.16.245 10.794v10.2c0 4.635 0 8.078-.244 10.795-.244 2.71-.726 4.65-1.66 6.29a14.5 14.5 0 0 1-5.412 5.41c-1.639.936-3.579 1.418-6.289 1.661-2.717.244-6.16.244-10.795.244H24.9c-4.635 0-8.078 0-10.795-.244-2.71-.243-4.65-.725-6.29-1.66a14.5 14.5 0 0 1-5.41-5.412C1.47 50.655.988 48.716.745 46.005.5 43.288.5 39.845.5 35.21v-10.2Z\" stroke=\"#fff\" stroke-opacity=\".1\"/><path d=\"M16.109 60c-3.833-.179-6.41-.645-8.541-1.86a15 15 0 0 1-5.598-5.598C.553 50.057.155 46.967.043 41.985l4.146-1.382a4 4 0 0 0 2.48-2.39l4.654-12.409a2 2 0 0 1 2.505-1.195l2.526.842a2 2 0 0 0 2.422-1.003l2.968-5.938c.81-1.62 3.185-1.415 3.705.32l3.774 12.581a2 2 0 0 0 3.025 1.09l3.342-2.228c.27-.18.49-.422.646-.706l5.297-9.712a2 2 0 0 1 1.428-1.016l4.134-.689a2 2 0 0 1 1.61.437l3.892 3.243a2 2 0 0 0 2.694-.122l4.633-4.632C60 19.28 60 21.88 60 25.01v10.2c0 9.252 0 13.877-1.97 17.332a14.998 14.998 0 0 1-5.598 5.598c-2.131 1.215-4.708 1.681-8.54 1.86H16.108Z\" fill=\"#2BEE6C\"/><path d=\"M.072 43.03a112.37 112.37 0 0 1-.048-2.093l3.85-1.283a3 3 0 0 0 1.86-1.793l4.653-12.408a3 3 0 0 1 3.758-1.793l2.526.842a1 1 0 0 0 1.21-.501l2.97-5.938c1.214-2.43 4.775-2.123 5.556.48l3.774 12.58a1 1 0 0 0 1.513.545l3.341-2.227a1 1 0 0 0 .323-.353l5.298-9.712a3 3 0 0 1 2.14-1.523l4.135-.69a3 3 0 0 1 2.414.655l3.892 3.244a1 1 0 0 0 1.347-.061l5.28-5.28c.046.845.077 1.752.097 2.732l-3.962 3.962a3 3 0 0 1-4.042.183l-3.893-3.243a1 1 0 0 0-.804-.218l-4.135.689a1 1 0 0 0-.714.507l-5.297 9.712c-.233.427-.565.79-.97 1.06l-3.34 2.228a3 3 0 0 1-4.538-1.635l-3.775-12.58c-.26-.868-1.447-.97-1.852-.16l-2.969 5.937a3 3 0 0 1-3.632 1.505l-2.526-.842a1 1 0 0 0-1.252.597L7.606 38.564a5 5 0 0 1-3.1 2.988L.072 43.029Z\" fill=\"#fff\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M49.5 19a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0Z\" fill=\"#2BEE6C\"/><path d=\"M47.5 19a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z\" fill=\"#fff\"/><path d=\"M45 .283v59.654c-.63.042-1.294.074-2 .098V.185c.706.025 1.37.056 2 .098Z\" fill=\"#fff\"/><path class=\"help-img-highlight\" d=\"M.5 25.01c0-4.635 0-8.078.244-10.795.244-2.71.726-4.65 1.66-6.289a14.5 14.5 0 0 1 5.412-5.41c1.639-.936 3.579-1.418 6.289-1.661C16.822.61 20.265.61 24.9.61h10.2c4.635 0 8.078 0 10.795.245 2.71.243 4.65.725 6.29 1.66a14.5 14.5 0 0 1 5.41 5.411c.935 1.64 1.417 3.579 1.66 6.29.244 2.717.245 6.16.245 10.794v10.2c0 4.635 0 8.078-.244 10.795-.244 2.71-.726 4.65-1.66 6.29a14.5 14.5 0 0 1-5.412 5.41c-1.639.936-3.579 1.418-6.289 1.661-2.717.244-6.16.244-10.795.244H24.9c-4.635 0-8.078 0-10.795-.244-2.71-.243-4.65-.725-6.29-1.66a14.5 14.5 0 0 1-5.41-5.412C1.47 50.655.988 48.716.745 46.005.5 43.288.5 39.845.5 35.21v-10.2Z\"/></g><defs><clipPath id=\"l\"><path fill=\"#fff\" d=\"M0 0h60v60H0z\"/></clipPath></defs></svg>`,HELP_KEY_IMG:b`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><g clip-path=\"url(#m)\"><path fill=\"#EB8B47\" d=\"M0 24.9c0-9.252 0-13.878 1.97-17.332A15 15 0 0 1 7.569 1.97C11.023 0 15.648 0 24.9 0h10.2c9.251 0 13.877 0 17.332 1.97a15 15 0 0 1 5.597 5.598C60 11.022 60 15.648 60 24.899v10.2c0 9.252 0 13.878-1.97 17.332a15.001 15.001 0 0 1-5.598 5.598c-3.455 1.97-8.08 1.97-17.332 1.97H24.9c-9.251 0-13.877 0-17.332-1.97a15 15 0 0 1-5.597-5.598C0 48.977 0 44.351 0 35.1V24.9Z\"/><path class=\"help-img-highlight\" d=\"M.5 24.9c0-4.635 0-8.078.244-10.795.244-2.71.726-4.65 1.66-6.29a14.5 14.5 0 0 1 5.412-5.41C9.455 1.468 11.395.986 14.105.743 16.822.5 20.265.5 24.9.5h10.2c4.635 0 8.078 0 10.795.244 2.71.243 4.65.725 6.29 1.66a14.5 14.5 0 0 1 5.41 5.411c.935 1.64 1.417 3.58 1.66 6.29.244 2.717.245 6.16.245 10.794v10.2c0 4.635 0 8.078-.244 10.796-.244 2.71-.726 4.65-1.66 6.289a14.5 14.5 0 0 1-5.412 5.41c-1.639.936-3.579 1.418-6.289 1.661-2.717.244-6.16.244-10.795.244H24.9c-4.635 0-8.078 0-10.795-.244-2.71-.243-4.65-.725-6.29-1.66a14.5 14.5 0 0 1-5.41-5.411c-.935-1.64-1.417-3.58-1.66-6.29C.5 43.178.5 39.734.5 35.1V24.9Z\"/><path fill=\"#FF974C\" stroke=\"#fff\" stroke-width=\"2\" d=\"M39.192 29.192c5.077-5.077 5.077-13.308 0-18.385-5.076-5.077-13.308-5.077-18.384 0-5.077 5.077-5.077 13.308 0 18.385l1.287 1.291c1.137 1.142 1.706 1.712 2.097 2.387.267.462.472.957.608 1.473.2.755.2 1.56.2 3.171V48.75c0 1.077 0 1.615.134 2.119a4 4 0 0 0 .407.984c.262.45.643.831 1.404 1.592l.294.295c.654.654.982.981 1.365 1.086.26.07.533.07.792 0 .383-.105.71-.432 1.365-1.086l3.478-3.479c.655-.654.982-.981 1.087-1.365a1.5 1.5 0 0 0 0-.791c-.105-.384-.432-.711-1.087-1.365l-.478-.479c-.655-.654-.982-.981-1.087-1.365a1.5 1.5 0 0 1 0-.791c.105-.384.432-.711 1.087-1.365l.478-.479c.655-.654.982-.981 1.087-1.365a1.5 1.5 0 0 0 0-.791c-.105-.384-.432-.711-1.087-1.365l-.492-.493c-.65-.65-.974-.974-1.08-1.355a1.5 1.5 0 0 1-.003-.788c.102-.382.425-.71 1.069-1.364l5.46-5.547Z\"/><circle cx=\"30\" cy=\"17\" r=\"4\" fill=\"#EB8B47\" stroke=\"#fff\" stroke-width=\"2\"/></g><defs><clipPath id=\"m\"><path fill=\"#fff\" d=\"M0 0h60v60H0z\"/></clipPath></defs></svg>`,HELP_USER_IMG:b`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><g clip-path=\"url(#n)\"><rect width=\"60\" height=\"60\" fill=\"#00ACE6\" rx=\"30\"/><path fill=\"#1AC6FF\" stroke=\"#fff\" stroke-width=\"2\" d=\"M59 73c0 16.016-12.984 29-29 29S1 89.016 1 73c0-16.017 11-29 29-29s29 12.983 29 29ZM18.69 19.902a11 11 0 0 1 9.281-8.692 14.842 14.842 0 0 1 4.058 0 11 11 0 0 1 9.28 8.692c.178.866.322 1.75.44 2.625.132.977.132 1.968 0 2.945a39.467 39.467 0 0 1-.44 2.625 11 11 0 0 1-9.28 8.692 14.862 14.862 0 0 1-4.058 0 11 11 0 0 1-9.28-8.692 39.467 39.467 0 0 1-.44-2.625 11.004 11.004 0 0 1 0-2.945c.118-.876.262-1.759.44-2.625Z\"/><circle cx=\"24.5\" cy=\"23.5\" r=\"1.5\" fill=\"#fff\"/><circle cx=\"35.5\" cy=\"23.5\" r=\"1.5\" fill=\"#fff\"/><path stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m31 20-3 8h4\"/></g><rect class=\"help-img-highlight\" width=\"59\" height=\"59\" x=\".5\" y=\".5\" rx=\"29.5\"/><defs><clipPath id=\"n\"><rect width=\"60\" height=\"60\" fill=\"#fff\" rx=\"30\"/></clipPath></defs></svg>`,HELP_LOCK_IMG:b`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><rect width=\"60\" height=\"60\" fill=\"#C653C6\" rx=\"3\"/><path fill=\"#fff\" d=\"M20.034 15.216C20 15.607 20 16.07 20 17v2.808c0 1.13 0 1.696-.2 2.11a1.78 1.78 0 0 1-.584.714c-.366.28-1.051.42-2.423.7a7.076 7.076 0 0 0-1.597.511 9.001 9.001 0 0 0-4.353 4.353C10 30.005 10 32.336 10 37c0 4.663 0 6.995.843 8.804a9.001 9.001 0 0 0 4.353 4.353C17.005 51 19.336 51 24 51h12c4.663 0 6.995 0 8.804-.843a9.001 9.001 0 0 0 4.353-4.353C50 43.995 50 41.664 50 37c0-4.663 0-6.995-.843-8.804a9.001 9.001 0 0 0-4.353-4.353 7.076 7.076 0 0 0-1.597-.511c-1.372-.28-2.057-.42-2.423-.7a1.78 1.78 0 0 1-.583-.715C40 21.505 40 20.94 40 19.809V17c0-.929 0-1.393-.034-1.784a9 9 0 0 0-8.182-8.182C31.393 7 30.93 7 30 7s-1.393 0-1.784.034a9 9 0 0 0-8.182 8.182Z\"/><path fill=\"#E87DE8\" d=\"M22 17c0-.929 0-1.393.044-1.784a7 7 0 0 1 6.172-6.172C28.606 9 29.071 9 30 9s1.393 0 1.784.044a7 7 0 0 1 6.172 6.172c.044.39.044.855.044 1.784v4.5a1.5 1.5 0 0 1-3 0V17c0-.93 0-1.394-.077-1.78a4 4 0 0 0-3.143-3.143C31.394 12 30.93 12 30 12s-1.394 0-1.78.077a4 4 0 0 0-3.143 3.143C25 15.606 25 16.07 25 17v4.5a1.5 1.5 0 0 1-3 0V17Z\"/><path fill=\"#E87DE8\" fill-rule=\"evenodd\" d=\"M12 36.62c0-4.317 0-6.476.92-8.088a7 7 0 0 1 2.612-2.612c1.612-.92 3.77-.92 8.088-.92h6.855c.469 0 .703 0 .906.017 2.73.222 4.364 2.438 4.619 4.983.27-2.698 2.111-5 5.015-5A6.985 6.985 0 0 1 48 31.985v5.395c0 4.317 0 6.476-.92 8.088a7 7 0 0 1-2.612 2.612c-1.612.92-3.77.92-8.088.92h-5.855c-.469 0-.703 0-.906-.017-2.73-.222-4.364-2.438-4.619-4.983-.258 2.583-1.943 4.818-4.714 4.99-.155.01-.335.01-.694.01-.55 0-.825 0-1.057-.015a7 7 0 0 1-6.52-6.52C12 42.233 12 41.958 12 41.408V36.62Zm21.24-.273a4 4 0 1 0-6.478 0c.985 1.36 1.479 2.039 1.564 2.229.178.398.176.818.174 1.247V42.5a1.5 1.5 0 0 0 3 0v-2.677c-.002-.429-.004-.85.174-1.247.085-.19.579-.87 1.565-2.229Z\" clip-rule=\"evenodd\"/><rect class=\"help-img-highlight\" width=\"59\" height=\"59\" x=\".5\" y=\".5\" rx=\"2.5\"/></svg>`,HELP_COMPAS_IMG:b`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><rect width=\"60\" height=\"60\" fill=\"#1DC956\" rx=\"30\"/><circle cx=\"30\" cy=\"29.999\" r=\"3\" fill=\"#fff\"/><path fill=\"#2BEE6C\" stroke=\"#fff\" stroke-width=\"2\" d=\"m45.316 17.9-.88-.425.88.424a7.9 7.9 0 0 1 .026-.053c.093-.192.21-.432.26-.687l-.819-.162.819.162a2 2 0 0 0-.239-1.405c-.132-.224-.32-.412-.472-.562a8.415 8.415 0 0 1-.042-.042l-.042-.042c-.15-.151-.338-.34-.562-.472l-.508.862.508-.862a2 2 0 0 0-1.405-.239c-.255.05-.495.167-.687.26l-.053.026-15.05 7.246-.108.052c-1.131.545-1.843.887-2.456 1.374a6.994 6.994 0 0 0-1.13 1.13c-.487.613-.83 1.325-1.375 2.457l-.051.108-7.247 15.05-.025.053c-.094.192-.21.431-.26.686a2 2 0 0 0 .239 1.406l.855-.505-.856.505c.133.224.321.411.473.562l.042.042.041.042c.15.151.338.34.563.472a2 2 0 0 0 1.405.239l-.195-.981.195.98c.255-.05.494-.166.686-.26l.054-.025-.419-.87.419.87 15.05-7.247.107-.051c1.132-.545 1.844-.888 2.457-1.374a7.002 7.002 0 0 0 1.13-1.13c.487-.614.83-1.325 1.374-2.457l.052-.108 7.246-15.05Z\"/><path fill=\"#1DC956\" d=\"m33.376 32.723-2.669-3.43-14.85 14.849.206.205a1 1 0 0 0 1.141.194l15.105-7.273a3 3 0 0 0 1.067-4.545Z\"/><path fill=\"#86F999\" d=\"m26.624 27.276 2.669 3.43 14.85-14.849-.206-.205a1 1 0 0 0-1.141-.194L27.69 22.731a3 3 0 0 0-1.067 4.545Z\"/><circle cx=\"30\" cy=\"30\" r=\"3\" fill=\"#fff\" transform=\"rotate(45 30 30)\"/><rect class=\"help-img-highlight\" width=\"59\" height=\"59\" x=\".5\" y=\".5\" rx=\"29.5\"/></svg>`,HELP_NOUN_IMG:b`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><rect width=\"60\" height=\"60\" fill=\"#794CFF\" rx=\"3\"/><path fill=\"#987DE8\" stroke=\"#fff\" stroke-width=\"2\" d=\"M33 22.5v-1H16v5H8.5V36H13v-5h3v7.5h17V31h1v7.5h17v-17H34v5h-1v-4Z\"/><path fill=\"#fff\" d=\"M37.5 25h10v10h-10z\"/><path fill=\"#4019B2\" d=\"M42.5 25h5v10h-5z\"/><path fill=\"#fff\" d=\"M19.5 25h10v10h-10z\"/><path fill=\"#4019B2\" d=\"M24.5 25h5v10h-5z\"/><path fill=\"#fff\" d=\"M12 30.5h4V37h-4v-6.5Z\"/><rect class=\"help-img-highlight\" width=\"59\" height=\"59\" x=\".5\" y=\".5\" rx=\"2.5\"/></svg>`,HELP_DAO_IMG:b`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><g clip-path=\"url(#o)\"><path fill=\"#EB8B47\" d=\"M0 24.9c0-9.252 0-13.878 1.97-17.332A15 15 0 0 1 7.569 1.97C11.023 0 15.648 0 24.9 0h10.2c9.251 0 13.877 0 17.332 1.97a15 15 0 0 1 5.597 5.598C60 11.022 60 15.648 60 24.899v10.2c0 9.252 0 13.878-1.97 17.332a15.001 15.001 0 0 1-5.598 5.598c-3.455 1.97-8.08 1.97-17.332 1.97H24.9c-9.251 0-13.877 0-17.332-1.97a15 15 0 0 1-5.597-5.598C0 48.977 0 44.351 0 35.1V24.9Z\"/><path class=\"help-img-highlight\" d=\"M.5 24.9c0-4.635 0-8.078.244-10.795.244-2.71.726-4.65 1.66-6.29a14.5 14.5 0 0 1 5.412-5.41C9.455 1.468 11.395.986 14.105.743 16.822.5 20.265.5 24.9.5h10.2c4.635 0 8.078 0 10.795.244 2.71.243 4.65.725 6.29 1.66a14.5 14.5 0 0 1 5.41 5.411c.935 1.64 1.417 3.58 1.66 6.29.244 2.717.245 6.16.245 10.794v10.2c0 4.635 0 8.078-.244 10.796-.244 2.71-.726 4.65-1.66 6.289a14.5 14.5 0 0 1-5.412 5.41c-1.639.936-3.579 1.418-6.289 1.661-2.717.244-6.16.244-10.795.244H24.9c-4.635 0-8.078 0-10.795-.244-2.71-.243-4.65-.725-6.29-1.66a14.5 14.5 0 0 1-5.41-5.411c-.935-1.64-1.417-3.58-1.66-6.29C.5 43.178.5 39.734.5 35.1V24.9Z\"/><path fill=\"#FF974C\" stroke=\"#fff\" stroke-width=\"2\" d=\"M19 52c5.523 0 10-4.477 10-10s-4.477-10-10-10S9 36.477 9 42s4.477 10 10 10Z\"/><path fill=\"#fff\" fill-rule=\"evenodd\" d=\"M42.844 8.326a1 1 0 0 0-1.687 0L28.978 27.463A1 1 0 0 0 29.822 29h24.357a1 1 0 0 0 .843-1.537L42.844 8.326Z\" clip-rule=\"evenodd\"/><path fill=\"#FF974C\" fill-rule=\"evenodd\" d=\"M42.335 11.646c.324.115.571.504 1.066 1.28l7.332 11.523c.562.883.843 1.325.792 1.69a1 1 0 0 1-.342.623c-.28.238-.803.238-1.85.238H34.667c-1.047 0-1.57 0-1.85-.238a1 1 0 0 1-.342-.623c-.051-.365.23-.806.792-1.69l7.332-11.523c.495-.776.742-1.165 1.066-1.28a1 1 0 0 1 .67 0ZM35 27a7 7 0 0 0 7-7 7 7 0 0 0 7 7H35Z\" clip-rule=\"evenodd\"/><path fill=\"#FF974C\" stroke=\"#fff\" stroke-width=\"2\" d=\"M10.106 9.357c-.109.32-.107.682-.106.975V25.668c-.001.293-.003.654.106.975a2 2 0 0 0 1.251 1.25c.32.11.682.108.975.107H19c5.523 0 10-4.477 10-10S24.523 8 19 8h-6.668c-.293-.001-.654-.003-.975.106a2 2 0 0 0-1.25 1.251Z\"/><circle cx=\"19\" cy=\"18\" r=\"4\" fill=\"#EB8B47\" stroke=\"#fff\" stroke-width=\"2\"/><circle cx=\"19\" cy=\"41.999\" r=\"4\" fill=\"#EB8B47\" stroke=\"#fff\" stroke-width=\"2\"/></g><defs><clipPath id=\"o\"><path fill=\"#fff\" d=\"M0 0h60v60H0z\"/></clipPath></defs></svg>`,SEARCH_ICON:b`<svg width=\"20\" height=\"21\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.432 13.992c-.354-.353-.91-.382-1.35-.146a5.5 5.5 0 1 1 2.265-2.265c-.237.441-.208.997.145 1.35l3.296 3.296a.75.75 0 1 1-1.06 1.061l-3.296-3.296Zm.06-5a4 4 0 1 1-8 0 4 4 0 0 1 8 0Z\" fill=\"#949E9E\"/></svg>`,HELP_ICON:b`<svg width=\"11\" height=\"17\" viewBox=\"0 0 11 17\"><path fill=\"#fff\" d=\"M5.22 2.97c-1.07 0-2.25.843-2.25 2.25a.75.75 0 0 1-1.5 0c0-2.393 2.019-3.75 3.75-3.75 1.73 0 3.75 1.357 3.75 3.75 0 1.64-1.038 2.466-1.785 3.057-.802.635-1.215.984-1.215 1.693a.75.75 0 1 1-1.5 0c0-1.466.985-2.24 1.681-2.788l.103-.081C7.007 6.504 7.47 6.08 7.47 5.22c0-1.407-1.181-2.25-2.25-2.25ZM5.22 14.97a1.25 1.25 0 1 0 0-2.5 1.25 1.25 0 0 0 0 2.5Z\"/></svg>`,WALLET_ICON:b`<svg width=\"15\" height=\"14\" fill=\"none\" viewBox=\"0 0 15 14\"><path fill=\"#fff\" fill-rule=\"evenodd\" d=\"M.64 9.2v-3h.001c.009-1.857.07-2.886.525-3.682a4 4 0 0 1 1.492-1.493C3.58.5 4.813.5 7.28.5h3.735c.58 0 .871 0 1.114.04A3 3 0 0 1 14.6 3.011c.04.243.04.533.04 1.114 0 .58 0 .871-.04 1.114a3 3 0 0 1-2.471 2.47c-.243.041-.533.041-1.114.041h-.777c.178.307.302.648.362 1.011.04.243.04.533.04 1.114 0 .58 0 .871-.04 1.114a3 3 0 0 1-2.471 2.47c-.243.041-.533.041-1.114.041H4.507A3.867 3.867 0 0 1 .64 9.633V9.2ZM7.28 2h3.735c.64 0 .779.005.87.02a1.5 1.5 0 0 1 1.235 1.236c.015.09.02.229.02.869s-.005.779-.02.87a1.5 1.5 0 0 1-1.236 1.235c-.09.015-.229.02-.869.02H4.023c-.697 0-1.345.21-1.883.572V6.25h.001c.004-.791.015-1.383.059-1.867.056-.629.157-.926.269-1.122a2.5 2.5 0 0 1 .932-.933c.197-.111.494-.212 1.123-.268C5.173 2 6.019 2 7.28 2Zm-.265 5.75H4.023c-1.04 0-1.883.843-1.883 1.883A2.367 2.367 0 0 0 4.507 12h2.508c.64 0 .779-.005.87-.02a1.5 1.5 0 0 0 1.235-1.236c.015-.09.02-.229.02-.869s-.005-.779-.02-.87A1.5 1.5 0 0 0 7.884 7.77c-.09-.015-.228-.02-.869-.02Z\" clip-rule=\"evenodd\"/></svg>`,NETWORK_PLACEHOLDER:b`<svg width=\"28\" height=\"28\" fill=\"none\" viewBox=\"0 0 28 28\"><mask id=\"p\" width=\"26\" height=\"28\" x=\"1\" y=\"0\" maskUnits=\"userSpaceOnUse\" style=\"mask-type:alpha\"><path fill=\"#D9D9D9\" d=\"M12 1.172a4 4 0 0 1 4 0l8.124 4.69a4 4 0 0 1 2 3.465v9.381a4 4 0 0 1-2 3.464L16 26.862a4 4 0 0 1-4 0l-8.124-4.69a4 4 0 0 1-2-3.464V9.327a4 4 0 0 1 2-3.464L12 1.173Z\"/></mask><g mask=\"url(#p)\"><path id=\"network-placeholder-fill\" fill=\"#fff\" d=\"M0 0h28v28H0z\"/><path id=\"network-placeholder-dash\" stroke=\"#000\" stroke-dasharray=\"2 2\" d=\"m8.953 2.931 2.032-1.173.25.433 1.015-.586c.269-.155.553-.271.844-.35l-.13-.483a4.003 4.003 0 0 1 2.071 0l-.13.483c.293.079.576.195.845.35l1.016.586.25-.433 2.03 1.173-.25.433 2.032 1.173.25-.433 2.03 1.172-.25.433 1.016.587c.269.155.512.342.725.556l.354-.354a4.003 4.003 0 0 1 1.035 1.794l-.483.129c.078.292.12.596.12.906v1.172h.5v2.346h-.5v2.345h.5v2.345h-.5v1.173c0 .31-.042.614-.12.906l.483.13a4.003 4.003 0 0 1-1.035 1.793l-.354-.354a3.498 3.498 0 0 1-.725.556l-1.015.586.25.434-2.031 1.172-.25-.433-2.031 1.173.25.433-2.031 1.172-.25-.433-1.016.587a3.494 3.494 0 0 1-.844.35l.13.482a4.003 4.003 0 0 1-2.071 0l.13-.483a3.496 3.496 0 0 1-.845-.35l-1.015-.586-.25.433-2.032-1.172.25-.433-2.03-1.173-.25.433L4.89 22.76l.25-.434-1.015-.586a3.498 3.498 0 0 1-.725-.556l-.354.354a4.003 4.003 0 0 1-1.035-1.794l.483-.13a3.497 3.497 0 0 1-.12-.905v-1.173h-.5V15.19h.5v-2.345h-.5v-2.346h.5V9.327c0-.31.042-.614.12-.906l-.483-.13a4.003 4.003 0 0 1 1.035-1.793l.354.354c.213-.214.456-.401.725-.556l1.015-.587-.25-.433 2.031-1.172.25.433 2.031-1.173-.25-.433Z\"/><path fill=\"#798686\" stroke=\"#fff\" d=\"M14.243 13.563 14 13.428l-.243.135-6.388 3.549-.024.013c-.432.24-.79.44-1.053.622-.266.184-.516.405-.636.722a1.5 1.5 0 0 0 0 1.062c.12.317.37.538.636.722.263.183.62.382 1.053.622l.024.013 3.164 1.758.088.049c1.164.646 1.857 1.032 2.607 1.162.51.09 1.033.09 1.544 0 .75-.13 1.443-.516 2.606-1.162l.09-.05 3.163-1.757.024-.013c.432-.24.79-.44 1.053-.622.266-.184.516-.405.636-.722l-.468-.177.468.177a1.5 1.5 0 0 0 0-1.062l-.468.177.468-.177c-.12-.317-.37-.538-.636-.722-.263-.183-.62-.382-1.053-.622l-.024-.013-6.388-3.55Z\"/><path fill=\"#9EA9A9\" stroke=\"#fff\" d=\"M14.243 8.563 14 8.428l-.243.135-6.388 3.549-.024.013c-.432.24-.79.44-1.053.622-.266.184-.516.405-.636.722a1.5 1.5 0 0 0 0 1.062c.12.316.37.537.636.722.263.183.62.382 1.053.622l.024.013 3.164 1.758.088.049c1.164.646 1.857 1.032 2.607 1.162.51.09 1.033.09 1.544 0 .75-.13 1.443-.516 2.606-1.162l.09-.05 3.163-1.757.024-.013c.432-.24.79-.44 1.053-.622.266-.184.516-.405.636-.722l-.468-.177.468.177a1.5 1.5 0 0 0 0-1.062l-.468.177.468-.177c-.12-.316-.37-.537-.636-.722-.263-.183-.62-.382-1.053-.622l-.024-.013-6.388-3.55Z\"/><path fill=\"#C9CFCF\" stroke=\"#fff\" d=\"m22.344 9.53-.468-.176.468.177a1.5 1.5 0 0 0 0-1.062l-.468.177.468-.177c-.12-.317-.37-.537-.636-.722-.263-.183-.62-.382-1.053-.622l-.024-.013-3.163-1.758-.09-.05c-1.163-.645-1.856-1.03-2.606-1.161a4.5 4.5 0 0 0-1.544 0c-.75.13-1.443.516-2.607 1.162l-.088.05-3.164 1.757-.024.013c-.432.24-.79.44-1.053.622-.266.185-.516.405-.636.722a1.5 1.5 0 0 0 0 1.062c.12.317.37.537.636.722.263.183.62.382 1.053.622l.024.013 3.164 1.758.088.049c1.164.646 1.857 1.032 2.607 1.162.51.09 1.033.09 1.544 0 .75-.13 1.443-.516 2.606-1.162l.09-.05 3.163-1.757.024-.013c.432-.24.79-.44 1.053-.622.266-.184.516-.405.636-.722Z\"/></g></svg>`,WALLET_PLACEHOLDER:b`<svg width=\"60\" height=\"60\" fill=\"none\" viewBox=\"0 0 60 60\"><g clip-path=\"url(#q)\"><path id=\"wallet-placeholder-fill\" fill=\"#fff\" d=\"M0 24.9c0-9.251 0-13.877 1.97-17.332a15 15 0 0 1 5.598-5.597C11.023 0 15.648 0 24.9 0h10.2c9.252 0 13.877 0 17.332 1.97a15 15 0 0 1 5.597 5.598C60 11.023 60 15.648 60 24.9v10.2c0 9.252 0 13.877-1.97 17.332a15.001 15.001 0 0 1-5.598 5.597C48.977 60 44.352 60 35.1 60H24.9c-9.251 0-13.877 0-17.332-1.97a15 15 0 0 1-5.597-5.598C0 48.977 0 44.352 0 35.1V24.9Z\"/><path id=\"wallet-placeholder-dash\" stroke=\"#000\" stroke-dasharray=\"4 4\" stroke-width=\"1.5\" d=\"M.04 41.708a231.598 231.598 0 0 1-.039-4.403l.75-.001L.75 35.1v-2.55H0v-5.1h.75V24.9l.001-2.204h-.75c.003-1.617.011-3.077.039-4.404l.75.016c.034-1.65.099-3.08.218-4.343l-.746-.07c.158-1.678.412-3.083.82-4.316l.713.236c.224-.679.497-1.296.827-1.875a14.25 14.25 0 0 1 1.05-1.585L3.076 5.9A15 15 0 0 1 5.9 3.076l.455.596a14.25 14.25 0 0 1 1.585-1.05c.579-.33 1.196-.603 1.875-.827l-.236-.712C10.812.674 12.217.42 13.895.262l.07.746C15.23.89 16.66.824 18.308.79l-.016-.75C19.62.012 21.08.004 22.695.001l.001.75L24.9.75h2.55V0h5.1v.75h2.55l2.204.001v-.75c1.617.003 3.077.011 4.404.039l-.016.75c1.65.034 3.08.099 4.343.218l.07-.746c1.678.158 3.083.412 4.316.82l-.236.713c.679.224 1.296.497 1.875.827a14.24 14.24 0 0 1 1.585 1.05l.455-.596A14.999 14.999 0 0 1 56.924 5.9l-.596.455c.384.502.735 1.032 1.05 1.585.33.579.602 1.196.827 1.875l.712-.236c.409 1.233.663 2.638.822 4.316l-.747.07c.119 1.264.184 2.694.218 4.343l.75-.016c.028 1.327.036 2.787.039 4.403l-.75.001.001 2.204v2.55H60v5.1h-.75v2.55l-.001 2.204h.75a231.431 231.431 0 0 1-.039 4.404l-.75-.016c-.034 1.65-.099 3.08-.218 4.343l.747.07c-.159 1.678-.413 3.083-.822 4.316l-.712-.236a10.255 10.255 0 0 1-.827 1.875 14.242 14.242 0 0 1-1.05 1.585l.596.455a14.997 14.997 0 0 1-2.824 2.824l-.455-.596c-.502.384-1.032.735-1.585 1.05-.579.33-1.196.602-1.875.827l.236.712c-1.233.409-2.638.663-4.316.822l-.07-.747c-1.264.119-2.694.184-4.343.218l.016.75c-1.327.028-2.787.036-4.403.039l-.001-.75-2.204.001h-2.55V60h-5.1v-.75H24.9l-2.204-.001v.75a231.431 231.431 0 0 1-4.404-.039l.016-.75c-1.65-.034-3.08-.099-4.343-.218l-.07.747c-1.678-.159-3.083-.413-4.316-.822l.236-.712a10.258 10.258 0 0 1-1.875-.827 14.252 14.252 0 0 1-1.585-1.05l-.455.596A14.999 14.999 0 0 1 3.076 54.1l.596-.455a14.24 14.24 0 0 1-1.05-1.585 10.259 10.259 0 0 1-.827-1.875l-.712.236C.674 49.188.42 47.783.262 46.105l.746-.07C.89 44.77.824 43.34.79 41.692l-.75.016Z\"/><path fill=\"#fff\" fill-rule=\"evenodd\" d=\"M35.643 32.145c-.297-.743-.445-1.114-.401-1.275a.42.42 0 0 1 .182-.27c.134-.1.463-.1 1.123-.1.742 0 1.499.046 2.236-.05a6 6 0 0 0 5.166-5.166c.051-.39.051-.855.051-1.784 0-.928 0-1.393-.051-1.783a6 6 0 0 0-5.166-5.165c-.39-.052-.854-.052-1.783-.052h-7.72c-4.934 0-7.401 0-9.244 1.051a8 8 0 0 0-2.985 2.986C16.057 22.28 16.003 24.58 16 29 15.998 31.075 16 33.15 16 35.224A7.778 7.778 0 0 0 23.778 43H28.5c1.394 0 2.09 0 2.67-.116a6 6 0 0 0 4.715-4.714c.115-.58.115-1.301.115-2.744 0-1.31 0-1.964-.114-2.49a4.998 4.998 0 0 0-.243-.792Z\" clip-rule=\"evenodd\"/><path fill=\"#9EA9A9\" fill-rule=\"evenodd\" d=\"M37 18h-7.72c-2.494 0-4.266.002-5.647.126-1.361.122-2.197.354-2.854.728a6.5 6.5 0 0 0-2.425 2.426c-.375.657-.607 1.492-.729 2.853-.11 1.233-.123 2.777-.125 4.867 0 .7 0 1.05.097 1.181.096.13.182.181.343.2.163.02.518-.18 1.229-.581a6.195 6.195 0 0 1 3.053-.8H37c.977 0 1.32-.003 1.587-.038a4.5 4.5 0 0 0 3.874-3.874c.036-.268.039-.611.039-1.588 0-.976-.003-1.319-.038-1.587a4.5 4.5 0 0 0-3.875-3.874C38.32 18.004 37.977 18 37 18Zm-7.364 12.5h-7.414a4.722 4.722 0 0 0-4.722 4.723 6.278 6.278 0 0 0 6.278 6.278H28.5c1.466 0 1.98-.008 2.378-.087a4.5 4.5 0 0 0 3.535-3.536c.08-.397.087-.933.087-2.451 0-1.391-.009-1.843-.08-2.17a3.5 3.5 0 0 0-2.676-2.676c-.328-.072-.762-.08-2.108-.08Z\" clip-rule=\"evenodd\"/></g><defs><clipPath id=\"q\"><path fill=\"#fff\" d=\"M0 0h60v60H0z\"/></clipPath></defs></svg>`,TOKEN_PLACEHOLDER:b`<svg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" fill=\"none\"><rect id=\"token-placeholder-fill\" width=\"58\" height=\"58\" x=\"1\" y=\"1\" fill=\"#fff\" rx=\"29\"/><path fill=\"#3B4040\" stroke=\"#fff\" stroke-width=\"2\" d=\"M32 10a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v5.566c0 .357.192.685.495.875a16.001 16.001 0 0 1 4.256 3.894c.667.88.33 2.113-.627 2.665l-2.494 1.44c-.956.552-2.166.204-2.913-.609a9.12 9.12 0 1 0 .064 12.267c.739-.82 1.945-1.181 2.907-.64l2.509 1.415c.962.542 1.312 1.77.654 2.658a16 16 0 0 1-4.356 4.028c-.303.19-.495.518-.495.875V50a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2v-2.992c0-.602-.528-1.065-1.13-1.032-.579.032-1.16.032-1.74 0-.602-.032-1.13.43-1.13 1.032V50a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2v-5.566c0-.357-.192-.685-.495-.875a16 16 0 0 1 0-27.118c.303-.19.495-.517.495-.875V10a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2.992c0 .601.528 1.064 1.13 1.032.58-.032 1.161-.032 1.74 0 .602.033 1.13-.43 1.13-1.032V10Z\"/><rect id=\"token-placeholder-dash\" width=\"58\" height=\"58\" x=\"1\" y=\"1\" stroke=\"#000\" stroke-dasharray=\"6 6\" stroke-width=\"2\" rx=\"29\"/></svg>`,ACCOUNT_COPY:b`<svg width=\"14\" height=\"14\" fill=\"none\" viewBox=\"0 0 14 14\"><path fill=\"#fff\" fill-rule=\"evenodd\" d=\"M4.003 4.005c.012-1.225.074-1.936.391-2.491a3 3 0 0 1 1.12-1.12C6.204 0 7.136 0 9 0s2.795 0 3.486.394a3 3 0 0 1 1.12 1.12C14 2.204 14 3.136 14 5s0 2.795-.394 3.486a3 3 0 0 1-1.12 1.12c-.555.317-1.266.379-2.491.391l.002.003c-.012 1.222-.075 1.932-.391 2.486a3 3 0 0 1-1.12 1.12C7.796 14 6.864 14 5 14s-2.795 0-3.486-.394a3 3 0 0 1-1.12-1.12C0 11.796 0 10.864 0 9s0-2.795.394-3.486a3 3 0 0 1 1.12-1.12c.554-.316 1.264-.379 2.486-.391l.003.002ZM9 8.5c-.959 0-1.58-.001-2.05-.043-.45-.04-.613-.109-.693-.154a1.5 1.5 0 0 1-.56-.56c-.045-.08-.113-.243-.154-.693C5.501 6.58 5.5 5.959 5.5 5c0-.959.001-1.58.043-2.05.04-.45.109-.613.154-.693a1.5 1.5 0 0 1 .56-.56c.08-.045.243-.113.693-.154C7.42 1.501 8.041 1.5 9 1.5c.959 0 1.58.001 2.05.043.45.04.613.109.693.154a1.5 1.5 0 0 1 .56.56c.045.08.113.243.154.693.042.47.043 1.091.043 2.05 0 .959-.001 1.58-.043 2.05-.04.45-.109.613-.154.693a1.5 1.5 0 0 1-.56.56c-.08.045-.242.113-.693.154-.47.042-1.091.043-2.05.043ZM4 5.503a13.77 13.77 0 0 0-1.05.04c-.45.04-.613.109-.693.154a1.5 1.5 0 0 0-.56.56c-.045.08-.113.243-.154.693C1.501 7.42 1.5 8.041 1.5 9c0 .959.001 1.58.043 2.05.04.45.109.613.154.693a1.5 1.5 0 0 0 .56.56c.08.045.243.113.693.154.47.042 1.091.043 2.05.043.959 0 1.58-.001 2.05-.043.45-.04.613-.109.693-.154a1.5 1.5 0 0 0 .56-.56c.045-.08.113-.242.154-.693.025-.283.035-.619.04-1.05-1.534-.003-2.358-.037-2.983-.394a3 3 0 0 1-1.12-1.12c-.357-.625-.39-1.449-.394-2.983Z\" clip-rule=\"evenodd\"/></svg>`,ACCOUNT_DISCONNECT:b`<svg width=\"16\" height=\"14\" fill=\"none\" viewBox=\"0 0 16 14\"><path fill=\"#fff\" d=\"M9.677 1.5h-2.61c-1.261 0-2.107.001-2.757.06-.629.056-.926.157-1.122.268a2.5 2.5 0 0 0-.933.933c-.112.196-.212.493-.269 1.122-.058.65-.06 1.496-.06 2.757v.72c0 1.26.002 2.107.06 2.756.057.63.157.927.27 1.123a2.5 2.5 0 0 0 .932.933c.196.111.493.212 1.122.268.65.059 1.496.06 2.757.06h2.61a.75.75 0 1 1 0 1.5h-2.61c-2.467 0-3.7 0-4.622-.525a4 4 0 0 1-1.493-1.493C.427 11.06.427 9.827.427 7.36v-.72c0-2.467 0-3.7.525-4.622A4 4 0 0 1 2.445.525C3.366 0 4.6 0 7.067 0h2.61a.75.75 0 1 1 0 1.5Z\"/><path fill=\"#fff\" d=\"M10.896 11.03a.75.75 0 0 1 0-1.06l1.793-1.793a.25.25 0 0 0-.176-.427H8.177a.75.75 0 0 1 0-1.5h4.336a.25.25 0 0 0 .176-.427L10.896 4.03a.75.75 0 0 1 1.061-1.06l3.323 3.323a1 1 0 0 1 0 1.414l-3.323 3.323a.75.75 0 0 1-1.06 0Z\"/></svg>`},Ft=u`.w3m-custom-placeholder{inset:0;width:100%;position:absolute;display:block;pointer-events:none;height:100px;border-radius:calc(var(--w3m-background-border-radius) * .9)}.w3m-custom-placeholder{background-color:var(--w3m-background-color);background-image:var(--w3m-background-image-url);background-position:center;background-size:cover}.w3m-toolbar{height:38px;display:flex;position:relative;margin:5px 15px 5px 5px;justify-content:space-between;align-items:center}.w3m-toolbar img,.w3m-toolbar svg{height:28px;object-position:left center;object-fit:contain}#w3m-wc-logo path{fill:var(--w3m-accent-fill-color)}.w3m-action-btn{width:28px;height:28px;border-radius:var(--w3m-icon-button-border-radius);border:0;display:flex;justify-content:center;align-items:center;cursor:pointer;transition:background-color,.2s ease;background-color:var(--w3m-color-bg-1);box-shadow:0 0 0 1px var(--w3m-color-overlay)}.w3m-action-btn:hover{background-color:var(--w3m-color-bg-2)}.w3m-action-btn svg{display:block;object-position:center}.w3m-action-btn path{fill:var(--w3m-color-fg-1)}.w3m-actions{display:flex}.w3m-actions button:first-child{margin-right:16px}.w3m-help-active button:first-child{background-color:var(--w3m-color-fg-1)}.w3m-help-active button:first-child path{fill:var(--w3m-color-bg-1)}`;var Kt=Object.defineProperty,qt=Object.getOwnPropertyDescriptor,ut=(e,t,o,r)=>{for(var a=r>1?void 0:r?qt(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Kt(t,o,a),a};let Ie=class extends c{constructor(){super(),this.isHelp=!1,this.unsubscribeRouter=void 0,this.unsubscribeRouter=x.subscribe(e=>{this.isHelp=e.view===\"Help\"})}disconnectedCallback(){var e;(e=this.unsubscribeRouter)==null||e.call(this)}onHelp(){x.push(\"Help\")}logoTemplate(){var e;const t=(e=ne.state.themeVariables)==null?void 0:e[\"--w3m-logo-image-url\"];return t?i`<img src=\"${t}\">`:p.WALLET_CONNECT_LOGO}render(){const e={\"w3m-actions\":!0,\"w3m-help-active\":this.isHelp};return i`<div class=\"w3m-custom-placeholder\"></div><div class=\"w3m-toolbar\">${this.logoTemplate()}<div class=\"${D(e)}\"><button class=\"w3m-action-btn\" @click=\"${this.onHelp}\">${p.HELP_ICON}</button> <button class=\"w3m-action-btn\" @click=\"${T.close}\">${p.CROSS_ICON}</button></div></div>`}};Ie.styles=[m.globalCss,Ft],ut([y()],Ie.prototype,\"isHelp\",2),Ie=ut([d(\"w3m-modal-backcard\")],Ie);const Qt=u`main{padding:20px;padding-top:0;width:100%}`;var Yt=Object.defineProperty,Xt=Object.getOwnPropertyDescriptor,Jt=(e,t,o,r)=>{for(var a=r>1?void 0:r?Xt(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Yt(t,o,a),a};let He=class extends c{render(){return i`<main><slot></slot></main>`}};He.styles=[m.globalCss,Qt],He=Jt([d(\"w3m-modal-content\")],He);const ea=u`footer{padding:10px;display:flex;flex-direction:column;align-items:inherit;justify-content:inherit;border-top:1px solid var(--w3m-color-bg-2)}`;var ta=Object.defineProperty,aa=Object.getOwnPropertyDescriptor,oa=(e,t,o,r)=>{for(var a=r>1?void 0:r?aa(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&ta(t,o,a),a};let Se=class extends c{render(){return i`<footer><slot></slot></footer>`}};Se.styles=[m.globalCss,ea],Se=oa([d(\"w3m-modal-footer\")],Se);const ra=u`header{display:flex;justify-content:center;align-items:center;padding:20px;position:relative}.w3m-border{border-bottom:1px solid var(--w3m-color-bg-2);margin-bottom:20px}header button{padding:15px 20px;transition:opacity .2s ease}@media(hover:hover){header button:hover{opacity:.5}}.w3m-back-btn{position:absolute;left:0}.w3m-action-btn{position:absolute;right:0}path{fill:var(--w3m-accent-color)}`;var la=Object.defineProperty,na=Object.getOwnPropertyDescriptor,me=(e,t,o,r)=>{for(var a=r>1?void 0:r?na(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&la(t,o,a),a};let F=class extends c{constructor(){super(...arguments),this.title=\"\",this.onAction=void 0,this.actionIcon=void 0,this.border=!1}backBtnTemplate(){return i`<button class=\"w3m-back-btn\" @click=\"${x.goBack}\">${p.BACK_ICON}</button>`}actionBtnTemplate(){return i`<button class=\"w3m-action-btn\" @click=\"${this.onAction}\">${this.actionIcon}</button>`}render(){const e={\"w3m-border\":this.border},t=x.state.history.length>1,o=this.title?i`<w3m-text variant=\"big-bold\">${this.title}</w3m-text>`:i`<slot></slot>`;return i`<header class=\"${D(e)}\">${t?this.backBtnTemplate():null} ${o} ${this.onAction?this.actionBtnTemplate():null}</header>`}};F.styles=[m.globalCss,ra],me([h()],F.prototype,\"title\",2),me([h()],F.prototype,\"onAction\",2),me([h()],F.prototype,\"actionIcon\",2),me([h()],F.prototype,\"border\",2),F=me([d(\"w3m-modal-header\")],F);const ia={1:\"692ed6ba-e569-459a-556a-776476829e00\",42161:\"600a9a04-c1b9-42ca-6785-9b4b6ff85200\",43114:\"30c46e53-e989-45fb-4549-be3bd4eb3b00\",56:\"93564157-2e8e-4ce7-81df-b264dbee9b00\",250:\"06b26297-fe0c-4733-5d6b-ffa5498aac00\",10:\"ab9c186a-c52f-464b-2906-ca59d760a400\",137:\"41d04d42-da3b-4453-8506-668cc0727900\",100:\"02b53f6a-e3d4-479e-1cb4-21178987d100\",9001:\"f926ff41-260d-4028-635e-91913fc28e00\",324:\"b310f07f-4ef7-49f3-7073-2a0a39685800\",314:\"5a73b3dd-af74-424e-cae0-0de859ee9400\",4689:\"34e68754-e536-40da-c153-6ef2e7188a00\",1088:\"3897a66d-40b9-4833-162f-a2c90531c900\",1284:\"161038da-44ae-4ec7-1208-0ea569454b00\",1285:\"f1d73bb6-5450-4e18-38f7-fb6484264a00\"};var ie=(e=>(e.metaMask=\"metaMask\",e.trust=\"trust\",e.phantom=\"phantom\",e.brave=\"brave\",e.spotEthWallet=\"spotEthWallet\",e.exodus=\"exodus\",e.tokenPocket=\"tokenPocket\",e.frame=\"frame\",e.tally=\"tally\",e.coinbaseWallet=\"coinbaseWallet\",e.core=\"core\",e.bitkeep=\"bitkeep\",e.mathWallet=\"mathWallet\",e.opera=\"opera\",e.tokenary=\"tokenary\",e[\"1inch\"]=\"1inch\",e.kuCoinWallet=\"kuCoinWallet\",e.ledger=\"ledger\",e))(ie||{});const J={injectedPreset:{metaMask:{name:\"MetaMask\",icon:\"619537c0-2ff3-4c78-9ed8-a05e7567f300\",url:\"https://metamask.io\",isMobile:!0,isInjected:!0},trust:{name:\"Trust\",icon:\"0528ee7e-16d1-4089-21e3-bbfb41933100\",url:\"https://trustwallet.com\",isMobile:!0,isInjected:!0},spotEthWallet:{name:\"Spot\",icon:\"1bf33a89-b049-4a1c-d1f6-4dd7419ee400\",url:\"https://www.spot-wallet.com\",isMobile:!0,isInjected:!0},phantom:{name:\"Phantom\",icon:\"62471a22-33cb-4e65-5b54-c3d9ea24b900\",url:\"https://phantom.app\",isInjected:!0},core:{name:\"Core\",icon:\"35f9c46e-cc57-4aa7-315d-e6ccb2a1d600\",url:\"https://core.app\",isMobile:!0,isInjected:!0},bitkeep:{name:\"BitKeep\",icon:\"3f7075d0-4ab7-4db5-404d-3e4c05e6fe00\",url:\"https://bitkeep.com\",isMobile:!0,isInjected:!0},tokenPocket:{name:\"TokenPocket\",icon:\"f3119826-4ef5-4d31-4789-d4ae5c18e400\",url:\"https://www.tokenpocket.pro\",isMobile:!0,isInjected:!0},mathWallet:{name:\"MathWallet\",icon:\"26a8f588-3231-4411-60ce-5bb6b805a700\",url:\"https://mathwallet.org\",isMobile:!0,isInjected:!0},exodus:{name:\"Exodus\",icon:\"4c16cad4-cac9-4643-6726-c696efaf5200\",url:\"https://www.exodus.com\",isMobile:!0,isDesktop:!0,isInjected:!0},kuCoinWallet:{name:\"KuCoin Wallet\",icon:\"1e47340b-8fd7-4ad6-17e7-b2bd651fae00\",url:\"https://kuwallet.com\",isMobile:!0,isInjected:!0},ledger:{name:\"Ledger\",icon:\"a7f416de-aa03-4c5e-3280-ab49269aef00\",url:\"https://www.ledger.com\",isDesktop:!0},brave:{name:\"Brave\",icon:\"125e828e-9936-4451-a8f2-949c119b7400\",url:\"https://brave.com/wallet\",isInjected:!0},frame:{name:\"Frame\",icon:\"cd492418-ea85-4ef1-aeed-1c9e20b58900\",url:\"https://frame.sh\",isInjected:!0},tally:{name:\"Tally\",icon:\"98d2620c-9fc8-4a1c-31bc-78d59d00a300\",url:\"https://tallyho.org\",isInjected:!0},coinbaseWallet:{name:\"Coinbase\",icon:\"f8068a7f-83d7-4190-1f94-78154a12c600\",url:\"https://www.coinbase.com/wallet\",isInjected:!0},opera:{name:\"Opera\",icon:\"877fa1a4-304d-4d45-ca8e-f76d1a556f00\",url:\"https://www.opera.com/crypto\",isInjected:!0},tokenary:{name:\"Tokenary\",icon:\"5e481041-dc3c-4a81-373a-76bbde91b800\",url:\"https://tokenary.io\",isDesktop:!0,isInjected:!0},[\"1inch\"]:{name:\"1inch Wallet\",icon:\"dce1ee99-403f-44a9-9f94-20de30616500\",url:\"https://1inch.io/wallet\",isMobile:!0}},getInjectedId(e){if(e.toUpperCase()!==\"INJECTED\"&&e.length)return e;const{ethereum:t,spotEthWallet:o,coinbaseWalletExtension:r}=window;return t?t.isTrust||t.isTrustWallet?\"trust\":t.isPhantom?\"phantom\":t.isBraveWallet?\"brave\":o?\"spotEthWallet\":t.isExodus?\"exodus\":t.isTokenPocket?\"tokenPocket\":t.isFrame?\"frame\":t.isTally?\"tally\":r?\"coinbaseWallet\":t.isAvalanche?\"core\":t.isBitKeep?\"bitkeep\":t.isMathWallet?\"mathWallet\":t.isOpera?\"opera\":t.isTokenary?\"tokenary\":t.isOneInchIOSWallet||t.isOneInchAndroidWallet?\"1inch\":t.isKuCoinWallet?\"kuCoinWallet\":t.isMetaMask?\"metaMask\":\"injected\":\"metaMask\"},getInjectedName(e){var t,o;if(e.length&&e.toUpperCase()!==\"INJECTED\")return e;const r=J.getInjectedId(\"\");return(o=(t=J.injectedPreset[r])==null?void 0:t.name)!=null?o:\"Injected\"}},sa={ETH:{icon:\"692ed6ba-e569-459a-556a-776476829e00\"},WETH:{icon:\"692ed6ba-e569-459a-556a-776476829e00\"},AVAX:{icon:\"30c46e53-e989-45fb-4549-be3bd4eb3b00\"},FTM:{icon:\"06b26297-fe0c-4733-5d6b-ffa5498aac00\"},BNB:{icon:\"93564157-2e8e-4ce7-81df-b264dbee9b00\"},MATIC:{icon:\"41d04d42-da3b-4453-8506-668cc0727900\"},OP:{icon:\"ab9c186a-c52f-464b-2906-ca59d760a400\"},xDAI:{icon:\"02b53f6a-e3d4-479e-1cb4-21178987d100\"},EVMOS:{icon:\"f926ff41-260d-4028-635e-91913fc28e00\"},METIS:{icon:\"3897a66d-40b9-4833-162f-a2c90531c900\"},IOTX:{icon:\"34e68754-e536-40da-c153-6ef2e7188a00\"}};var ca=Object.defineProperty,gt=Object.getOwnPropertySymbols,da=Object.prototype.hasOwnProperty,ma=Object.prototype.propertyIsEnumerable,vt=(e,t,o)=>t in e?ca(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,ha=(e,t)=>{for(var o in t||(t={}))da.call(t,o)&&vt(e,o,t[o]);if(gt)for(var o of gt(t))ma.call(t,o)&&vt(e,o,t[o]);return e};const s={MOBILE_BREAKPOINT:600,W3M_RECENT_WALLET:\"W3M_RECENT_WALLET\",EXPLORER_WALLET_URL:\"https://explorer.walletconnect.com/?type=wallet\",rejectStandaloneButtonComponent(){const{isStandalone:e}=v.state;if(e)throw new Error(\"Web3Modal button components are not available in standalone mode.\")},getShadowRootElement(e,t){const o=e.renderRoot.querySelector(t);if(!o)throw new Error(`${t} not found`);return o},getWalletId(e){return J.getInjectedId(e)},getWalletIcon(e){var t,o;const r=(t=J.injectedPreset[e])==null?void 0:t.icon,{projectId:a,walletImages:n}=j.state;return(o=n?.[e])!=null?o:a&&r?E.getImageUrl(r):\"\"},getWalletName(e,t=!1){const o=J.getInjectedName(e);return t?o.split(\" \")[0]:o},getChainIcon(e){var t;const o=ia[e],{projectId:r,chainImages:a}=j.state;return(t=a?.[e])!=null?t:r&&o?E.getImageUrl(o):\"\"},getTokenIcon(e){var t,o;const r=(t=sa[e])==null?void 0:t.icon,{projectId:a,tokenImages:n}=j.state;return(o=n?.[e])!=null?o:a&&r?E.getImageUrl(r):\"\"},isMobileAnimation(){return window.innerWidth<=s.MOBILE_BREAKPOINT},async preloadImage(e){const t=new Promise((o,r)=>{const a=new Image;a.onload=o,a.onerror=r,a.src=e});return Promise.race([t,f.wait(3e3)])},getErrorMessage(e){return e instanceof Error?e.message:\"Unknown Error\"},debounce(e,t=500){let o;return(...r)=>{function a(){e(...r)}o&&clearTimeout(o),o=setTimeout(a,t)}},async handleMobileLinking(e){f.removeWalletConnectDeepLink();const{standaloneUri:t,selectedChain:o}=v.state,{links:r,name:a}=e;function n(l){let w=\"\";r!=null&&r.universal?w=f.formatUniversalUrl(r.universal,l,a):r!=null&&r.native&&(w=f.formatNativeUrl(r.native,l,a)),f.openHref(w,\"_self\")}t?(s.setRecentWallet(e),n(t)):(await P.client().connectWalletConnect(l=>{n(l)},o?.id),s.setRecentWallet(e),T.close())},async handleAndroidLinking(){f.removeWalletConnectDeepLink();const{standaloneUri:e,selectedChain:t}=v.state;e?f.openHref(e,\"_self\"):(await P.client().connectWalletConnect(o=>{f.setWalletConnectAndroidDeepLink(o),f.openHref(o,\"_self\")},t?.id),T.close())},async handleUriCopy(){const{standaloneUri:e}=v.state;if(e)await navigator.clipboard.writeText(e);else{const t=P.client().walletConnectUri;await navigator.clipboard.writeText(t)}A.openToast(\"Link copied\",\"success\")},async handleConnectorConnection(e,t){try{const{selectedChain:o}=v.state;await P.client().connectConnector(e,o?.id),T.close()}catch(o){console.error(o),t?t():A.openToast(s.getErrorMessage(o),\"error\")}},getCustomWallets(){var e;const{desktopWallets:t,mobileWallets:o}=j.state;return(e=f.isMobile()?o:t)!=null?e:[]},getCustomImageUrls(){const{chainImages:e,walletImages:t}=j.state,o=Object.values(e??{}),r=Object.values(t??{});return Object.values([...o,...r])},getConnectorImageUrls(){return P.client().getConnectors().map(({id:e})=>J.getInjectedId(e)).map(e=>s.getWalletIcon(e))},truncate(e,t=8){return e.length<=t?e:`${e.substring(0,4)}...${e.substring(e.length-4)}`},generateAvatarColors(e){var t;const o=(t=e.match(/.{1,7}/g))==null?void 0:t.splice(0,5),r=[];o?.forEach(n=>{let l=0;for(let g=0;g<n.length;g+=1)l=n.charCodeAt(g)+((l<<5)-l),l=l&l;const w=[0,0,0];for(let g=0;g<3;g+=1){const I=l>>g*8&255;w[g]=I}r.push(`rgb(${w[0]}, ${w[1]}, ${w[2]})`)});const a=document.querySelector(\":root\");if(a){const n={\"--w3m-color-av-1\":r[0],\"--w3m-color-av-2\":r[1],\"--w3m-color-av-3\":r[2],\"--w3m-color-av-4\":r[3],\"--w3m-color-av-5\":r[4]};Object.entries(n).forEach(([l,w])=>a.style.setProperty(l,w))}},setRecentWallet(e){const{walletConnectVersion:t}=v.state;localStorage.setItem(s.W3M_RECENT_WALLET,JSON.stringify({[t]:e}))},getRecentWallet(){const e=localStorage.getItem(s.W3M_RECENT_WALLET);if(e){const{walletConnectVersion:t}=v.state,o=JSON.parse(e);if(o[t])return o[t]}},getExtensionWallets(){const e=[];for(const[t,o]of Object.entries(J.injectedPreset))o!=null&&o.isInjected&&!o.isDesktop&&e.push(ha({id:t},o));return e},caseSafeIncludes(e,t){return e.toUpperCase().includes(t.toUpperCase())},openWalletExplorerUrl(){f.openHref(s.EXPLORER_WALLET_URL,\"_blank\")}},wa=u`.w3m-router{overflow:hidden;will-change:transform}.w3m-content{display:flex;flex-direction:column}`;var pa=Object.defineProperty,ua=Object.getOwnPropertyDescriptor,Be=(e,t,o,r)=>{for(var a=r>1?void 0:r?ua(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&pa(t,o,a),a};let he=class extends c{constructor(){super(),this.view=x.state.view,this.prevView=x.state.view,this.unsubscribe=void 0,this.oldHeight=\"0px\",this.resizeObserver=void 0,this.unsubscribe=x.subscribe(e=>{this.view!==e.view&&this.onChangeRoute()})}firstUpdated(){this.resizeObserver=new ResizeObserver(([e])=>{const t=`${e.contentRect.height}px`;this.oldHeight!==\"0px\"&&(U(this.routerEl,{height:[this.oldHeight,t]},{duration:.2}),U(this.routerEl,{opacity:[0,1],scale:[.99,1]},{duration:.37,delay:.03})),this.oldHeight=t}),this.resizeObserver.observe(this.contentEl)}disconnectedCallback(){var e,t;(e=this.unsubscribe)==null||e.call(this),(t=this.resizeObserver)==null||t.disconnect()}get routerEl(){return s.getShadowRootElement(this,\".w3m-router\")}get contentEl(){return s.getShadowRootElement(this,\".w3m-content\")}viewTemplate(){switch(this.view){case\"ConnectWallet\":return i`<w3m-connect-wallet-view></w3m-connect-wallet-view>`;case\"SelectNetwork\":return i`<w3m-select-network-view></w3m-select-network-view>`;case\"InjectedConnector\":return i`<w3m-injected-connector-view></w3m-injected-connector-view>`;case\"InstallConnector\":return i`<w3m-install-connector-view></w3m-install-connector-view>`;case\"GetWallet\":return i`<w3m-get-wallet-view></w3m-get-wallet-view>`;case\"DesktopConnector\":return i`<w3m-desktop-connector-view></w3m-desktop-connector-view>`;case\"WalletExplorer\":return i`<w3m-wallet-explorer-view></w3m-wallet-explorer-view>`;case\"Qrcode\":return i`<w3m-qrcode-view></w3m-qrcode-view>`;case\"Help\":return i`<w3m-help-view></w3m-help-view>`;case\"Account\":return i`<w3m-account-view></w3m-account-view>`;case\"SwitchNetwork\":return i`<w3m-switch-network-view></w3m-switch-network-view>`;case\"Connectors\":return i`<w3m-connectors-view></w3m-connectors-view>`;default:return i`<div>Not Found</div>`}}async onChangeRoute(){await U(this.routerEl,{opacity:[1,0],scale:[1,1.02]},{duration:.15}).finished,this.view=x.state.view}render(){return i`<div class=\"w3m-router\"><div class=\"w3m-content\">${this.viewTemplate()}</div></div>`}};he.styles=[m.globalCss,wa],Be([y()],he.prototype,\"view\",2),Be([y()],he.prototype,\"prevView\",2),he=Be([d(\"w3m-modal-router\")],he);const ga=u`div{height:36px;width:max-content;display:flex;justify-content:center;align-items:center;padding:10px 15px;position:absolute;top:12px;box-shadow:0 6px 14px -6px rgba(10,16,31,.3),0 10px 32px -4px rgba(10,16,31,.15);z-index:2;left:50%;transform:translateX(-50%);pointer-events:none;backdrop-filter:blur(20px) saturate(1.8);-webkit-backdrop-filter:blur(20px) saturate(1.8);border-radius:var(--w3m-notification-border-radius);border:1px solid var(--w3m-color-overlay);background-color:var(--w3m-color-overlay)}svg{margin-right:5px}@-moz-document url-prefix(){div{background-color:var(--w3m-color-bg-3)}}.w3m-success path{fill:var(--w3m-accent-color)}.w3m-error path{fill:var(--w3m-error-color)}`;var va=Object.defineProperty,ba=Object.getOwnPropertyDescriptor,bt=(e,t,o,r)=>{for(var a=r>1?void 0:r?ba(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&va(t,o,a),a};let We=class extends c{constructor(){super(),this.open=!1,this.unsubscribe=void 0,this.timeout=void 0,this.unsubscribe=A.subscribe(e=>{e.open?(this.open=!0,this.timeout=setTimeout(()=>A.closeToast(),2200)):(this.open=!1,clearTimeout(this.timeout))})}disconnectedCallback(){var e;(e=this.unsubscribe)==null||e.call(this),clearTimeout(this.timeout),A.closeToast()}render(){const{message:e,variant:t}=A.state,o={\"w3m-success\":t===\"success\",\"w3m-error\":t===\"error\"};return this.open?i`<div class=\"${D(o)}\">${t===\"success\"?p.CHECKMARK_ICON:null} ${t===\"error\"?p.CROSS_ICON:null}<w3m-text variant=\"small-regular\">${e}</w3m-text></div>`:null}};We.styles=[m.globalCss,ga],bt([y()],We.prototype,\"open\",2),We=bt([d(\"w3m-modal-toast\")],We);const fa=u`button{padding:5px;border-radius:var(--w3m-button-hover-highlight-border-radius);transition:all .2s ease;display:flex;flex-direction:column;align-items:center;justify-content:center;width:80px;height:90px}w3m-network-image{width:54px;height:59px}w3m-text{width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;text-align:center;margin-top:5px}button:hover{background-color:var(--w3m-color-overlay)}`;var xa=Object.defineProperty,ya=Object.getOwnPropertyDescriptor,Me=(e,t,o,r)=>{for(var a=r>1?void 0:r?ya(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&xa(t,o,a),a};let ae=class extends c{constructor(){super(...arguments),this.onClick=()=>null,this.name=\"\",this.chainId=\"\"}render(){return i`<button @click=\"${this.onClick}\"><w3m-network-image chainId=\"${this.chainId}\"></w3m-network-image><w3m-text variant=\"xsmall-regular\">${this.name}</w3m-text></button>`}};ae.styles=[m.globalCss,fa],Me([h()],ae.prototype,\"onClick\",2),Me([h()],ae.prototype,\"name\",2),Me([h()],ae.prototype,\"chainId\",2),ae=Me([d(\"w3m-network-button\")],ae);const Ca=u`div{width:inherit;height:inherit}.polygon-stroke{stroke:var(--w3m-color-overlay)}svg{width:100%;height:100%;margin:0}#network-placeholder-fill{fill:var(--w3m-color-bg-3)}#network-placeholder-dash{stroke:var(--w3m-color-overlay)}`;var ka=Object.defineProperty,$a=Object.getOwnPropertyDescriptor,ft=(e,t,o,r)=>{for(var a=r>1?void 0:r?$a(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&ka(t,o,a),a};let Ee=class extends c{constructor(){super(...arguments),this.chainId=\"\"}render(){const e=s.getChainIcon(this.chainId);return e?i`<div><svg width=\"54\" height=\"59\" viewBox=\"0 0 54 59\" fill=\"none\"><defs><clipPath id=\"polygon\"><path d=\"M17.033 4.964c3.852-2.262 5.778-3.393 7.84-3.77a11.807 11.807 0 0 1 4.254 0c2.062.377 3.988 1.508 7.84 3.77l6.066 3.562c3.852 2.263 5.777 3.394 7.13 5.022a12.268 12.268 0 0 1 2.127 3.747c.71 2.006.71 4.268.71 8.793v7.124c0 4.525 0 6.787-.71 8.793a12.268 12.268 0 0 1-2.126 3.747c-1.354 1.628-3.28 2.76-7.131 5.022l-6.066 3.562c-3.852 2.262-5.778 3.393-7.84 3.771a11.814 11.814 0 0 1-4.254 0c-2.062-.378-3.988-1.509-7.84-3.77l-6.066-3.563c-3.852-2.263-5.778-3.394-7.13-5.022a12.268 12.268 0 0 1-2.127-3.747C1 40 1 37.737 1 33.212v-7.124c0-4.525 0-6.787.71-8.793a12.268 12.268 0 0 1 2.127-3.747c1.352-1.628 3.278-2.76 7.13-5.022l6.066-3.562Z\"/></clipPath></defs><image clip-path=\"url(#polygon)\" href=\"${e}\" width=\"58\" height=\"59\" x=\"-2\" y=\"0\"/><path class=\"polygon-stroke\" d=\"M17.22 5.295c3.877-2.277 5.737-3.363 7.72-3.726a11.44 11.44 0 0 1 4.12 0c1.983.363 3.844 1.45 7.72 3.726l6.065 3.562c3.876 2.276 5.731 3.372 7.032 4.938a11.896 11.896 0 0 1 2.06 3.63c.683 1.928.688 4.11.688 8.663v7.124c0 4.553-.005 6.735-.688 8.664a11.896 11.896 0 0 1-2.06 3.63c-1.3 1.565-3.156 2.66-7.032 4.937l-6.065 3.563c-3.877 2.276-5.737 3.362-7.72 3.725a11.46 11.46 0 0 1-4.12 0c-1.983-.363-3.844-1.449-7.72-3.726l-6.065-3.562c-3.876-2.276-5.731-3.372-7.032-4.938a11.885 11.885 0 0 1-2.06-3.63c-.682-1.928-.688-4.11-.688-8.663v-7.124c0-4.553.006-6.735.688-8.664a11.885 11.885 0 0 1 2.06-3.63c1.3-1.565 3.156-2.66 7.032-4.937l6.065-3.562Z\" stroke=\"#fff\"/></svg></div>`:i`${p.NETWORK_PLACEHOLDER}`}};Ee.styles=[m.globalCss,Ca],ft([h()],Ee.prototype,\"chainId\",2),Ee=ft([d(\"w3m-network-image\")],Ee);const Oa=.1,xt=2.5,B=7;function Ve(e,t,o){return e===t?!1:(e-t<0?t-e:e-t)<=o+Oa}function Ia(e,t){const o=Array.prototype.slice.call(Pt.create(e,{errorCorrectionLevel:t}).modules.data,0),r=Math.sqrt(o.length);return o.reduce((a,n,l)=>(l%r===0?a.push([n]):a[a.length-1].push(n))&&a,[])}const Wa={generate(e,t,o,r){const a=r===\"light\"?\"#141414\":\"#fff\",n=r===\"light\"?\"#fff\":\"#141414\",l=[],w=Ia(e,\"Q\"),g=t/w.length,I=[{x:0,y:0},{x:1,y:0},{x:0,y:1}];I.forEach(({x:M,y:C})=>{const N=(w.length-B)*g*M,O=(w.length-B)*g*C,R=.32;for(let H=0;H<I.length;H+=1){const ee=g*(B-H*2);l.push(Re`<rect fill=\"${H%2===0?a:n}\" height=\"${ee}\" rx=\"${ee*R}\" ry=\"${ee*R}\" width=\"${ee}\" x=\"${N+g*H}\" y=\"${O+g*H}\">`)}});const Z=Math.floor((o+25)/g),k=w.length/2-Z/2,W=w.length/2+Z/2-1,se=[];w.forEach((M,C)=>{M.forEach((N,O)=>{if(w[C][O]&&!(C<B&&O<B||C>w.length-(B+1)&&O<B||C<B&&O>w.length-(B+1))&&!(C>k&&C<W&&O>k&&O<W)){const R=C*g+g/2,H=O*g+g/2;se.push([R,H])}})});const z={};return se.forEach(([M,C])=>{z[M]?z[M].push(C):z[M]=[C]}),Object.entries(z).map(([M,C])=>{const N=C.filter(O=>C.every(R=>!Ve(O,R,g)));return[Number(M),N]}).forEach(([M,C])=>{C.forEach(N=>{l.push(Re`<circle cx=\"${M}\" cy=\"${N}\" fill=\"${a}\" r=\"${g/xt}\">`)})}),Object.entries(z).filter(([M,C])=>C.length>1).map(([M,C])=>{const N=C.filter(O=>C.some(R=>Ve(O,R,g)));return[Number(M),N]}).map(([M,C])=>{C.sort((O,R)=>O<R?-1:1);const N=[];for(const O of C){const R=N.find(H=>H.some(ee=>Ve(O,ee,g)));R?R.push(O):N.push([O])}return[M,N.map(O=>[O[0],O[O.length-1]])]}).forEach(([M,C])=>{C.forEach(([N,O])=>{l.push(Re`<line x1=\"${M}\" x2=\"${M}\" y1=\"${N}\" y2=\"${O}\" stroke=\"${a}\" stroke-width=\"${g/(xt/2)}\" stroke-linecap=\"round\">`)})}),l}},Ma=u`@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}div{position:relative;user-select:none;display:block;overflow:hidden;width:100%;aspect-ratio:1/1;animation:fadeIn ease .2s}svg:first-child,w3m-wallet-image{position:absolute;top:50%;left:50%;transform:translateY(-50%) translateX(-50%)}w3m-wallet-image{transform:translateY(-50%) translateX(-50%)}w3m-wallet-image{width:25%;height:25%;border-radius:15px}svg:first-child{transform:translateY(-50%) translateX(-50%) scale(.9)}svg:first-child path:first-child{fill:var(--w3m-accent-color)}svg:first-child path:last-child{stroke:var(--w3m-color-overlay)}`;var Ea=Object.defineProperty,ja=Object.getOwnPropertyDescriptor,we=(e,t,o,r)=>{for(var a=r>1?void 0:r?ja(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Ea(t,o,a),a};let K=class extends c{constructor(){super(...arguments),this.uri=\"\",this.size=0,this.logoSrc=\"\",this.walletId=\"\"}svgTemplate(){var t;const o=(t=ne.state.themeMode)!=null?t:\"light\";return Re`<svg height=\"${this.size}\" width=\"${this.size}\">${Wa.generate(this.uri,this.size,this.size/4,o)}</svg>`}render(){return i`<div>${this.walletId||this.logoSrc?i`<w3m-wallet-image walletId=\"${_(this.walletId)}\" src=\"${_(this.logoSrc)}\"></w3m-wallet-image>`:p.WALLET_CONNECT_ICON_COLORED} ${this.svgTemplate()}</div>`}};K.styles=[m.globalCss,Ma],we([h()],K.prototype,\"uri\",2),we([h({type:Number})],K.prototype,\"size\",2),we([h()],K.prototype,\"logoSrc\",2),we([h()],K.prototype,\"walletId\",2),K=we([d(\"w3m-qrcode\")],K);const Pa=u`:host{position:relative;height:28px;width:80%}input{width:100%;height:100%;line-height:28px!important;border-radius:var(--w3m-input-border-radius);font-style:normal;font-family:-apple-system,system-ui,BlinkMacSystemFont,'Segoe UI',Roboto,Ubuntu,'Helvetica Neue',sans-serif;font-feature-settings:'case' on;font-weight:500;font-size:16px;letter-spacing:-.03em;padding:0 10px 0 34px;transition:.2s all ease;color:transparent;position:absolute;background-color:var(--w3m-color-bg-3);box-shadow:inset 0 0 0 1px var(--w3m-color-overlay)}input::placeholder{color:transparent}svg{margin-right:4px}.w3m-placeholder{top:0;left:50%;transform:translateX(-50%);transition:.2s all ease;pointer-events:none;display:flex;align-items:center;justify-content:center;height:100%;width:fit-content;position:relative}input:focus-within+.w3m-placeholder,input:not(:placeholder-shown)+.w3m-placeholder{transform:translateX(10px);left:0}w3m-text{opacity:1;transition:.2s opacity ease}input:focus-within+.w3m-placeholder w3m-text,input:not(:placeholder-shown)+.w3m-placeholder w3m-text{opacity:0}input:focus-within,input:not(:placeholder-shown){color:var(--w3m-color-fg-1)}input:focus-within{box-shadow:inset 0 0 0 1px var(--w3m-accent-color)}path{fill:var(--w3m-color-fg-2)}`;var Aa=Object.defineProperty,La=Object.getOwnPropertyDescriptor,yt=(e,t,o,r)=>{for(var a=r>1?void 0:r?La(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Aa(t,o,a),a};let je=class extends c{constructor(){super(...arguments),this.onChange=()=>null}render(){const e=f.isMobile()?\"Search mobile wallets\":\"Search desktop wallets\";return i`<input type=\"text\" @input=\"${this.onChange}\" placeholder=\"${e}\"><div class=\"w3m-placeholder\">${p.SEARCH_ICON}<w3m-text color=\"secondary\" variant=\"small-thin\">${e}</w3m-text></div>`}};je.styles=[m.globalCss,Pa],yt([h()],je.prototype,\"onChange\",2),je=yt([d(\"w3m-search-input\")],je);const Ta=u`@keyframes rotate{100%{transform:rotate(360deg)}}@keyframes dash{0%{stroke-dasharray:1,150;stroke-dashoffset:0}50%{stroke-dasharray:90,150;stroke-dashoffset:-35}100%{stroke-dasharray:90,150;stroke-dashoffset:-124}}svg{animation:rotate 2s linear infinite;display:flex;justify-content:center;align-items:center}svg circle{stroke-linecap:round;animation:dash 1.5s ease infinite;stroke:var(--w3m-accent-color)}`;var Na=Object.defineProperty,_a=Object.getOwnPropertyDescriptor,Da=(e,t,o,r)=>{for(var a=r>1?void 0:r?_a(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Na(t,o,a),a};let Ue=class extends c{render(){return i`<svg viewBox=\"0 0 50 50\" width=\"24\" height=\"24\"><circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"4\" stroke=\"#fff\"/></svg>`}};Ue.styles=[m.globalCss,Ta],Ue=Da([d(\"w3m-spinner\")],Ue);const Ra=u`span{font-style:normal;font-family:var(--w3m-font-family);font-feature-settings:'tnum' on,'lnum' on,'case' on}.w3m-xsmall-bold{font-family:var(--w3m-text-xsmall-bold-font-family);font-weight:var(--w3m-text-xsmall-bold-weight);font-size:var(--w3m-text-xsmall-bold-size);line-height:var(--w3m-text-xsmall-bold-line-height);letter-spacing:var(--w3m-text-xsmall-bold-letter-spacing);text-transform:var(--w3m-text-xsmall-bold-text-transform)}.w3m-xsmall-regular{font-family:var(--w3m-text-xsmall-regular-font-family);font-weight:var(--w3m-text-xsmall-regular-weight);font-size:var(--w3m-text-xsmall-regular-size);line-height:var(--w3m-text-xsmall-regular-line-height);letter-spacing:var(--w3m-text-xsmall-regular-letter-spacing);text-transform:var(--w3m-text-xsmall-regular-text-transform)}.w3m-small-thin{font-family:var(--w3m-text-small-thin-font-family);font-weight:var(--w3m-text-small-thin-weight);font-size:var(--w3m-text-small-thin-size);line-height:var(--w3m-text-small-thin-line-height);letter-spacing:var(--w3m-text-small-thin-letter-spacing);text-transform:var(--w3m-text-small-thin-text-transform)}.w3m-small-regular{font-family:var(--w3m-text-small-regular-font-family);font-weight:var(--w3m-text-small-regular-weight);font-size:var(--w3m-text-small-regular-size);line-height:var(--w3m-text-small-regular-line-height);letter-spacing:var(--w3m-text-small-regular-letter-spacing);text-transform:var(--w3m-text-small-regular-text-transform)}.w3m-medium-regular{font-family:var(--w3m-text-medium-regular-font-family);font-weight:var(--w3m-text-medium-regular-weight);font-size:var(--w3m-text-medium-regular-size);line-height:var(--w3m-text-medium-regular-line-height);letter-spacing:var(--w3m-text-medium-regular-letter-spacing);text-transform:var(--w3m-text-medium-regular-text-transform)}.w3m-big-bold{font-family:var(--w3m-text-big-bold-font-family);font-weight:var(--w3m-text-big-bold-weight);font-size:var(--w3m-text-big-bold-size);line-height:var(--w3m-text-big-bold-line-height);letter-spacing:var(--w3m-text-big-bold-letter-spacing);text-transform:var(--w3m-text-big-bold-text-transform)}:host(*){color:var(--w3m-color-fg-1)}.w3m-color-primary{color:var(--w3m-color-fg-1)}.w3m-color-secondary{color:var(--w3m-color-fg-2)}.w3m-color-tertiary{color:var(--w3m-color-fg-3)}.w3m-color-inverse{color:var(--w3m-accent-fill-color)}.w3m-color-accnt{color:var(--w3m-accent-color)}.w3m-color-error{color:var(--w3m-error-color)}`;var Za=Object.defineProperty,Ha=Object.getOwnPropertyDescriptor,ze=(e,t,o,r)=>{for(var a=r>1?void 0:r?Ha(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Za(t,o,a),a};let pe=class extends c{constructor(){super(...arguments),this.variant=\"medium-regular\",this.color=\"primary\"}render(){const e={\"w3m-big-bold\":this.variant===\"big-bold\",\"w3m-medium-regular\":this.variant===\"medium-regular\",\"w3m-small-regular\":this.variant===\"small-regular\",\"w3m-small-thin\":this.variant===\"small-thin\",\"w3m-xsmall-regular\":this.variant===\"xsmall-regular\",\"w3m-xsmall-bold\":this.variant===\"xsmall-bold\",\"w3m-color-primary\":this.color===\"primary\",\"w3m-color-secondary\":this.color===\"secondary\",\"w3m-color-tertiary\":this.color===\"tertiary\",\"w3m-color-inverse\":this.color===\"inverse\",\"w3m-color-accnt\":this.color===\"accent\",\"w3m-color-error\":this.color===\"error\"};return i`<span><slot class=\"${D(e)}\"></slot></span>`}};pe.styles=[m.globalCss,Ra],ze([h()],pe.prototype,\"variant\",2),ze([h()],pe.prototype,\"color\",2),pe=ze([d(\"w3m-text\")],pe);const Sa=u`div{overflow:hidden;position:relative;border-radius:50%}div::after{content:'';position:absolute;inset:0;border-radius:50%;border:1px solid var(--w3m-color-overlay)}div img{width:100%;height:100%;object-fit:cover;object-position:center}svg{width:100%;height:100%}#token-placeholder-fill{fill:var(--w3m-color-bg-3)}#token-placeholder-dash{stroke:var(--w3m-color-overlay)}`;var Ba=Object.defineProperty,Va=Object.getOwnPropertyDescriptor,Ct=(e,t,o,r)=>{for(var a=r>1?void 0:r?Va(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Ba(t,o,a),a};let Pe=class extends c{constructor(){super(...arguments),this.symbol=void 0}render(){var e;const t=s.getTokenIcon((e=this.symbol)!=null?e:\"\");return t?i`<div><img src=\"${t}\" alt=\"${this.id}\"></div>`:p.TOKEN_PLACEHOLDER}};Pe.styles=[m.globalCss,Sa],Ct([h()],Pe.prototype,\"symbol\",2),Pe=Ct([d(\"w3m-token-image\")],Pe);const Ua=u`button{transition:all .2s ease;width:100%;height:100%;border-radius:var(--w3m-button-hover-highlight-border-radius);display:flex;align-items:flex-start}button:hover{background-color:var(--w3m-color-overlay)}button>div{width:80px;padding:5px 0;display:flex;flex-direction:column;align-items:center}w3m-text{width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;text-align:center}w3m-wallet-image{height:60px;width:60px;transition:all .2s ease;border-radius:var(--w3m-wallet-icon-border-radius);margin-bottom:5px}.w3m-sublabel{margin-top:2px}`;var za=Object.defineProperty,Ga=Object.getOwnPropertyDescriptor,V=(e,t,o,r)=>{for(var a=r>1?void 0:r?Ga(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&za(t,o,a),a};let S=class extends c{constructor(){super(...arguments),this.onClick=()=>null,this.name=\"\",this.walletId=\"\",this.label=void 0,this.src=void 0,this.installed=!1,this.recent=!1}sublabelTemplate(){return this.recent?i`<w3m-text class=\"w3m-sublabel\" variant=\"xsmall-bold\" color=\"tertiary\">RECENT</w3m-text>`:this.installed?i`<w3m-text class=\"w3m-sublabel\" variant=\"xsmall-bold\" color=\"tertiary\">INSTALLED</w3m-text>`:null}render(){var e;return i`<button @click=\"${this.onClick}\"><div><w3m-wallet-image walletId=\"${this.walletId}\" .src=\"${this.src}\"></w3m-wallet-image><w3m-text variant=\"xsmall-regular\">${(e=this.label)!=null?e:s.getWalletName(this.name,!0)}</w3m-text>${this.sublabelTemplate()}</div></button>`}};S.styles=[m.globalCss,Ua],V([h()],S.prototype,\"onClick\",2),V([h()],S.prototype,\"name\",2),V([h()],S.prototype,\"walletId\",2),V([h()],S.prototype,\"label\",2),V([h()],S.prototype,\"src\",2),V([h()],S.prototype,\"installed\",2),V([h()],S.prototype,\"recent\",2),S=V([d(\"w3m-wallet-button\")],S);const Fa=u`div{overflow:hidden;position:relative;border-radius:inherit;width:100%;height:100%}svg{position:relative;width:100%;height:100%}div::after{content:'';position:absolute;inset:0;border-radius:inherit;border:1px solid var(--w3m-color-overlay)}div img{width:100%;height:100%;object-fit:cover;object-position:center}#wallet-placeholder-fill{fill:var(--w3m-color-bg-3)}#wallet-placeholder-dash{stroke:var(--w3m-color-overlay)}`;var Ka=Object.defineProperty,qa=Object.getOwnPropertyDescriptor,Ge=(e,t,o,r)=>{for(var a=r>1?void 0:r?qa(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Ka(t,o,a),a};let ue=class extends c{constructor(){super(...arguments),this.walletId=void 0,this.src=void 0}render(){var e;const t=s.getWalletId((e=this.walletId)!=null?e:\"\"),o=s.getWalletId(t),r=this.src?this.src:s.getWalletIcon(o);return i`${r.length?i`<div><img src=\"${r}\" alt=\"${this.id}\"></div>`:p.WALLET_PLACEHOLDER}`}};ue.styles=[m.globalCss,Fa],Ge([h()],ue.prototype,\"walletId\",2),Ge([h()],ue.prototype,\"src\",2),ue=Ge([d(\"w3m-wallet-image\")],ue);var Qa=Object.defineProperty,Ya=Object.getOwnPropertyDescriptor,Xa=(e,t,o,r)=>{for(var a=r>1?void 0:r?Ya(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Qa(t,o,a),a};let kt=class extends c{constructor(){super(),this.unwatchAccount=void 0,$.getAccount(),this.fetchProfile(),this.fetchBalance(),this.unwatchAccount=P.client().watchAccount(e=>{const{address:t}=$.state;e.address!==t&&(this.fetchProfile(e.address),this.fetchBalance(e.address)),$.setAddress(e.address),$.setIsConnected(e.isConnected)})}disconnectedCallback(){var e;(e=this.unwatchAccount)==null||e.call(this)}async fetchProfile(e){var t;const o=(t=v.state.chains)==null?void 0:t.find(r=>r.id===1);if(j.state.enableAccountView&&o)try{await $.fetchProfile(s.preloadImage,e)}catch(r){console.error(r),A.openToast(s.getErrorMessage(r),\"error\")}}async fetchBalance(e){if(j.state.enableAccountView)try{await $.fetchBalance(e)}catch(t){console.error(t),A.openToast(s.getErrorMessage(t),\"error\")}}};kt=Xa([d(\"w3m-account-context\")],kt);var Ja=Object.defineProperty,eo=Object.getOwnPropertyDescriptor,$t=(e,t,o,r)=>{for(var a=r>1?void 0:r?eo(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Ja(t,o,a),a};let Fe=class extends c{constructor(){super(),this.preload=!0,this.preloadData()}async loadImages(e){try{e!=null&&e.length&&await Promise.all(e.map(async t=>s.preloadImage(t)))}catch{console.info(\"Unsuccessful attempt at preloading some images\")}}async preloadListings(){var e;if(j.state.enableExplorer){const{standaloneChains:t,chains:o,walletConnectVersion:r}=v.state,a=t?.join(\",\");await Promise.all([E.getPreviewWallets({page:1,entries:10,chains:a,device:f.isMobile()?\"mobile\":\"desktop\",version:r}),E.getRecomendedWallets()]),v.setIsDataLoaded(!0);const{previewWallets:n,recomendedWallets:l}=E.state,w=(e=o?.map(I=>s.getChainIcon(I.id)))!=null?e:[],g=[...n,...l].map(I=>I.image_url.lg);await this.loadImages([...w,...g])}else v.setIsDataLoaded(!0)}async preloadCustomImages(){const e=s.getCustomImageUrls();await this.loadImages(e)}async preloadConnectorImages(){if(!v.state.isStandalone){const e=s.getConnectorImageUrls();await this.loadImages(e)}}async preloadData(){try{this.preload&&(this.preload=!1,await Promise.all([this.preloadListings(),this.preloadCustomImages(),this.preloadConnectorImages()]))}catch(e){console.error(e),A.openToast(\"Failed preloading\",\"error\")}}};$t([y()],Fe.prototype,\"preload\",2),Fe=$t([d(\"w3m-explorer-context\")],Fe);var to=Object.defineProperty,ao=Object.getOwnPropertyDescriptor,Ot=(e,t,o,r)=>{for(var a=r>1?void 0:r?ao(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&to(t,o,a),a};let Ke=class extends c{constructor(){super(),this.activeChainId=void 0,this.unwatchNetwork=void 0;const e=v.getSelectedChain();this.activeChainId=e?.id,this.unwatchNetwork=P.client().watchNetwork(t=>{const o=t.chain;o&&this.activeChainId!==o.id&&(v.setSelectedChain(o),this.activeChainId=o.id,$.resetBalance(),this.fetchBalance())})}disconnectedCallback(){var e;(e=this.unwatchNetwork)==null||e.call(this)}async fetchBalance(){if(j.state.enableAccountView)try{await $.fetchBalance()}catch(e){console.error(e),A.openToast(s.getErrorMessage(e),\"error\")}}};Ot([y()],Ke.prototype,\"activeChainId\",2),Ke=Ot([d(\"w3m-network-context\")],Ke);var oo=Object.defineProperty,ro=Object.getOwnPropertyDescriptor,lo=(e,t,o,r)=>{for(var a=r>1?void 0:r?ro(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&oo(t,o,a),a};let It=class extends c{constructor(){super(),this.unsubscribeTheme=void 0,m.setTheme(),this.unsubscribeTheme=ne.subscribe(m.setTheme)}disconnectedCallback(){var e;(e=this.unsubscribeTheme)==null||e.call(this)}};It=lo([d(\"w3m-theme-context\")],It);const no=u`:host{all:initial}div{display:flex;align-items:center;background-color:var(--w3m-color-overlay);box-shadow:inset 0 0 0 1px var(--w3m-color-overlay);border-radius:var(--w3m-button-border-radius);padding:4px 4px 4px 8px}div button{border-radius:var(--w3m-secondary-button-border-radius);padding:4px 8px;padding-left:4px;height:auto;margin-left:10px;color:var(--w3m-accent-fill-color);background-color:var(--w3m-accent-color)}.w3m-no-avatar{padding-left:8px}button::after{content:'';inset:0;position:absolute;background-color:transparent;border-radius:inherit;transition:background-color .2s ease;border:1px solid var(--w3m-color-overlay)}button:hover::after{background-color:var(--w3m-color-overlay)}w3m-avatar{margin-right:6px}w3m-button-big w3m-avatar{margin-left:-5px}`;var io=Object.defineProperty,so=Object.getOwnPropertyDescriptor,qe=(e,t,o,r)=>{for(var a=r>1?void 0:r?so(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&io(t,o,a),a};let ge=class extends c{constructor(){super(),this.balance=\"hide\",this.avatar=\"show\",s.rejectStandaloneButtonComponent()}onOpen(){const{isStandalone:e}=v.state;e||T.open({route:\"Account\"})}accountTemplate(){const e=this.avatar===\"show\";return i`${e?i`<w3m-avatar></w3m-avatar>`:null}<w3m-address-text></w3m-address-text>`}render(){const e=this.balance===\"show\",t={\"w3m-no-avatar\":this.avatar===\"hide\"};return e?i`<div><w3m-balance></w3m-balance><button @click=\"${this.onOpen}\" class=\"${D(t)}\">${this.accountTemplate()}</button></div>`:i`<w3m-button-big @click=\"${this.onOpen}\">${this.accountTemplate()}</w3m-button-big>`}};ge.styles=[m.globalCss,no],qe([h()],ge.prototype,\"balance\",2),qe([h()],ge.prototype,\"avatar\",2),ge=qe([d(\"w3m-account-button\")],ge);const co=u`button{display:flex;border-radius:var(--w3m-button-hover-highlight-border-radius);flex-direction:column;transition:background-color .2s ease;justify-content:center;padding:5px;width:100px}button:hover{background-color:var(--w3m-color-overlay)}button:disabled{pointer-events:none}w3m-network-image{width:32px;height:32px}w3m-text{margin-top:4px}`;var mo=Object.defineProperty,ho=Object.getOwnPropertyDescriptor,Qe=(e,t,o,r)=>{for(var a=r>1?void 0:r?ho(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&mo(t,o,a),a};let ve=class extends c{constructor(){super(),this.chainId=\"\",this.label=\"\",this.unsubscribeNetwork=void 0;const{selectedChain:e}=v.state;this.chainId=e?.id.toString(),this.label=e?.name,this.unsubscribeNetwork=v.subscribe(({selectedChain:t})=>{this.chainId=t?.id.toString(),this.label=t?.name})}disconnectedCallback(){var e;(e=this.unsubscribeNetwork)==null||e.call(this)}onClick(){x.push(\"SelectNetwork\")}render(){const{chains:e,selectedChain:t}=v.state,o=e?.map(n=>n.id),r=t&&o?.includes(t.id),a=e&&e.length<=1&&r;return i`<button @click=\"${this.onClick}\" ?disabled=\"${a}\"><w3m-network-image chainId=\"${_(this.chainId)}\"></w3m-network-image><w3m-text variant=\"xsmall-regular\" color=\"accent\">${this.label}</w3m-text></button>`}};ve.styles=[m.globalCss,co],Qe([y()],ve.prototype,\"chainId\",2),Qe([y()],ve.prototype,\"label\",2),ve=Qe([d(\"w3m-account-network-button\")],ve);const wo=u`@keyframes slide{0%{background-position:0 0}100%{background-position:200px 0}}w3m-text{padding:1px 0}.w3m-loading{background:linear-gradient(270deg,var(--w3m-color-fg-1) 36.33%,var(--w3m-color-fg-3) 42.07%,var(--w3m-color-fg-1) 83.3%);background-size:200px 100%;background-clip:text;-webkit-background-clip:text;-webkit-text-fill-color:transparent;animation-name:slide;animation-duration:1.5s;animation-iteration-count:infinite;animation-timing-function:linear}`;var po=Object.defineProperty,uo=Object.getOwnPropertyDescriptor,be=(e,t,o,r)=>{for(var a=r>1?void 0:r?uo(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&po(t,o,a),a};let q=class extends c{constructor(){super(),this.address=void 0,this.name=void 0,this.loading=!0,this.variant=\"button\",this.unsubscribeAccount=void 0,this.address=$.state.address,this.name=$.state.profileName,this.loading=!!$.state.profileLoading,this.unsubscribeAccount=$.subscribe(({address:e,profileName:t,profileLoading:o})=>{this.address=e,this.name=t,this.loading=!!o})}disconnectedCallback(){var e;(e=this.unsubscribeAccount)==null||e.call(this)}render(){var e;const t=this.variant===\"button\",o={\"w3m-loading\":this.loading};return i`<w3m-text class=\"${D(o)}\" variant=\"${t?\"medium-regular\":\"big-bold\"}\" color=\"${t?\"inverse\":\"primary\"}\">${this.name?this.name:s.truncate((e=this.address)!=null?e:\"\")}</w3m-text>`}};q.styles=[m.globalCss,wo],be([y()],q.prototype,\"address\",2),be([y()],q.prototype,\"name\",2),be([y()],q.prototype,\"loading\",2),be([h()],q.prototype,\"variant\",2),q=be([d(\"w3m-address-text\")],q);const L={allowedExplorerListings(e){const{explorerAllowList:t,explorerDenyList:o}=j.state;let r=[...e];return t&&(r=r.filter(a=>t.includes(a.id))),o&&(r=r.filter(a=>!o.includes(a.id))),r},walletsWithInjected(e){let t=[...e??[]];if(window.ethereum){const o=s.getWalletName(\"\");t=t.filter(({name:r})=>!s.caseSafeIncludes(r,o))}return t},connectorWallets(){const{isStandalone:e}=v.state;if(e)return[];let t=P.client().getConnectors();return!window.ethereum&&f.isMobile()&&(t=t.filter(({id:o})=>o!==\"injected\"&&o!==ie.metaMask)),t},walletTemplatesWithRecent(e,t){let o=[...e];if(t){const r=s.getRecentWallet();o=o.filter(a=>!a.values.includes(r?.name)),o.splice(1,0,t)}return o},deduplicateExplorerListingsFromConnectors(e){const{isStandalone:t}=v.state;if(t)return e;const o=P.client().getConnectors().map(({name:r})=>r.toUpperCase());return e.filter(({name:r})=>!o.includes(r.toUpperCase()))}},go=u`@keyframes scroll{0%{transform:translate3d(0,0,0)}100%{transform:translate3d(calc(-70px * 10),0,0)}}.w3m-slider{position:relative;overflow-x:hidden;padding:10px 0;margin:0 -20px}.w3m-slider::after,.w3m-slider::before{content:'';height:100%;width:50px;z-index:2;position:absolute;background:linear-gradient(to right,var(--w3m-color-bg-1) 0,transparent 100%);top:0}.w3m-slider::before{left:0}.w3m-slider::after{right:0;transform:rotateZ(180deg)}.w3m-track{display:flex;width:calc(70px * 20);animation:scroll 20s linear infinite}.w3m-action{padding:30px 0 10px 0;display:flex;justify-content:center;align-items:center;flex-direction:column}.w3m-action w3m-button-big:last-child{margin-top:10px}w3m-wallet-image{width:60px;height:60px;margin:0 5px;box-shadow:0 2px 4px -2px rgba(0,0,0,.12),0 4px 4px -2px rgba(0,0,0,.08);border-radius:15px}w3m-button-big{margin:0 5px}`;var vo=Object.defineProperty,bo=Object.getOwnPropertyDescriptor,fo=(e,t,o,r)=>{for(var a=r>1?void 0:r?bo(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&vo(t,o,a),a};let Ye=class extends c{onGoToQrcode(){x.push(\"Qrcode\")}onGoToConnectors(){x.push(\"Connectors\")}onGoToGetWallet(){x.push(\"GetWallet\")}getConnectors(){let e=L.connectorWallets();return window.ethereum||(e=e.filter(({id:t})=>t!==\"injected\"&&t!==ie.metaMask)),e}render(){const{previewWallets:e}=E.state,t=e.length,o=[...e,...e],r=this.getConnectors().length>0;return i`<w3m-modal-header title=\"Connect your wallet\" .onAction=\"${this.onGoToQrcode}\" .actionIcon=\"${p.QRCODE_ICON}\"></w3m-modal-header><w3m-modal-content>${t?i`<div class=\"w3m-slider\"><div class=\"w3m-track\">${o.map(({image_url:a})=>i`<w3m-wallet-image src=\"${a.lg}\"></w3m-wallet-image>`)}</div></div>`:null}<div class=\"w3m-action\"><div><w3m-button-big @click=\"${s.handleAndroidLinking}\"><w3m-text variant=\"medium-normal\" color=\"inverse\">${r?\"WalletConnect\":\"Select Wallet\"}</w3m-text></w3m-button-big>${r?i`<w3m-button-big @click=\"${this.onGoToConnectors}\"><w3m-text variant=\"medium-normal\" color=\"inverse\">Other</w3m-text></w3m-button-big>`:null}</div><w3m-button-big variant=\"secondary\" @click=\"${this.onGoToGetWallet}\"><w3m-text variant=\"medium-regular\" color=\"accent\">I don’t have a wallet</w3m-text></w3m-button-big></div></w3m-modal-content>`}};Ye.styles=[m.globalCss,go],Ye=fo([d(\"w3m-android-wallet-selection\")],Ye);const xo=u`@keyframes slide{0%{transform:translateX(-50px)}100%{transform:translateX(200px)}}.w3m-placeholder,img{border-radius:50%;box-shadow:inset 0 0 0 1px var(--w3m-color-overlay);display:block;position:relative;overflow:hidden!important;background-color:var(--w3m-color-av-1);background-image:radial-gradient(at 66% 77%,var(--w3m-color-av-2) 0,transparent 50%),radial-gradient(at 29% 97%,var(--w3m-color-av-3) 0,transparent 50%),radial-gradient(at 99% 86%,var(--w3m-color-av-4) 0,transparent 50%),radial-gradient(at 29% 88%,var(--w3m-color-av-5) 0,transparent 50%);transform:translateZ(0)}.w3m-loader{width:50px;height:100%;background:linear-gradient(270deg,transparent 0,rgba(255,255,255,.4) 30%,transparent 100%);animation-name:slide;animation-duration:1.5s;transform:translateX(-50px);animation-iteration-count:infinite;animation-timing-function:linear;animation-delay:.55s}.w3m-small{width:24px;height:24px}.w3m-medium{width:60px;height:60px}`;var yo=Object.defineProperty,Co=Object.getOwnPropertyDescriptor,fe=(e,t,o,r)=>{for(var a=r>1?void 0:r?Co(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&yo(t,o,a),a};let Q=class extends c{constructor(){super(),this.address=void 0,this.avatar=void 0,this.loading=!0,this.size=\"small\",this.unsubscribeAccount=void 0,this.address=$.state.address,this.avatar=$.state.profileAvatar,this.loading=!!$.state.profileLoading,this.unsubscribeAccount=$.subscribe(({address:e,profileAvatar:t,profileLoading:o})=>{this.address=e,this.avatar=t,this.loading=!!o})}disconnectedCallback(){var e;(e=this.unsubscribeAccount)==null||e.call(this)}render(){const e={\"w3m-placeholder\":!0,\"w3m-small\":this.size===\"small\",\"w3m-medium\":this.size===\"medium\"};return this.avatar?i`<img class=\"${D(e)}\" src=\"${this.avatar}\">`:this.address?(s.generateAvatarColors(this.address),i`<div class=\"${D(e)}\">${this.loading?i`<div class=\"w3m-loader\"></div>`:null}</div>`):null}};Q.styles=[m.globalCss,xo],fe([y()],Q.prototype,\"address\",2),fe([y()],Q.prototype,\"avatar\",2),fe([y()],Q.prototype,\"loading\",2),fe([h()],Q.prototype,\"size\",2),Q=fe([d(\"w3m-avatar\")],Q);const ko=u`div{display:flex;align-items:center}w3m-token-image{width:28px;height:28px;margin-right:6px}`;var $o=Object.defineProperty,Oo=Object.getOwnPropertyDescriptor,Xe=(e,t,o,r)=>{for(var a=r>1?void 0:r?Oo(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&$o(t,o,a),a};let xe=class extends c{constructor(){var e,t;super(),this.symbol=void 0,this.amount=void 0,this.unsubscribeAccount=void 0,this.symbol=(e=$.state.balance)==null?void 0:e.symbol,this.amount=(t=$.state.balance)==null?void 0:t.amount,this.unsubscribeAccount=$.subscribe(({balance:o})=>{this.symbol=o?.symbol,this.amount=o?.amount})}disconnectedCallback(){var e;(e=this.unsubscribeAccount)==null||e.call(this)}render(){let e=\"_._\";return this.amount===\"0.0\"&&(e=0),this.amount&&this.amount.length>6&&(e=parseFloat(this.amount).toFixed(3)),i`<div><w3m-token-image symbol=\"${_(this.symbol)}\"></w3m-token-image><w3m-text variant=\"medium-regular\" color=\"primary\">${e} ${this.symbol}</w3m-text></div>`}};xe.styles=[m.globalCss,ko],Xe([y()],xe.prototype,\"symbol\",2),Xe([y()],xe.prototype,\"amount\",2),xe=Xe([d(\"w3m-balance\")],xe);const Io=u`:host{all:initial}svg{width:28px;height:20px;margin:-1px 3px 0 -5px}svg path{fill:var(--w3m-accent-fill-color)}button:disabled svg path{fill:var(--w3m-color-fg-3)}w3m-spinner{margin:0 10px 0 0}`;var Wo=Object.defineProperty,Mo=Object.getOwnPropertyDescriptor,Ae=(e,t,o,r)=>{for(var a=r>1?void 0:r?Mo(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Wo(t,o,a),a};let oe=class extends c{constructor(){super(),this.loading=!1,this.label=\"Connect Wallet\",this.icon=\"show\",this.modalUnsub=void 0,s.rejectStandaloneButtonComponent(),this.modalUnsub=T.subscribe(e=>{e.open&&(this.loading=!0),e.open||(this.loading=!1)})}disconnectedCallback(){var e;(e=this.modalUnsub)==null||e.call(this)}iconTemplate(){return this.icon===\"show\"?p.WALLET_CONNECT_ICON:null}onClick(){$.state.isConnected?this.onDisconnect():this.onConnect()}onConnect(){this.loading=!0;const{enableNetworkView:e}=j.state,{chains:t,selectedChain:o}=v.state,r=t?.length&&t.length>1;e||r&&!o?T.open({route:\"SelectNetwork\"}):T.open({route:\"ConnectWallet\"})}onDisconnect(){P.client().disconnect(),$.resetAccount()}render(){return i`<w3m-button-big .disabled=\"${this.loading}\" @click=\"${this.onClick}\">${this.loading?i`<w3m-spinner></w3m-spinner><w3m-text variant=\"medium-regular\" color=\"accent\">Connecting...</w3m-text>`:i`${this.iconTemplate()}<w3m-text variant=\"medium-regular\" color=\"inverse\">${this.label}</w3m-text>`}</w3m-button-big>`}};oe.styles=[m.globalCss,Io],Ae([y()],oe.prototype,\"loading\",2),Ae([h()],oe.prototype,\"label\",2),Ae([h()],oe.prototype,\"icon\",2),oe=Ae([d(\"w3m-connect-button\")],oe);var Eo=Object.defineProperty,jo=Object.getOwnPropertyDescriptor,re=(e,t,o,r)=>{for(var a=r>1?void 0:r?jo(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Eo(t,o,a),a};let Y=class extends c{constructor(){super(),this.isConnected=!1,this.label=\"Connect Wallet\",this.icon=\"show\",this.avatar=\"show\",this.balance=\"hide\",this.unsubscribeAccount=void 0,s.rejectStandaloneButtonComponent(),this.isConnected=$.state.isConnected,this.unsubscribeAccount=$.subscribe(({isConnected:e})=>{this.isConnected=e})}disconnectedCallback(){var e;(e=this.unsubscribeAccount)==null||e.call(this)}render(){const{enableAccountView:e}=j.state,t=_(this.balance),o=_(this.label),r=_(this.icon),a=_(this.avatar);return this.isConnected&&e?i`<w3m-account-button balance=\"${t}\" avatar=\"${a}\"></w3m-account-button>`:i`<w3m-connect-button label=\"${this.isConnected?\"Disconnect\":o}\" icon=\"${r}\"></w3m-connect-button>`}};re([y()],Y.prototype,\"isConnected\",2),re([h()],Y.prototype,\"label\",2),re([h()],Y.prototype,\"icon\",2),re([h()],Y.prototype,\"avatar\",2),re([h()],Y.prototype,\"balance\",2),Y=re([d(\"w3m-core-button\")],Y);const Po=u`.w3m-grid{display:grid;grid-template-columns:repeat(4,80px);justify-content:space-between}.w3m-desktop-title,.w3m-mobile-title{display:flex;align-items:center}.w3m-mobile-title{justify-content:space-between;margin-bottom:20px;margin-top:-10px}.w3m-desktop-title{margin-bottom:10px;padding:0 10px}.w3m-subtitle{display:flex;align-items:center}.w3m-subtitle:last-child path{fill:var(--w3m-color-fg-3)}.w3m-desktop-title svg,.w3m-mobile-title svg{margin-right:6px}.w3m-desktop-title path,.w3m-mobile-title path{fill:var(--w3m-accent-color)}`;var Ao=Object.defineProperty,Lo=Object.getOwnPropertyDescriptor,To=(e,t,o,r)=>{for(var a=r>1?void 0:r?Lo(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Ao(t,o,a),a};let Je=class extends c{onDesktopWallet(e){x.push(\"DesktopConnector\",{DesktopConnector:e})}onInjectedWallet(){x.push(\"InjectedConnector\")}onInstallConnector(){x.push(\"InstallConnector\",{InstallConnector:{id:\"metaMask\",name:\"MetaMask\",isMobile:!0,url:\"https://metamask.io\"}})}async onConnectorWallet(e){window.ethereum?e===\"injected\"||e===ie.metaMask?this.onInjectedWallet():await s.handleConnectorConnection(e):this.onInstallConnector()}desktopWalletsTemplate(){const{desktopWallets:e}=j.state;return e?.map(({id:t,name:o,links:{universal:r,native:a}})=>i`<w3m-wallet-button walletId=\"${t}\" name=\"${o}\" .onClick=\"${()=>this.onDesktopWallet({name:o,walletId:t,universal:r,native:a})}\"></w3m-wallet-button>`)}previewWalletsTemplate(){let e=L.allowedExplorerListings(E.state.previewWallets);return e=L.deduplicateExplorerListingsFromConnectors(e),e.map(({name:t,desktop:{universal:o,native:r},homepage:a,image_url:n,id:l})=>i`<w3m-wallet-button src=\"${n.lg}\" name=\"${t}\" .onClick=\"${()=>this.onDesktopWallet({walletId:l,name:t,native:r,universal:o||a,icon:n.lg})}\"></w3m-wallet-button>`)}connectorWalletsTemplate(){return L.connectorWallets().map(({id:e,name:t,ready:o})=>i`<w3m-wallet-button .installed=\"${[\"injected\",\"metaMask\"].includes(e)&&o}\" name=\"${t}\" walletId=\"${e}\" .onClick=\"${async()=>this.onConnectorWallet(e)}\"></w3m-wallet-button>`)}recentWalletTemplate(){const e=s.getRecentWallet();if(!e)return;const{id:t,name:o,links:r,image:a}=e;return i`<w3m-wallet-button .recent=\"${!0}\" name=\"${o}\" walletId=\"${_(t)}\" src=\"${_(a)}\" .onClick=\"${()=>this.onDesktopWallet({name:o,walletId:t,universal:r?.universal,native:r?.native,icon:a})}\"></w3m-wallet-button>`}render(){const{standaloneUri:e}=v.state,t=this.desktopWalletsTemplate(),o=this.previewWalletsTemplate(),r=this.connectorWalletsTemplate(),a=this.recentWalletTemplate(),n=[...t??[],...o],l=[...r,...n],w=L.walletTemplatesWithRecent(l,a),g=L.walletTemplatesWithRecent(n,a),I=e?g:w,Z=I.length>4;let k=[];Z?k=I.slice(0,3):k=I;const W=!!k.length;return i`<w3m-modal-header border=\"${!0}\" title=\"Connect your wallet\" .onAction=\"${s.handleUriCopy}\" .actionIcon=\"${p.COPY_ICON}\"></w3m-modal-header><w3m-modal-content><div class=\"w3m-mobile-title\"><div class=\"w3m-subtitle\">${p.MOBILE_ICON}<w3m-text variant=\"small-regular\" color=\"accent\">Mobile</w3m-text></div><div class=\"w3m-subtitle\">${p.SCAN_ICON}<w3m-text variant=\"small-regular\" color=\"secondary\">Scan with your wallet</w3m-text></div></div><w3m-walletconnect-qr></w3m-walletconnect-qr></w3m-modal-content>${W?i`<w3m-modal-footer><div class=\"w3m-desktop-title\">${p.DESKTOP_ICON}<w3m-text variant=\"small-regular\" color=\"accent\">Desktop</w3m-text></div><div class=\"w3m-grid\">${k} ${Z?i`<w3m-view-all-wallets-button></w3m-view-all-wallets-button>`:null}</div></w3m-modal-footer>`:null}`}};Je.styles=[m.globalCss,Po],Je=To([d(\"w3m-desktop-wallet-selection\")],Je);const No=u`div{background-color:var(--w3m-color-bg-2);padding:10px 20px 15px 20px;border-top:1px solid var(--w3m-color-bg-3);text-align:center}a{color:var(--w3m-accent-color);text-decoration:none;transition:opacity .2s ease-in-out}a:hover{opacity:.8}`;var _o=Object.defineProperty,Do=Object.getOwnPropertyDescriptor,Ro=(e,t,o,r)=>{for(var a=r>1?void 0:r?Do(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&_o(t,o,a),a};let et=class extends c{render(){const{termsOfServiceUrl:e,privacyPolicyUrl:t}=j.state;return e??t?i`<div><w3m-text variant=\"small-regular\" color=\"secondary\">By connecting your wallet to this app, you agree to the app's<br>${e?i`<a href=\"${e}\" target=\"_blank\" rel=\"noopener noreferrer\">Terms of Service</a>`:null} ${e&&t?\"and\":null} ${t?i`<a href=\"${t}\" target=\"_blank\" rel=\"noopener noreferrer\">Privacy Policy</a>`:null}</w3m-text></div>`:null}};et.styles=[m.globalCss,No],et=Ro([d(\"w3m-legal-notice\")],et);const Zo=u`.w3m-grid{display:grid;grid-template-columns:repeat(4,80px);margin:0 -10px;justify-content:space-between;row-gap:10px}`;var Ho=Object.defineProperty,So=Object.getOwnPropertyDescriptor,Bo=(e,t,o,r)=>{for(var a=r>1?void 0:r?So(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Ho(t,o,a),a};let tt=class extends c{onGoToQrcode(){x.push(\"Qrcode\")}async onConnectorWallet(e){await s.handleConnectorConnection(e)}mobileWalletsTemplate(){const{mobileWallets:e}=j.state,t=L.walletsWithInjected(e);if(t.length)return t.map(({id:o,name:r,links:{universal:a,native:n}})=>i`<w3m-wallet-button name=\"${r}\" walletId=\"${o}\" .onClick=\"${async()=>s.handleMobileLinking({links:{native:n,universal:a},name:r,id:o})}\"></w3m-wallet-button>`)}previewWalletsTemplate(){const{previewWallets:e}=E.state;let t=L.walletsWithInjected(e);return t=L.allowedExplorerListings(t),t=L.deduplicateExplorerListingsFromConnectors(t),t.map(({image_url:o,name:r,mobile:{native:a,universal:n},id:l})=>i`<w3m-wallet-button name=\"${r}\" src=\"${o.lg}\" .onClick=\"${async()=>s.handleMobileLinking({links:{native:a,universal:n},name:r,id:l,image:o.lg})}\"></w3m-wallet-button>`)}connectorWalletsTemplate(){let e=L.connectorWallets();return window.ethereum||(e=e.filter(({id:t})=>t!==\"injected\"&&t!==ie.metaMask)),e.map(({name:t,id:o,ready:r})=>i`<w3m-wallet-button .installed=\"${[\"injected\",\"metaMask\"].includes(o)&&r}\" name=\"${t}\" walletId=\"${o}\" .onClick=\"${async()=>this.onConnectorWallet(o)}\"></w3m-wallet-button>`)}recentWalletTemplate(){const e=s.getRecentWallet();if(!e)return;const{id:t,name:o,links:r,image:a}=e;return i`<w3m-wallet-button .recent=\"${!0}\" name=\"${o}\" walletId=\"${_(t)}\" src=\"${_(a)}\" .onClick=\"${async()=>s.handleMobileLinking({name:o,id:t,links:r,image:a})}\"></w3m-wallet-button>`}render(){const{standaloneUri:e}=v.state,t=this.connectorWalletsTemplate(),o=this.mobileWalletsTemplate(),r=this.previewWalletsTemplate(),a=this.recentWalletTemplate(),n=o??r,l=[...t,...n],w=L.walletTemplatesWithRecent(l,a),g=L.walletTemplatesWithRecent(n,a),I=e?g:w,Z=I.length>8;let k=[];Z?k=I.slice(0,7):k=I;const W=k.slice(0,4),se=k.slice(4,8),z=!!k.length;return i`<w3m-modal-header title=\"Connect your wallet\" .onAction=\"${this.onGoToQrcode}\" .actionIcon=\"${p.QRCODE_ICON}\"></w3m-modal-header>${z?i`<w3m-modal-content><div class=\"w3m-grid\">${W} ${se.length?i`${se} ${Z?i`<w3m-view-all-wallets-button></w3m-view-all-wallets-button>`:null}`:null}</div></w3m-modal-content>`:null}`}};tt.styles=[m.globalCss,Zo],tt=Bo([d(\"w3m-mobile-wallet-selection\")],tt);const Vo=u`:host{all:initial}.w3m-overlay{inset:0;position:fixed;z-index:var(--w3m-z-index);overflow:hidden;display:flex;justify-content:center;align-items:center;background-color:rgba(0,0,0,.3);opacity:0;pointer-events:none}@media(max-height:720px) and (orientation:landscape){.w3m-overlay{overflow:scroll;align-items:flex-start}}.w3m-open{pointer-events:auto}.w3m-container{position:relative;max-width:360px;width:100%;outline:0;border-radius:var(--w3m-background-border-radius) var(--w3m-background-border-radius) var(--w3m-container-border-radius) var(--w3m-container-border-radius);border:1px solid var(--w3m-color-overlay);overflow:hidden}.w3m-card{width:100%;position:relative;border-radius:var(--w3m-container-border-radius);overflow:hidden;box-shadow:0 6px 14px -6px rgba(10,16,31,.12),0 10px 32px -4px rgba(10,16,31,.1),0 0 0 1px var(--w3m-color-overlay);background-color:var(--w3m-color-bg-1);color:var(--w3m-color-fg-1)}@media(max-width:600px){.w3m-container{max-width:440px;border-radius:var(--w3m-background-border-radius) var(--w3m-background-border-radius) 0 0}.w3m-card{border-radius:var(--w3m-container-border-radius) var(--w3m-container-border-radius) 0 0}.w3m-overlay{align-items:flex-end}}@media(max-width:440px){.w3m-container{border:0}}`;var Uo=Object.defineProperty,zo=Object.getOwnPropertyDescriptor,Wt=(e,t,o,r)=>{for(var a=r>1?void 0:r?zo(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Uo(t,o,a),a};let Le=class extends c{constructor(){super(),this.open=!1,this.unsubscribeModal=void 0,this.abortController=void 0,this.unsubscribeModal=T.subscribe(e=>{e.open?this.onOpenModalEvent():this.onCloseModalEvent()})}disconnectedCallback(){var e;(e=this.unsubscribeModal)==null||e.call(this)}get overlayEl(){return s.getShadowRootElement(this,\".w3m-overlay\")}get containerEl(){return s.getShadowRootElement(this,\".w3m-container\")}toggleBodyScroll(e){if(document.querySelector(\"body\"))if(e){const t=document.getElementById(\"w3m-styles\");t?.remove()}else document.head.insertAdjacentHTML(\"beforeend\",'<style id=\"w3m-styles\">html,body{touch-action:none;overflow:hidden;overscroll-behavior:contain;}</style>')}onCloseModal(e){e.target===e.currentTarget&&T.close()}async onOpenModalEvent(){this.toggleBodyScroll(!1);const e=.2;await U(this.containerEl,{y:0},{duration:0}).finished,U(this.overlayEl,{opacity:[0,1]},{duration:.2,delay:e}),U(this.containerEl,s.isMobileAnimation()?{y:[\"50vh\",0]}:{scale:[.98,1]},{scale:{easing:ke({velocity:.4})},y:{easing:ke({mass:.5})},delay:e}),this.addKeyboardEvents(),this.open=!0}async onCloseModalEvent(){this.toggleBodyScroll(!0),this.removeKeyboardEvents(),await Promise.all([U(this.containerEl,s.isMobileAnimation()?{y:[0,\"50vh\"]}:{scale:[1,.98]},{scale:{easing:ke({velocity:0})},y:{easing:ke({mass:.5})}}).finished,U(this.overlayEl,{opacity:[1,0]},{duration:.2}).finished]),this.open=!1}addKeyboardEvents(){this.abortController=new AbortController,window.addEventListener(\"keydown\",e=>{var t;e.key===\"Escape\"?T.close():e.key===\"Tab\"&&((t=e.target)!=null&&t.tagName.includes(\"W3M-\")||this.containerEl.focus())},this.abortController),this.containerEl.focus()}removeKeyboardEvents(){var e;(e=this.abortController)==null||e.abort(),this.abortController=void 0}managedModalContextTemplate(){const{isStandalone:e}=v.state;return e?null:i`<w3m-account-context></w3m-account-context><w3m-network-context></w3m-network-context>`}render(){const e={\"w3m-overlay\":!0,\"w3m-open\":this.open};return i`<w3m-explorer-context></w3m-explorer-context><w3m-theme-context></w3m-theme-context>${this.managedModalContextTemplate()}<div id=\"w3m-modal\" class=\"${D(e)}\" @click=\"${this.onCloseModal}\" role=\"alertdialog\" aria-modal=\"true\"><div class=\"w3m-container\" tabindex=\"0\">${this.open?i`<w3m-modal-backcard></w3m-modal-backcard><div class=\"w3m-card\"><w3m-modal-router></w3m-modal-router><w3m-modal-toast></w3m-modal-toast></div>`:null}</div></div>`}};Le.styles=[m.globalCss,Vo],Wt([y()],Le.prototype,\"open\",2),Le=Wt([d(\"w3m-modal\")],Le);const Go=u`:host{all:initial}w3m-network-image{margin-left:-6px;margin-right:6px;width:28px;height:28px}`;var Fo=Object.defineProperty,Ko=Object.getOwnPropertyDescriptor,Te=(e,t,o,r)=>{for(var a=r>1?void 0:r?Ko(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Fo(t,o,a),a};let le=class extends c{constructor(){super(),this.chainId=\"\",this.label=\"\",this.wrongNetwork=!1,this.unsubscribeNetwork=void 0,s.rejectStandaloneButtonComponent();const{selectedChain:e}=v.state;this.onSetChainData(e),this.unsubscribeNetwork=v.subscribe(({selectedChain:t})=>{this.onSetChainData(t)})}disconnectedCallback(){var e;(e=this.unsubscribeNetwork)==null||e.call(this)}onSetChainData(e){if(e){const{chains:t}=v.state,o=t?.map(r=>r.id);this.chainId=e.id.toString(),this.wrongNetwork=!(o!=null&&o.includes(e.id)),this.label=this.wrongNetwork?\"Wrong Network\":e.name}}onClick(){T.open({route:\"SelectNetwork\"})}render(){var e;const{chains:t}=v.state,o=t&&t.length>1;return i`<w3m-button-big @click=\"${this.onClick}\" ?disabled=\"${!o}\"><w3m-network-image chainId=\"${_(this.chainId)}\"></w3m-network-image><w3m-text variant=\"medium-regular\" color=\"inverse\">${(e=this.label)!=null&&e.length?this.label:\"Select Network\"}</w3m-text></w3m-button-big>`}};le.styles=[m.globalCss,Go],Te([y()],le.prototype,\"chainId\",2),Te([y()],le.prototype,\"label\",2),Te([y()],le.prototype,\"wrongNetwork\",2),le=Te([d(\"w3m-network-switch\")],le);const qo=u`button{display:flex;flex-direction:column;padding:5px 10px;border-radius:var(--w3m-button-hover-highlight-border-radius);transition:background-color .2s ease;height:100%;justify-content:flex-start}.w3m-icons{width:60px;height:60px;display:flex;flex-wrap:wrap;padding:7px;border-radius:var(--w3m-wallet-icon-border-radius);justify-content:space-between;align-items:center;margin-bottom:5px;background-color:var(--w3m-color-bg-2);box-shadow:inset 0 0 0 1px var(--w3m-color-overlay)}button:hover{background-color:var(--w3m-color-overlay)}.w3m-icons img{width:21px;height:21px;object-fit:cover;object-position:center;border-radius:calc(var(--w3m-wallet-icon-border-radius)/ 2);border:1px solid var(--w3m-color-overlay)}.w3m-icons svg{width:21px;height:21px}.w3m-icons img:nth-child(1),.w3m-icons img:nth-child(2),.w3m-icons svg:nth-child(1),.w3m-icons svg:nth-child(2){margin-bottom:4px}w3m-text{width:100%;text-align:center}#wallet-placeholder-fill{fill:var(--w3m-color-bg-3)}#wallet-placeholder-dash{stroke:var(--w3m-color-overlay)}`;var Qo=Object.defineProperty,Yo=Object.getOwnPropertyDescriptor,Xo=(e,t,o,r)=>{for(var a=r>1?void 0:r?Yo(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Qo(t,o,a),a};let at=class extends c{onClick(){x.push(\"WalletExplorer\")}render(){const{previewWallets:e}=E.state,t=s.getCustomWallets(),o=[...e,...t].reverse().slice(0,4);return i`<button @click=\"${this.onClick}\"><div class=\"w3m-icons\">${o.map(r=>{var a;const n=(a=r.image_url)==null?void 0:a.lg;if(n)return i`<img src=\"${n}\">`;const l=s.getWalletId(r.id),w=s.getWalletIcon(l);return w?i`<img src=\"${w}\">`:p.WALLET_PLACEHOLDER})}</div><w3m-text variant=\"xsmall-regular\">View All</w3m-text></button>`}};at.styles=[m.globalCss,qo],at=Xo([d(\"w3m-view-all-wallets-button\")],at);const Jo=u`.w3m-qr-container{width:100%;display:flex;justify-content:center;align-items:center;aspect-ratio:1/1}`;var er=Object.defineProperty,tr=Object.getOwnPropertyDescriptor,Mt=(e,t,o,r)=>{for(var a=r>1?void 0:r?tr(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&er(t,o,a),a};let Ne=class extends c{constructor(){super(),this.uri=\"\",this.createConnectionAndWait()}get overlayEl(){return s.getShadowRootElement(this,\".w3m-qr-container\")}async createConnectionAndWait(e=0){var t;f.removeWalletConnectDeepLink();try{const{standaloneUri:o}=v.state;o?setTimeout(()=>this.uri=o,0):(await P.client().connectWalletConnect(r=>this.uri=r,(t=v.state.selectedChain)==null?void 0:t.id),T.close())}catch(o){console.error(o),A.openToast(\"Connection request declined\",\"error\"),e<2&&this.createConnectionAndWait(e+1)}}render(){return i`<div class=\"w3m-qr-container\">${this.uri?i`<w3m-qrcode size=\"${this.overlayEl.offsetWidth}\" uri=\"${this.uri}\"></w3m-qrcode>`:i`<w3m-spinner></w3m-spinner>`}</div>`}};Ne.styles=[m.globalCss,Jo],Mt([y()],Ne.prototype,\"uri\",2),Ne=Mt([d(\"w3m-walletconnect-qr\")],Ne);const ar=u`.w3m-profile{display:flex;justify-content:space-between;align-items:flex-start;padding-top:20px}.w3m-connection-badge{background-color:var(--w3m-color-bg-2);box-shadow:inset 0 0 0 1px var(--w3m-color-overlay);padding:6px 10px 6px 26px;position:relative;border-radius:28px}.w3m-connection-badge::before{content:'';position:absolute;width:10px;height:10px;left:10px;background-color:var(--w3m-success-color);border-radius:50%;top:50%;margin-top:-5px;box-shadow:0 1px 4px 1px var(--w3m-success-color),inset 0 0 0 1px var(--w3m-color-overlay)}.w3m-footer{display:flex;justify-content:space-between}w3m-address-text{margin-top:10px;display:block}.w3m-balance{border-top:1px solid var(--w3m-color-bg-2);padding:11px 20px}`;var or=Object.defineProperty,rr=Object.getOwnPropertyDescriptor,lr=(e,t,o,r)=>{for(var a=r>1?void 0:r?rr(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&or(t,o,a),a};let ot=class extends c{onDisconnect(){T.close(),P.client().disconnect(),$.resetAccount()}async onCopyAddress(){var e;await navigator.clipboard.writeText((e=$.state.address)!=null?e:\"\"),A.openToast(\"Address copied\",\"success\")}render(){return i`<w3m-modal-content><div class=\"w3m-profile\"><div class=\"w3m-info\"><w3m-avatar size=\"medium\"></w3m-avatar><w3m-address-text variant=\"modal\"></w3m-address-text></div><div class=\"w3m-connection-badge\"><w3m-text variant=\"small-regular\" color=\"secondary\">Connected</w3m-text></div></div></w3m-modal-content><div class=\"w3m-balance\"><w3m-balance></w3m-balance></div><w3m-modal-footer><div class=\"w3m-footer\"><w3m-account-network-button></w3m-account-network-button><w3m-box-button label=\"Copy Address\" .onClick=\"${this.onCopyAddress}\" .icon=\"${p.ACCOUNT_COPY}\"></w3m-box-button><w3m-box-button label=\"Disconnect\" .onClick=\"${this.onDisconnect}\" .icon=\"${p.ACCOUNT_DISCONNECT}\"></w3m-box-button></div></w3m-modal-footer>`}};ot.styles=[m.globalCss,ar],ot=lr([d(\"w3m-account-view\")],ot);var nr=Object.defineProperty,ir=Object.getOwnPropertyDescriptor,sr=(e,t,o,r)=>{for(var a=r>1?void 0:r?ir(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&nr(t,o,a),a};let rt=class extends c{viewTemplate(){return f.isAndroid()?i`<w3m-android-wallet-selection></w3m-android-wallet-selection>`:f.isMobile()?i`<w3m-mobile-wallet-selection></w3m-mobile-wallet-selection>`:i`<w3m-desktop-wallet-selection></w3m-desktop-wallet-selection>`}render(){return i`${this.viewTemplate()}<w3m-legal-notice></w3m-legal-notice>`}};rt.styles=[m.globalCss],rt=sr([d(\"w3m-connect-wallet-view\")],rt);const cr=u`.w3m-grid{display:grid;grid-template-columns:repeat(4,80px);justify-content:space-between}`;var dr=Object.defineProperty,mr=Object.getOwnPropertyDescriptor,hr=(e,t,o,r)=>{for(var a=r>1?void 0:r?mr(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&dr(t,o,a),a};let lt=class extends c{async onConnectorWallet(e){await s.handleConnectorConnection(e)}connectorWalletsTemplate(){let e=L.connectorWallets();return window.ethereum||(e=e.filter(({id:t})=>t!==\"injected\"&&t!==ie.metaMask)),e.map(({name:t,id:o,ready:r})=>i`<w3m-wallet-button .installed=\"${[\"injected\",\"metaMask\"].includes(o)&&r}\" name=\"${t}\" walletId=\"${o}\" .onClick=\"${async()=>this.onConnectorWallet(o)}\"></w3m-wallet-button>`)}render(){const e=this.connectorWalletsTemplate();return i`<w3m-modal-header title=\"Other wallets\"></w3m-modal-header><w3m-modal-content><div class=\"w3m-grid\">${e}</div></w3m-modal-content>`}};lt.styles=[m.globalCss,cr],lt=hr([d(\"w3m-connectors-view\")],lt);const wr=u`.w3m-wrapper{display:flex;align-items:center;justify-content:center;width:100%;aspect-ratio:1/1;flex-direction:column}.w3m-connecting-title{display:flex;align-items:center;justify-content:center;margin-bottom:16px}w3m-spinner{margin-right:10px}w3m-wallet-image{border-radius:15px;width:25%;aspect-ratio:1/1;margin-bottom:20px}.w3m-install-actions{display:flex}.w3m-install-actions w3m-button{margin:0 5px;opacity:1}`;var pr=Object.defineProperty,ur=Object.getOwnPropertyDescriptor,Et=(e,t,o,r)=>{for(var a=r>1?void 0:r?ur(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&pr(t,o,a),a};let _e=class extends c{constructor(){super(),this.uri=\"\",this.createConnectionAndWait()}getRouterData(){var e;const t=(e=x.state.data)==null?void 0:e.DesktopConnector;if(!t)throw new Error(\"Missing router data\");return t}onFormatAndRedirect(e){const{native:t,universal:o,name:r}=this.getRouterData();if(t){const a=f.formatNativeUrl(t,e,r);f.openHref(a,\"_self\")}else if(o){const a=f.formatUniversalUrl(o,e,r);f.openHref(a,\"_blank\")}}async createConnectionAndWait(e=0){var t;f.removeWalletConnectDeepLink();const{standaloneUri:o}=v.state,{name:r,walletId:a,native:n,universal:l,icon:w}=this.getRouterData(),g={name:r,id:a,links:{native:n,universal:l},image:w};if(o)s.setRecentWallet(g),this.onFormatAndRedirect(o);else try{await P.client().connectWalletConnect(I=>{this.uri=I,this.onFormatAndRedirect(I)},(t=v.state.selectedChain)==null?void 0:t.id),s.setRecentWallet(g),T.close()}catch{A.openToast(\"Connection request declined\",\"error\"),e<2&&this.createConnectionAndWait(e+1)}}onConnectWithMobile(){x.push(\"Qrcode\")}onGoToWallet(){const{universal:e,name:t}=this.getRouterData();if(e){const o=f.formatUniversalUrl(e,this.uri,t);f.openHref(o,\"_blank\")}}render(){const{name:e,icon:t,universal:o,walletId:r}=this.getRouterData(),a=s.getWalletName(e);return i`<w3m-modal-header title=\"${a}\"></w3m-modal-header><w3m-modal-content><div class=\"w3m-wrapper\">${t?i`<w3m-wallet-image src=\"${t}\" size=\"lg\"></w3m-wallet-image>`:i`<w3m-wallet-image size=\"lg\" walletid=\"${_(r)}\"></w3m-wallet-image>`}<div class=\"w3m-connecting-title\"><w3m-spinner></w3m-spinner><w3m-text variant=\"big-bold\" color=\"secondary\">${`Continue in ${a}...`}</w3m-text></div><div class=\"w3m-install-actions\"><w3m-button .onClick=\"${async()=>this.createConnectionAndWait()}\" .iconRight=\"${p.RETRY_ICON}\">Retry</w3m-button>${o?i`<w3m-button .onClick=\"${this.onGoToWallet.bind(this)}\" .iconLeft=\"${p.ARROW_UP_RIGHT_ICON}\">Go to Wallet</w3m-button>`:i`<w3m-button .onClick=\"${this.onConnectWithMobile}\" .iconLeft=\"${p.MOBILE_ICON}\">Connect with Mobile</w3m-button>`}</div></div></w3m-modal-content>`}};_e.styles=[m.globalCss,wr],Et([y()],_e.prototype,\"uri\",2),_e=Et([d(\"w3m-desktop-connector-view\")],_e);const gr=u`.w3m-info-text{margin:5px 0 15px;max-width:320px;text-align:center}.w3m-wallet-item{margin:0 -20px 0 0;padding-right:20px;display:flex;align-items:center;border-bottom:1px solid var(--w3m-color-bg-2)}.w3m-wallet-item:last-child{margin-bottom:-20px;border-bottom:0}.w3m-wallet-content{margin-left:20px;height:60px;display:flex;flex:1;align-items:center;justify-content:space-between}.w3m-footer-actions{display:flex;flex-direction:column;align-items:center;padding:20px 0;border-top:1px solid var(--w3m-color-bg-2)}w3m-wallet-image{display:block;width:40px;height:40px;border-radius:10px}`;var vr=Object.defineProperty,br=Object.getOwnPropertyDescriptor,fr=(e,t,o,r)=>{for(var a=r>1?void 0:r?br(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&vr(t,o,a),a};let nt=class extends c{onGet(e){f.openHref(e,\"_blank\")}render(){const{recomendedWallets:e}=E.state,t=s.getCustomWallets().slice(0,6),o=e.length,r=t.length;return i`<w3m-modal-header title=\"Get a wallet\"></w3m-modal-header><w3m-modal-content>${o?e.map(({name:a,image_url:n,homepage:l})=>i`<div class=\"w3m-wallet-item\"><w3m-wallet-image src=\"${n.lg}\"></w3m-wallet-image><div class=\"w3m-wallet-content\"><w3m-text variant=\"medium-regular\">${a}</w3m-text><w3m-button .iconRight=\"${p.ARROW_RIGHT_ICON}\" .onClick=\"${()=>this.onGet(l)}\">Get</w3m-button></div></div>`):null} ${r?t.map(({name:a,id:n,links:l})=>i`<div class=\"w3m-wallet-item\"><w3m-wallet-image walletId=\"${n}\"></w3m-wallet-image><div class=\"w3m-wallet-content\"><w3m-text variant=\"medium-regular\">${a}</w3m-text><w3m-button .iconRight=\"${p.ARROW_RIGHT_ICON}\" .onClick=\"${()=>this.onGet(l.universal)}\">Get</w3m-button></div></div>`):null}</w3m-modal-content><div class=\"w3m-footer-actions\"><w3m-text variant=\"medium-regular\">Not what you're looking for?</w3m-text><w3m-text variant=\"small-thin\" color=\"secondary\" class=\"w3m-info-text\">With hundreds of wallets out there, there's something for everyone</w3m-text><w3m-button .onClick=\"${s.openWalletExplorerUrl}\" .iconRight=\"${p.ARROW_UP_RIGHT_ICON}\">Explore Wallets</w3m-button></div>`}};nt.styles=[m.globalCss,gr],nt=fr([d(\"w3m-get-wallet-view\")],nt);const xr=u`.w3m-footer-actions{display:flex;justify-content:center}.w3m-footer-actions w3m-button{margin:0 5px}.w3m-info-container{display:flex;flex-direction:column;justify-content:center;align-items:center;margin-bottom:20px}.w3m-info-container:last-child{margin-bottom:0}.w3m-info-text{margin-top:5px;text-align:center}.w3m-images svg{margin:0 2px 5px;width:55px;height:55px}.help-img-highlight{stroke:var(--w3m-color-overlay)}`;var yr=Object.defineProperty,Cr=Object.getOwnPropertyDescriptor,kr=(e,t,o,r)=>{for(var a=r>1?void 0:r?Cr(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&yr(t,o,a),a};let it=class extends c{constructor(){super(...arguments),this.learnUrl=\"https://ethereum.org/en/wallets/\"}onGet(){j.state.enableExplorer?x.push(\"GetWallet\"):s.openWalletExplorerUrl()}onLearnMore(){f.openHref(this.learnUrl,\"_blank\")}render(){return i`<w3m-modal-header title=\"What is a wallet?\"></w3m-modal-header><w3m-modal-content><div class=\"w3m-info-container\"><div class=\"w3m-images\">${p.HELP_CHART_IMG} ${p.HELP_PAINTING_IMG} ${p.HELP_ETH_IMG}</div><w3m-text variant=\"medium-regular\">A home for your digital assets</w3m-text><w3m-text variant=\"small-thin\" color=\"secondary\" class=\"w3m-info-text\">A wallet lets you store, send and receive digital assets like cryptocurrencies and NFTs.</w3m-text></div><div class=\"w3m-info-container\"><div class=\"w3m-images\">${p.HELP_KEY_IMG} ${p.HELP_USER_IMG} ${p.HELP_LOCK_IMG}</div><w3m-text variant=\"medium-regular\">One login for all of web3</w3m-text><w3m-text variant=\"small-thin\" color=\"secondary\" class=\"w3m-info-text\">Log in to any app by connecting your wallet. Say goodbye to countless passwords!</w3m-text></div><div class=\"w3m-info-container\"><div class=\"w3m-images\">${p.HELP_COMPAS_IMG} ${p.HELP_NOUN_IMG} ${p.HELP_DAO_IMG}</div><w3m-text variant=\"medium-regular\">Your gateway to a new web</w3m-text><w3m-text variant=\"small-thin\" color=\"secondary\" class=\"w3m-info-text\">With your wallet, you can explore and interact with DeFi, NFTs, DAOs, and much more.</w3m-text></div><div class=\"w3m-footer-actions\"><w3m-button .onClick=\"${this.onGet.bind(this)}\" .iconLeft=\"${p.WALLET_ICON}\">Get a Wallet</w3m-button><w3m-button .onClick=\"${this.onLearnMore.bind(this)}\" .iconRight=\"${p.ARROW_UP_RIGHT_ICON}\">Learn More</w3m-button></div></w3m-modal-content>`}};it.styles=[m.globalCss,xr],it=kr([d(\"w3m-help-view\")],it);const $r=u`.w3m-injected-wrapper{display:flex;align-items:center;justify-content:center;width:100%;aspect-ratio:1/1;flex-direction:column}.w3m-connecting-title{display:flex;align-items:center;justify-content:center;margin-bottom:20px}w3m-spinner{margin-right:10px}w3m-wallet-image{border-radius:15px;width:25%;aspect-ratio:1/1;margin-bottom:20px}w3m-button{opacity:0}.w3m-injected-error w3m-button{opacity:1}`;var Or=Object.defineProperty,Ir=Object.getOwnPropertyDescriptor,st=(e,t,o,r)=>{for(var a=r>1?void 0:r?Ir(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Or(t,o,a),a};let ye=class extends c{constructor(){super(),this.connecting=!0,this.error=!1,this.connector=P.client().getConnectorById(\"injected\"),this.onConnect()}async onConnect(){const{ready:e}=this.connector;e&&(this.error=!1,this.connecting=!0,await s.handleConnectorConnection(\"injected\",()=>{this.error=!0,this.connecting=!1}))}render(){const e=s.getWalletName(this.connector.name),t=s.getWalletId(this.connector.id),o={\"w3m-injected-wrapper\":!0,\"w3m-injected-error\":this.error};return i`<w3m-modal-header title=\"${e}\"></w3m-modal-header><w3m-modal-content><div class=\"${D(o)}\"><w3m-wallet-image walletId=\"${t}\" size=\"lg\"></w3m-wallet-image><div class=\"w3m-connecting-title\">${this.connecting?i`<w3m-spinner></w3m-spinner>`:null}<w3m-text variant=\"big-bold\" color=\"${this.error?\"error\":\"secondary\"}\">${this.error?\"Connection declined\":`Continue in ${e}...`}</w3m-text></div><w3m-button .onClick=\"${this.onConnect.bind(this)}\" .disabled=\"${!this.error}\" .iconRight=\"${p.RETRY_ICON}\">Try Again</w3m-button></div></w3m-modal-content>`}};ye.styles=[m.globalCss,$r],st([y()],ye.prototype,\"connecting\",2),st([y()],ye.prototype,\"error\",2),ye=st([d(\"w3m-injected-connector-view\")],ye);const Wr=u`.w3m-injected-wrapper{display:flex;align-items:center;justify-content:center;width:100%;aspect-ratio:1/1;flex-direction:column}.w3m-connecting-title{display:flex;align-items:center;justify-content:center;margin-bottom:16px}.w3m-install-title{display:flex;align-items:center;justify-content:center;flex-direction:column}.w3m-install-title w3m-text:last-child{margin-top:10px;max-width:240px}.w3m-install-actions{display:flex;margin-top:15px;align-items:center;flex-direction:column}@media(max-width:355px){.w3m-install-actions{flex-direction:column;align-items:center}}w3m-wallet-image{border-radius:15px;width:25%;aspect-ratio:1/1;margin-bottom:20px}w3m-button{opacity:0}.w3m-install-actions w3m-button{margin:5px;opacity:1}.w3m-info-text{text-align:center}`;var Mr=Object.defineProperty,Er=Object.getOwnPropertyDescriptor,jr=(e,t,o,r)=>{for(var a=r>1?void 0:r?Er(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Mr(t,o,a),a};let ct=class extends c{getRouterData(){var e;const t=(e=x.state.data)==null?void 0:e.InstallConnector;if(!t)throw new Error(\"Missing router data\");return t}onInstall(){const{url:e}=this.getRouterData();f.openHref(e,\"_blank\")}onMobile(){const{name:e}=this.getRouterData();x.push(\"ConnectWallet\"),A.openToast(`Scan the code with ${e}`,\"success\")}render(){const{name:e,id:t,isMobile:o}=this.getRouterData();return i`<w3m-modal-header title=\"${e}\"></w3m-modal-header><w3m-modal-content><div class=\"w3m-injected-wrapper\"><w3m-wallet-image walletId=\"${t}\" size=\"lg\"></w3m-wallet-image><div class=\"w3m-install-title\"><w3m-text variant=\"big-bold\">Install ${e}</w3m-text><w3m-text color=\"secondary\" variant=\"small-thin\" class=\"w3m-info-text\">To connect ${e}, install the browser extension.</w3m-text></div><div class=\"w3m-install-actions\"><w3m-button .onClick=\"${this.onInstall.bind(this)}\" .iconLeft=\"${p.ARROW_DOWN_ICON}\">Install Extension</w3m-button>${o?i`<w3m-button .onClick=\"${this.onMobile.bind(this)}\" .iconLeft=\"${p.MOBILE_ICON}\">${e} Mobile</w3m-button>`:null}</div></div></w3m-modal-content>`}};ct.styles=[m.globalCss,Wr],ct=jr([d(\"w3m-install-connector-view\")],ct);var Pr=Object.defineProperty,Ar=Object.getOwnPropertyDescriptor,Lr=(e,t,o,r)=>{for(var a=r>1?void 0:r?Ar(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Pr(t,o,a),a};let dt=class extends c{render(){return i`<w3m-modal-header title=\"Scan the code\" .onAction=\"${s.handleUriCopy}\" .actionIcon=\"${p.COPY_ICON}\"></w3m-modal-header><w3m-modal-content><w3m-walletconnect-qr></w3m-walletconnect-qr></w3m-modal-content>`}};dt.styles=[m.globalCss],dt=Lr([d(\"w3m-qrcode-view\")],dt);const Tr=u`.w3m-grid{display:grid;grid-template-columns:repeat(4,80px);margin:-5px -10px;justify-content:space-between}`;var Nr=Object.defineProperty,_r=Object.getOwnPropertyDescriptor,Dr=(e,t,o,r)=>{for(var a=r>1?void 0:r?_r(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Nr(t,o,a),a};let mt=class extends c{async onSelectChain(e){try{const{selectedChain:t,walletConnectVersion:o}=v.state,{isConnected:r}=$.state;r?t?.id===e.id?x.replace(\"Account\"):o===2?(await P.client().switchNetwork({chainId:e.id}),x.replace(\"Account\")):x.push(\"SwitchNetwork\",{SwitchNetwork:e}):(x.push(\"ConnectWallet\"),v.setSelectedChain(e))}catch(t){console.error(t),A.openToast(s.getErrorMessage(t),\"error\")}}render(){const{chains:e}=v.state;return i`<w3m-modal-header title=\"Select network\"></w3m-modal-header><w3m-modal-content><div class=\"w3m-grid\">${e?.map(t=>i`<w3m-network-button name=\"${t.name}\" chainId=\"${t.id}\" .onClick=\"${async()=>this.onSelectChain(t)}\">${t.name}</w3m-network-button>`)}</div></w3m-modal-content>`}};mt.styles=[m.globalCss,Tr],mt=Dr([d(\"w3m-select-network-view\")],mt);const Rr=u`.w3m-wrapper{display:flex;align-items:center;justify-content:center;width:100%;aspect-ratio:1/1;flex-direction:column}.w3m-connecting-title{display:flex;align-items:center;justify-content:center;margin-bottom:16px}w3m-spinner{margin-right:10px}w3m-network-image{width:96px;height:96px;margin-bottom:20px}w3m-button{opacity:0}.w3m-error w3m-button{opacity:1}`;var Zr=Object.defineProperty,Hr=Object.getOwnPropertyDescriptor,jt=(e,t,o,r)=>{for(var a=r>1?void 0:r?Hr(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Zr(t,o,a),a};let De=class extends c{constructor(){super(),this.error=!1,this.onSwitchNetwork()}getRouterData(){var e;const t=(e=x.state.data)==null?void 0:e.SwitchNetwork;if(!t)throw new Error(\"Missing router data\");return t}async onSwitchNetwork(){try{this.error=!1;const e=this.getRouterData();await P.client().switchNetwork({chainId:e.id}),v.setSelectedChain(e),x.replace(\"Account\")}catch{this.error=!0}}render(){const{id:e,name:t}=this.getRouterData(),o={\"w3m-wrapper\":!0,\"w3m-error\":this.error};return i`<w3m-modal-header title=\"${`Connect to ${t}`}\"></w3m-modal-header><w3m-modal-content><div class=\"${D(o)}\"><w3m-network-image chainId=\"${e}\"></w3m-network-image><div class=\"w3m-connecting-title\">${this.error?null:i`<w3m-spinner></w3m-spinner>`}<w3m-text variant=\"big-bold\" color=\"${this.error?\"error\":\"secondary\"}\">${this.error?\"Connection declined\":\"Approve in your wallet\"}</w3m-text></div><w3m-button .onClick=\"${this.onSwitchNetwork.bind(this)}\" .disabled=\"${!this.error}\" .iconRight=\"${p.RETRY_ICON}\">Try Again</w3m-button></div></w3m-modal-content>`}};De.styles=[m.globalCss,Rr],jt([y()],De.prototype,\"error\",2),De=jt([d(\"w3m-switch-network-view\")],De);const Sr=u`w3m-modal-content{height:clamp(200px,60vh,600px);display:block;overflow:scroll;scrollbar-width:none;position:relative;margin-top:1px}.w3m-grid{display:grid;grid-template-columns:repeat(4,80px);justify-content:space-between;margin:-15px -10px;padding-top:20px}w3m-modal-content::after,w3m-modal-content::before{content:'';position:fixed;pointer-events:none;z-index:1;width:100%;height:20px;opacity:1}w3m-modal-content::before{box-shadow:0 -1px 0 0 var(--w3m-color-bg-1);background:linear-gradient(var(--w3m-color-bg-1),rgba(255,255,255,0))}w3m-modal-content::after{box-shadow:0 1px 0 0 var(--w3m-color-bg-1);background:linear-gradient(rgba(255,255,255,0),var(--w3m-color-bg-1));top:calc(100% - 20px)}w3m-modal-content::-webkit-scrollbar{display:none}.w3m-placeholder-block{display:flex;justify-content:center;align-items:center;height:100px;overflow:hidden}.w3m-empty,.w3m-loading{display:flex}.w3m-loading .w3m-placeholder-block{height:100%}.w3m-end-reached .w3m-placeholder-block{height:0;opacity:0}.w3m-empty .w3m-placeholder-block{opacity:1;height:100%}w3m-wallet-button{margin:calc((100% - 60px)/ 3) 0}`;var Br=Object.defineProperty,Vr=Object.getOwnPropertyDescriptor,Ce=(e,t,o,r)=>{for(var a=r>1?void 0:r?Vr(t,o):t,n=e.length-1,l;n>=0;n--)(l=e[n])&&(a=(r?l(t,o,a):l(a))||a);return r&&a&&Br(t,o,a),a};const ht=40;let X=class extends c{constructor(){super(...arguments),this.loading=!E.state.wallets.listings.length,this.firstFetch=!E.state.wallets.listings.length,this.search=\"\",this.endReached=!1,this.intersectionObserver=void 0,this.searchDebounce=s.debounce(e=>{e.length>=3?(this.firstFetch=!0,this.endReached=!1,this.search=e,E.resetSearch(),this.fetchWallets()):this.search&&(this.search=\"\",this.endReached=this.isLastPage(),E.resetSearch())})}firstUpdated(){this.createPaginationObserver()}disconnectedCallback(){var e;(e=this.intersectionObserver)==null||e.disconnect()}get placeholderEl(){return s.getShadowRootElement(this,\".w3m-placeholder-block\")}createPaginationObserver(){this.intersectionObserver=new IntersectionObserver(([e])=>{e.isIntersecting&&!(this.search&&this.firstFetch)&&this.fetchWallets()}),this.intersectionObserver.observe(this.placeholderEl)}isLastPage(){const{wallets:e,search:t}=E.state,{listings:o,total:r}=this.search?t:e;return r<=ht||o.length>=r}async fetchWallets(){var e;const{wallets:t,search:o}=E.state,r=s.getExtensionWallets(),{listings:a,total:n,page:l}=this.search?o:t;if(!this.endReached&&(this.firstFetch||n>ht&&a.length<n))try{this.loading=!0;const w=(e=v.state.standaloneChains)==null?void 0:e.join(\",\"),{listings:g}=await E.getPaginatedWallets({page:this.firstFetch?1:l+1,entries:ht,device:f.isMobile()?\"mobile\":\"desktop\",search:this.search,version:v.state.walletConnectVersion,chains:w}),I=g.map(({image_url:k})=>k.lg),Z=r.map(({id:k})=>s.getWalletIcon(k));await Promise.all([...I.map(async k=>s.preloadImage(k)),...Z.map(async k=>s.preloadImage(k)),f.wait(300)]),this.endReached=this.isLastPage()}catch(w){console.error(w),A.openToast(s.getErrorMessage(w),\"error\")}finally{this.loading=!1,this.firstFetch=!1}}onConnectCustom({name:e,id:t,links:o}){f.isMobile()?s.handleMobileLinking({links:o,name:e,id:t}):x.push(\"DesktopConnector\",{DesktopConnector:{name:e,walletId:t,universal:o.universal,native:o.native}})}onConnectListing(e){if(f.isMobile()){const{id:t,image_url:o}=e,{native:r,universal:a}=e.mobile;s.handleMobileLinking({links:{native:r,universal:a},name:e.name,id:t,image:o.lg})}else x.push(\"DesktopConnector\",{DesktopConnector:{name:e.name,icon:e.image_url.lg,universal:e.desktop.universal||e.homepage,native:e.desktop.native}})}onConnectExtension(e){s.getWalletId(\"\")===e.id?x.push(\"InjectedConnector\"):x.push(\"InstallConnector\",{InstallConnector:e})}onSearchChange(e){const{value:t}=e.target;this.searchDebounce(t)}render(){const{wallets:e,search:t}=E.state,{isStandalone:o}=v.state;let{listings:r}=this.search?t:e;r=L.allowedExplorerListings(r);const a=this.loading&&!r.length,n=this.search.length>=3;let l=!o&&!f.isMobile()?s.getExtensionWallets():[],w=s.getCustomWallets();n&&(l=l.filter(({name:k})=>s.caseSafeIncludes(k,this.search)),w=w.filter(({name:k})=>s.caseSafeIncludes(k,this.search)));const g=!this.loading&&!r.length&&!l.length,I=Math.max(l.length,r.length),Z={\"w3m-loading\":a,\"w3m-end-reached\":this.endReached||!this.loading,\"w3m-empty\":g};return i`<w3m-modal-header><w3m-search-input .onChange=\"${this.onSearchChange.bind(this)}\"></w3m-search-input></w3m-modal-header><w3m-modal-content class=\"${D(Z)}\"><div class=\"w3m-grid\">${a?null:[...Array(I)].map((k,W)=>i`${w[W]?i`<w3m-wallet-button name=\"${w[W].name}\" walletId=\"${w[W].id}\" .onClick=\"${()=>this.onConnectCustom(w[W])}\"></w3m-wallet-button>`:null} ${l[W]?i`<w3m-wallet-button name=\"${l[W].name}\" walletId=\"${l[W].id}\" .onClick=\"${()=>this.onConnectExtension(l[W])}\"></w3m-wallet-button>`:null} ${r[W]?i`<w3m-wallet-button src=\"${r[W].image_url.lg}\" name=\"${r[W].name}\" walletId=\"${r[W].id}\" .onClick=\"${()=>this.onConnectListing(r[W])}\"></w3m-wallet-button>`:null}`)}</div><div class=\"w3m-placeholder-block\">${g?i`<w3m-text variant=\"big-bold\" color=\"secondary\">No results found</w3m-text>`:null} ${!g&&this.loading?i`<w3m-spinner></w3m-spinner>`:null}</div></w3m-modal-content>`}};X.styles=[m.globalCss,Sr],Ce([y()],X.prototype,\"loading\",2),Ce([y()],X.prototype,\"firstFetch\",2),Ce([y()],X.prototype,\"search\",2),Ce([y()],X.prototype,\"endReached\",2),X=Ce([d(\"w3m-wallet-explorer-view\")],X);export{ge as W3mAccountButton,oe as W3mConnectButton,Y as W3mCoreButton,Le as W3mModal,le as W3mNetworkSwitch};\n//# sourceMappingURL=index.js.map\n"],
  "mappings": "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",
  "names": ["a", "b", "al", "bl", "x", "n", "hi", "lo", "i", "i", "j0", "j1", "j2", "j12", "x0", "x1", "x2", "x12", "i", "nc", "j", "a", "b", "compare", "i", "Poly1305", "t0", "t1", "m", "h0", "h1", "h2", "r0", "r1", "c", "d0", "d1", "d2", "g", "i", "h", "a", "b", "ChaCha20Poly1305", "h", "i", "h", "HMAC", "i", "h", "HKDF", "i", "i", "_", "i", "randomBytes", "i", "SHA256", "i", "K", "w", "v", "p", "a", "b", "c", "d", "g", "h", "j", "u", "t1", "i", "o", "c", "v", "p", "q", "b", "n", "m", "j", "a", "t0", "t1", "t12", "b0", "b1", "b2", "b3", "b4", "b12", "z", "x", "d", "generateKeyPairFromSeed", "generateKeyPair", "sharedKey", "fromMiliseconds", "a", "b", "parse", "k", "x", "o", "ss", "a", "i", "require_browser", "k", "transmit", "level", "ts", "i", "o", "a", "safeJsonParse", "_a", "safeJsonStringify", "value", "self", "i", "_a", "esm_exports", "init_esm", "SHA512", "i", "K", "wl", "hl", "m", "h", "l", "tl", "a", "b", "c", "d", "j", "i", "D", "D2", "X", "Y", "I", "a", "o", "c", "v", "p", "q", "b", "n", "m", "j", "x", "y", "d", "t0", "t1", "t12", "b0", "b1", "b2", "b3", "b4", "b12", "g", "h", "zi", "generateKeyPairFromSeed", "generateKeyPair", "L", "k", "sign", "hs", "verify", "z", "n", "Symbol", "Uint8Array", "DataView", "Map", "Promise", "Set", "WeakMap", "othValue", "import_random", "import_time", "generateKeyPair", "import_events", "init_esm", "esm_default", "Qn", "ln", "ie", "Ai", "_t", "ki", "zs", "oe", "$e", "Ae", "Oi", "Zs", "ke", "_i", "Mi", "Dt", "Ti", "Bi", "Pi", "Si", "n", "y", "V", "st", "Li", "se", "Vs", "i", "o", "a", "h", "p", "v", "w", "b", "I", "c", "Ke", "C", "Ks", "ae", "qe", "Qs", "Ni", "Xs", "Xn", "tr", "B", "re", "Ri", "L", "j", "K", "er", "pt", "ji", "vt", "Oe", "le", "Ui", "Et", "nr", "Wi", "Fi", "rr", "Hi", "ce", "zi", "_e", "Zi", "Vi", "Gi", "M", "E", "k", "$", "ir", "or", "Ki", "dn", "qi", "de", "sr", "hn", "Yi", "ar", "Ji", "lr", "Qi", "cr", "he", "Xi", "un", "pn", "O", "P", "W", "G", "_", "S", "z", "R", "q", "rt", "ue", "dr", "hr", "mn", "ur", "mt", "Me", "gt", "fn", "Te", "gn", "Tt", "vn", "bn", "Be", "yn", "It", "Pe", "pe", "me", "fe", "ge", "xn", "Cn", "En", "Ot", "N", "D", "In", "we", "Se", "Le", "U", "Z", "lt", "Ne", "zt", "A", "T", "it", "ot", "H", "X", "ct", "Re", "kn", "be", "At", "je", "_n", "De", "Mn", "Pt", "Ue", "J", "ye", "We", "Fe", "ht", "He", "ze", "Tn", "xe", "St", "Ze", "_a", "Bn", "Ve", "Ln", "Ge"]
}
