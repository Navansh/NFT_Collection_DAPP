{
  "version": 3,
  "sources": ["../../proxy-compare/src/index.ts", "../../valtio/esm/vanilla.mjs", "../../@web3modal/core/src/controllers/OptionsCtrl.ts", "../../@web3modal/core/src/controllers/ClientCtrl.ts", "../../@web3modal/core/src/controllers/AccountCtrl.ts", "../../@web3modal/core/src/controllers/ConfigCtrl.ts", "../../@web3modal/core/src/utils/ExplorerUtil.ts", "../../@web3modal/core/src/controllers/ExplorerCtrl.ts", "../../@web3modal/core/src/controllers/RouterCtrl.ts", "../../@web3modal/core/src/controllers/ModalCtrl.ts", "../../@web3modal/core/src/controllers/ThemeCtrl.ts", "../../@web3modal/core/src/controllers/ToastCtrl.ts", "../../@web3modal/core/src/utils/CoreUtil.ts", "../../@web3modal/core/src/utils/PolyfillUtil.ts"],
  "sourcesContent": ["// symbols\nconst TRACK_MEMO_SYMBOL = Symbol();\nconst GET_ORIGINAL_SYMBOL = Symbol();\n\n// properties\nconst AFFECTED_PROPERTY = 'a';\nconst FROZEN_PROPERTY = 'f';\nconst PROXY_PROPERTY = 'p';\nconst PROXY_CACHE_PROPERTY = 'c';\nconst NEXT_OBJECT_PROPERTY = 'n';\nconst CHANGED_PROPERTY = 'g';\nconst HAS_KEY_PROPERTY = 'h';\nconst ALL_OWN_KEYS_PROPERTY = 'w';\nconst HAS_OWN_KEY_PROPERTY = 'o';\nconst KEYS_PROPERTY = 'k';\n\n// function to create a new bare proxy\nlet newProxy = <T extends object>(\n  target: T,\n  handler: ProxyHandler<T>,\n) => new Proxy(target, handler);\n\n// get object prototype\nconst getProto = Object.getPrototypeOf;\n\nconst objectsToTrack = new WeakMap<object, boolean>();\n\n// check if obj is a plain object or an array\nconst isObjectToTrack = <T>(obj: T): obj is T extends object ? T : never => (\n  obj && (objectsToTrack.has(obj as unknown as object)\n    ? objectsToTrack.get(obj as unknown as object) as boolean\n    : (getProto(obj) === Object.prototype || getProto(obj) === Array.prototype)\n  )\n);\n\n// check if it is object\nconst isObject = (x: unknown): x is object => (\n  typeof x === 'object' && x !== null\n);\n\n// check if frozen\nconst isFrozen = (obj: object) => (\n  Object.isFrozen(obj) || (\n    // Object.isFrozen() doesn't detect non-writable properties\n    // See: https://github.com/dai-shi/proxy-compare/pull/8\n    Object.values(Object.getOwnPropertyDescriptors(obj)).some(\n      (descriptor) => !descriptor.writable,\n    )\n  )\n);\n\n// copy frozen object\nconst unfrozenCache = new WeakMap<object, object>();\nconst unfreeze = <T extends object>(obj: T): T => {\n  let unfrozen = unfrozenCache.get(obj);\n  if (!unfrozen) {\n    if (Array.isArray(obj)) {\n      // Arrays need a special way to copy\n      unfrozen = Array.from(obj);\n    } else {\n      // For non-array objects, we create a new object keeping the prototype\n      // with changing all configurable options (otherwise, proxies will complain)\n      const descriptors = Object.getOwnPropertyDescriptors(obj);\n      Object.values(descriptors).forEach((desc) => { desc.configurable = true; });\n      unfrozen = Object.create(getProto(obj), descriptors);\n    }\n    unfrozenCache.set(obj, unfrozen as object);\n  }\n  return unfrozen as T;\n};\n\ntype HasKeySet = Set<string | symbol>\ntype HasOwnKeySet = Set<string | symbol>\ntype KeysSet = Set<string | symbol>\ntype Used = {\n  [HAS_KEY_PROPERTY]?: HasKeySet;\n  [ALL_OWN_KEYS_PROPERTY]?: true;\n  [HAS_OWN_KEY_PROPERTY]?: HasOwnKeySet;\n  [KEYS_PROPERTY]?: KeysSet;\n};\ntype Affected = WeakMap<object, Used>;\ntype ProxyHandlerState<T extends object> = {\n  readonly [FROZEN_PROPERTY]: boolean;\n  [PROXY_PROPERTY]?: T;\n  [PROXY_CACHE_PROPERTY]?: ProxyCache<object> | undefined;\n  [AFFECTED_PROPERTY]?: Affected;\n}\ntype ProxyCache<T extends object> = WeakMap<\n  object,\n  readonly [ProxyHandler<T>, ProxyHandlerState<T>]\n>;\n\nconst createProxyHandler = <T extends object>(origObj: T, frozen: boolean) => {\n  const state: ProxyHandlerState<T> = {\n    [FROZEN_PROPERTY]: frozen,\n  };\n  let trackObject = false; // for trackMemo\n  const recordUsage = (\n    type:\n      | typeof HAS_KEY_PROPERTY\n      | typeof ALL_OWN_KEYS_PROPERTY\n      | typeof HAS_OWN_KEY_PROPERTY\n      | typeof KEYS_PROPERTY,\n    key?: string | symbol,\n  ) => {\n    if (!trackObject) {\n      let used = (state[AFFECTED_PROPERTY] as Affected).get(origObj);\n      if (!used) {\n        used = {};\n        (state[AFFECTED_PROPERTY] as Affected).set(origObj, used);\n      }\n      if (type === ALL_OWN_KEYS_PROPERTY) {\n        used[ALL_OWN_KEYS_PROPERTY] = true;\n      } else {\n        let set = used[type];\n        if (!set) {\n          set = new Set();\n          used[type] = set;\n        }\n        set.add(key as string | symbol);\n      }\n    }\n  };\n  const recordObjectAsUsed = () => {\n    trackObject = true;\n    (state[AFFECTED_PROPERTY] as Affected).delete(origObj);\n  };\n  const handler: ProxyHandler<T> = {\n    get(target, key) {\n      if (key === GET_ORIGINAL_SYMBOL) {\n        return origObj;\n      }\n      recordUsage(KEYS_PROPERTY, key);\n      return createProxy(\n        Reflect.get(target, key),\n        (state[AFFECTED_PROPERTY] as Affected),\n        state[PROXY_CACHE_PROPERTY],\n      );\n    },\n    has(target, key) {\n      if (key === TRACK_MEMO_SYMBOL) {\n        recordObjectAsUsed();\n        return true;\n      }\n      recordUsage(HAS_KEY_PROPERTY, key);\n      return Reflect.has(target, key);\n    },\n    getOwnPropertyDescriptor(target, key) {\n      recordUsage(HAS_OWN_KEY_PROPERTY, key);\n      return Reflect.getOwnPropertyDescriptor(target, key);\n    },\n    ownKeys(target) {\n      recordUsage(ALL_OWN_KEYS_PROPERTY);\n      return Reflect.ownKeys(target);\n    },\n  };\n  if (frozen) {\n    handler.set = handler.deleteProperty = () => false;\n  }\n  return [handler, state] as const;\n};\n\nconst getOriginalObject = <T extends object>(obj: T) => (\n  // unwrap proxy\n  (obj as { [GET_ORIGINAL_SYMBOL]?: typeof obj })[GET_ORIGINAL_SYMBOL]\n  // otherwise\n  || obj\n);\n\n/**\n * Create a proxy.\n *\n * This function will create a proxy at top level and proxy nested objects as you access them,\n * in order to keep track of which properties were accessed via get/has proxy handlers:\n *\n * NOTE: Printing of WeakMap is hard to inspect and not very readable\n * for this purpose you can use the `affectedToPathList` helper.\n *\n * @param {object} obj - Object that will be wrapped on the proxy.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that will hold the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [proxyCache] -\n * WeakMap that will help keep referential identity for proxies.\n * @returns {Proxy<object>} - Object wrapped in a proxy.\n *\n * @example\n * import { createProxy } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n * const proxy = createProxy(original, affected);\n *\n * proxy.a // Will mark as used and track its value.\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"a\"\n *\n * proxy.d // Will mark \"d\" as accessed to track and proxy itself ({ e: \"3\" }).\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"d\"\n */\nexport const createProxy = <T>(\n  obj: T,\n  affected: WeakMap<object, unknown>,\n  proxyCache?: WeakMap<object, unknown>,\n): T => {\n  if (!isObjectToTrack(obj)) return obj;\n  const target = getOriginalObject(obj);\n  const frozen = isFrozen(target);\n  let handlerAndState = (\n    proxyCache && (proxyCache as ProxyCache<typeof target>).get(target)\n  );\n  if (!handlerAndState || handlerAndState[1][FROZEN_PROPERTY] !== frozen) {\n    handlerAndState = createProxyHandler<typeof target>(target, frozen);\n    handlerAndState[1][PROXY_PROPERTY] = newProxy(\n      frozen ? unfreeze(target) : target,\n      handlerAndState[0],\n    );\n    if (proxyCache) {\n      proxyCache.set(target, handlerAndState);\n    }\n  }\n  handlerAndState[1][AFFECTED_PROPERTY] = affected as Affected;\n  handlerAndState[1][PROXY_CACHE_PROPERTY] = proxyCache as ProxyCache<object> | undefined;\n  return handlerAndState[1][PROXY_PROPERTY] as typeof target;\n};\n\nconst isAllOwnKeysChanged = (prevObj: object, nextObj: object) => {\n  const prevKeys = Reflect.ownKeys(prevObj);\n  const nextKeys = Reflect.ownKeys(nextObj);\n  return prevKeys.length !== nextKeys.length\n    || prevKeys.some((k, i) => k !== nextKeys[i]);\n};\n\ntype ChangedCache = WeakMap<object, {\n  [NEXT_OBJECT_PROPERTY]: object;\n  [CHANGED_PROPERTY]: boolean;\n}>;\n\n/**\n * Compare changes on objects.\n *\n * This will compare the affected properties on tracked objects inside the proxy\n * to check if there were any changes made to it,\n * by default if no property was accessed on the proxy it will attempt to do a\n * reference equality check for the objects provided (Object.is(a, b)). If you access a property\n * on the proxy, then isChanged will only compare the affected properties.\n *\n * @param {object} prevObj - The previous object to compare.\n * @param {object} nextObj - Object to compare with the previous one.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that holds the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [cache] -\n * WeakMap that holds a cache of the comparisons for better performance with repetitive comparisons,\n * and to avoid infinite loop with circular structures.\n * @returns {boolean} - Boolean indicating if the affected property on the object has changed.\n *\n * @example\n * import { createProxy, isChanged } from 'proxy-compare';\n *\n * const obj = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(obj, affected);\n *\n * proxy.a\n *\n * isChanged(obj, { a: \"1\" }, affected) // false\n *\n * proxy.a = \"2\"\n *\n * isChanged(obj, { a: \"1\" }, affected) // true\n */\n\nexport const isChanged = (\n  prevObj: unknown,\n  nextObj: unknown,\n  affected: WeakMap<object, unknown>,\n  cache?: WeakMap<object, unknown>,\n): boolean => {\n  if (Object.is(prevObj, nextObj)) {\n    return false;\n  }\n  if (!isObject(prevObj) || !isObject(nextObj)) return true;\n  const used = (affected as Affected).get(getOriginalObject(prevObj));\n  if (!used) return true;\n  if (cache) {\n    const hit = (cache as ChangedCache).get(prevObj);\n    if (hit && hit[NEXT_OBJECT_PROPERTY] === nextObj) {\n      return hit[CHANGED_PROPERTY];\n    }\n    // for object with cycles\n    (cache as ChangedCache).set(prevObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: false,\n    });\n  }\n  let changed: boolean | null = null;\n  try {\n    for (const key of used[HAS_KEY_PROPERTY] || []) {\n      changed = Reflect.has(prevObj, key) !== Reflect.has(nextObj, key);\n      if (changed) return changed;\n    }\n    if (used[ALL_OWN_KEYS_PROPERTY] === true) {\n      changed = isAllOwnKeysChanged(prevObj, nextObj);\n      if (changed) return changed;\n    } else {\n      for (const key of used[HAS_OWN_KEY_PROPERTY] || []) {\n        const hasPrev = !!Reflect.getOwnPropertyDescriptor(prevObj, key);\n        const hasNext = !!Reflect.getOwnPropertyDescriptor(nextObj, key);\n        changed = hasPrev !== hasNext;\n        if (changed) return changed;\n      }\n    }\n    for (const key of used[KEYS_PROPERTY] || []) {\n      changed = isChanged(\n        (prevObj as any)[key],\n        (nextObj as any)[key],\n        affected,\n        cache,\n      );\n      if (changed) return changed;\n    }\n    if (changed === null) changed = true;\n    return changed;\n  } finally {\n    if (cache) {\n      cache.set(prevObj, {\n        [NEXT_OBJECT_PROPERTY]: nextObj,\n        [CHANGED_PROPERTY]: changed,\n      });\n    }\n  }\n};\n\n// explicitly track object with memo\nexport const trackMemo = (obj: unknown) => {\n  if (isObjectToTrack(obj)) {\n    return TRACK_MEMO_SYMBOL in obj;\n  }\n  return false;\n};\n\n/**\n * Unwrap proxy to get the original object.\n *\n * Used to retrieve the original object used to create the proxy instance with `createProxy`.\n *\n * @param {Proxy<object>} obj -  The proxy wrapper of the originial object.\n * @returns {object | null} - Return either the unwrapped object if exists.\n *\n * @example\n * import { createProxy, getUntracked } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n * const originalFromProxy = getUntracked(proxy)\n *\n * Object.is(original, originalFromProxy) // true\n * isChanged(original, originalFromProxy, affected) // false\n */\nexport const getUntracked = <T>(obj: T): T | null => {\n  if (isObjectToTrack(obj)) {\n    return (obj as { [GET_ORIGINAL_SYMBOL]?: T })[GET_ORIGINAL_SYMBOL] || null;\n  }\n  return null;\n};\n\n/**\n * Mark object to be tracked.\n *\n * This function marks an object that will be passed into `createProxy`\n * as marked to track or not. By default only Array and Object are marked to track,\n * so this is useful for example to mark a class instance to track or to mark a object\n * to be untracked when creating your proxy.\n *\n * @param obj - Object to mark as tracked or not.\n * @param mark - Boolean indicating whether you want to track this object or not.\n * @returns - No return.\n *\n * @example\n * import { createProxy, markToTrack, isChanged } from 'proxy-compare';\n *\n * const nested = { e: \"3\" }\n *\n * markToTrack(nested, false)\n *\n * const original = { a: \"1\", c: \"2\", d: nested };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n *\n * proxy.d.e\n *\n * isChanged(original, { d: { e: \"3\" } }, affected) // true\n */\nexport const markToTrack = (obj: object, mark = true) => {\n  objectsToTrack.set(obj, mark);\n};\n\n/**\n * Convert `affected` to path list\n *\n * `affected` is a weak map which is not printable.\n * This function is can convert it to printable path list.\n * It's for debugging purpose.\n *\n * @param obj - An object that is used with `createProxy`.\n * @param affected - A weak map that is used with `createProxy`.\n * @param onlyWithValues - An optional boolean to exclude object getters.\n * @returns - An array of paths.\n */\nexport const affectedToPathList = (\n  obj: unknown,\n  affected: WeakMap<object, unknown>,\n  onlyWithValues?: boolean,\n) => {\n  const list: (string | symbol)[][] = [];\n  const seen = new WeakSet();\n  const walk = (x: unknown, path?: (string | symbol)[]) => {\n    if (seen.has(x as object)) {\n      // for object with cycles\n      return;\n    }\n    if (isObject(x)) {\n      seen.add(x);\n    }\n    const used = isObject(x) && (affected as Affected).get(getOriginalObject(x));\n    if (used) {\n      used[HAS_KEY_PROPERTY]?.forEach((key) => {\n        const segment = `:has(${String(key)})`;\n        list.push(path ? [...path, segment] : [segment]);\n      });\n      if (used[ALL_OWN_KEYS_PROPERTY] === true) {\n        const segment = ':ownKeys';\n        list.push(path ? [...path, segment] : [segment]);\n      } else {\n        used[HAS_OWN_KEY_PROPERTY]?.forEach((key) => {\n          const segment = `:hasOwn(${String(key)})`;\n          list.push(path ? [...path, segment] : [segment]);\n        });\n      }\n      used[KEYS_PROPERTY]?.forEach((key) => {\n        if (!onlyWithValues || 'value' in (Object.getOwnPropertyDescriptor(x, key) || {})) {\n          walk((x as any)[key], path ? [...path, key] : [key]);\n        }\n      });\n    } else if (path) {\n      list.push(path);\n    }\n  };\n  walk(obj);\n  return list;\n};\n\n/**\n * replace newProxy function.\n *\n * This can be used if you want to use proxy-polyfill.\n * Note that proxy-polyfill can't polyfill everything.\n * Use it at your own risk.\n */\nexport const replaceNewProxy = (fn: typeof newProxy) => {\n  newProxy = fn;\n};\n", "import { markToTrack, getUntracked } from 'proxy-compare';\n\nconst isObject = (x) => typeof x === \"object\" && x !== null;\nconst proxyStateMap = /* @__PURE__ */ new WeakMap();\nconst refSet = /* @__PURE__ */ new WeakSet();\nconst buildProxyFunction = (objectIs = Object.is, newProxy = (target, handler) => new Proxy(target, handler), canProxy = (x) => isObject(x) && !refSet.has(x) && (Array.isArray(x) || !(Symbol.iterator in x)) && !(x instanceof WeakMap) && !(x instanceof WeakSet) && !(x instanceof Error) && !(x instanceof Number) && !(x instanceof Date) && !(x instanceof String) && !(x instanceof RegExp) && !(x instanceof ArrayBuffer), defaultHandlePromise = (promise) => {\n  switch (promise.status) {\n    case \"fulfilled\":\n      return promise.value;\n    case \"rejected\":\n      throw promise.reason;\n    default:\n      throw promise;\n  }\n}, snapCache = /* @__PURE__ */ new WeakMap(), createSnapshot = (target, version, handlePromise = defaultHandlePromise) => {\n  const cache = snapCache.get(target);\n  if ((cache == null ? void 0 : cache[0]) === version) {\n    return cache[1];\n  }\n  const snap = Array.isArray(target) ? [] : Object.create(Object.getPrototypeOf(target));\n  markToTrack(snap, true);\n  snapCache.set(target, [version, snap]);\n  Reflect.ownKeys(target).forEach((key) => {\n    const value = Reflect.get(target, key);\n    if (refSet.has(value)) {\n      markToTrack(value, false);\n      snap[key] = value;\n    } else if (value instanceof Promise) {\n      Object.defineProperty(snap, key, {\n        get() {\n          return handlePromise(value);\n        }\n      });\n    } else if (proxyStateMap.has(value)) {\n      snap[key] = snapshot(value, handlePromise);\n    } else {\n      snap[key] = value;\n    }\n  });\n  return Object.freeze(snap);\n}, proxyCache = /* @__PURE__ */ new WeakMap(), versionHolder = [1, 1], proxyFunction2 = (initialObject) => {\n  if (!isObject(initialObject)) {\n    throw new Error(\"object required\");\n  }\n  const found = proxyCache.get(initialObject);\n  if (found) {\n    return found;\n  }\n  let version = versionHolder[0];\n  const listeners = /* @__PURE__ */ new Set();\n  const notifyUpdate = (op, nextVersion = ++versionHolder[0]) => {\n    if (version !== nextVersion) {\n      version = nextVersion;\n      listeners.forEach((listener) => listener(op, nextVersion));\n    }\n  };\n  let checkVersion = versionHolder[1];\n  const ensureVersion = (nextCheckVersion = ++versionHolder[1]) => {\n    if (checkVersion !== nextCheckVersion && !listeners.size) {\n      checkVersion = nextCheckVersion;\n      propProxyStates.forEach(([propProxyState]) => {\n        const propVersion = propProxyState[1](nextCheckVersion);\n        if (propVersion > version) {\n          version = propVersion;\n        }\n      });\n    }\n    return version;\n  };\n  const createPropListener = (prop) => (op, nextVersion) => {\n    const newOp = [...op];\n    newOp[1] = [prop, ...newOp[1]];\n    notifyUpdate(newOp, nextVersion);\n  };\n  const propProxyStates = /* @__PURE__ */ new Map();\n  const addPropListener = (prop, propProxyState) => {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\" && propProxyStates.has(prop)) {\n      throw new Error(\"prop listener already exists\");\n    }\n    if (listeners.size) {\n      const remove = propProxyState[3](createPropListener(prop));\n      propProxyStates.set(prop, [propProxyState, remove]);\n    } else {\n      propProxyStates.set(prop, [propProxyState]);\n    }\n  };\n  const removePropListener = (prop) => {\n    var _a;\n    const entry = propProxyStates.get(prop);\n    if (entry) {\n      propProxyStates.delete(prop);\n      (_a = entry[1]) == null ? void 0 : _a.call(entry);\n    }\n  };\n  const addListener = (listener) => {\n    listeners.add(listener);\n    if (listeners.size === 1) {\n      propProxyStates.forEach(([propProxyState, prevRemove], prop) => {\n        if ((import.meta.env && import.meta.env.MODE) !== \"production\" && prevRemove) {\n          throw new Error(\"remove already exists\");\n        }\n        const remove = propProxyState[3](createPropListener(prop));\n        propProxyStates.set(prop, [propProxyState, remove]);\n      });\n    }\n    const removeListener = () => {\n      listeners.delete(listener);\n      if (listeners.size === 0) {\n        propProxyStates.forEach(([propProxyState, remove], prop) => {\n          if (remove) {\n            remove();\n            propProxyStates.set(prop, [propProxyState]);\n          }\n        });\n      }\n    };\n    return removeListener;\n  };\n  const baseObject = Array.isArray(initialObject) ? [] : Object.create(Object.getPrototypeOf(initialObject));\n  const handler = {\n    deleteProperty(target, prop) {\n      const prevValue = Reflect.get(target, prop);\n      removePropListener(prop);\n      const deleted = Reflect.deleteProperty(target, prop);\n      if (deleted) {\n        notifyUpdate([\"delete\", [prop], prevValue]);\n      }\n      return deleted;\n    },\n    set(target, prop, value, receiver) {\n      var _a;\n      const hasPrevValue = Reflect.has(target, prop);\n      const prevValue = Reflect.get(target, prop, receiver);\n      if (hasPrevValue && objectIs(prevValue, value)) {\n        return true;\n      }\n      removePropListener(prop);\n      if (isObject(value)) {\n        value = getUntracked(value) || value;\n      }\n      let nextValue = value;\n      if ((_a = Object.getOwnPropertyDescriptor(target, prop)) == null ? void 0 : _a.set) ; else if (value instanceof Promise) {\n        value.then((v) => {\n          value.status = \"fulfilled\";\n          value.value = v;\n          notifyUpdate([\"resolve\", [prop], v]);\n        }).catch((e) => {\n          value.status = \"rejected\";\n          value.reason = e;\n          notifyUpdate([\"reject\", [prop], e]);\n        });\n      } else {\n        if (!proxyStateMap.has(value) && canProxy(value)) {\n          nextValue = proxy(value);\n        }\n        const childProxyState = !refSet.has(nextValue) && proxyStateMap.get(nextValue);\n        if (childProxyState) {\n          addPropListener(prop, childProxyState);\n        }\n      }\n      Reflect.set(target, prop, nextValue, receiver);\n      notifyUpdate([\"set\", [prop], value, prevValue]);\n      return true;\n    }\n  };\n  const proxyObject = newProxy(baseObject, handler);\n  proxyCache.set(initialObject, proxyObject);\n  const proxyState = [\n    baseObject,\n    ensureVersion,\n    createSnapshot,\n    addListener\n  ];\n  proxyStateMap.set(proxyObject, proxyState);\n  Reflect.ownKeys(initialObject).forEach((key) => {\n    const desc = Object.getOwnPropertyDescriptor(\n      initialObject,\n      key\n    );\n    if (desc.get || desc.set) {\n      Object.defineProperty(baseObject, key, desc);\n    } else {\n      proxyObject[key] = initialObject[key];\n    }\n  });\n  return proxyObject;\n}) => [\n  // public functions\n  proxyFunction2,\n  // shared state\n  proxyStateMap,\n  refSet,\n  // internal things\n  objectIs,\n  newProxy,\n  canProxy,\n  defaultHandlePromise,\n  snapCache,\n  createSnapshot,\n  proxyCache,\n  versionHolder\n];\nconst [proxyFunction] = buildProxyFunction();\nfunction proxy(initialObject = {}) {\n  return proxyFunction(initialObject);\n}\nfunction getVersion(proxyObject) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  return proxyState == null ? void 0 : proxyState[1]();\n}\nfunction subscribe(proxyObject, callback, notifyInSync) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  let promise;\n  const ops = [];\n  const addListener = proxyState[3];\n  let isListenerActive = false;\n  const listener = (op) => {\n    ops.push(op);\n    if (notifyInSync) {\n      callback(ops.splice(0));\n      return;\n    }\n    if (!promise) {\n      promise = Promise.resolve().then(() => {\n        promise = void 0;\n        if (isListenerActive) {\n          callback(ops.splice(0));\n        }\n      });\n    }\n  };\n  const removeListener = addListener(listener);\n  isListenerActive = true;\n  return () => {\n    isListenerActive = false;\n    removeListener();\n  };\n}\nfunction snapshot(proxyObject, handlePromise) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  const [target, ensureVersion, createSnapshot] = proxyState;\n  return createSnapshot(target, ensureVersion(), handlePromise);\n}\nfunction ref(obj) {\n  refSet.add(obj);\n  return obj;\n}\nconst unstable_buildProxyFunction = buildProxyFunction;\n\nexport { getVersion, proxy, ref, snapshot, subscribe, unstable_buildProxyFunction };\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\nimport { ClientCtrl } from './ClientCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  selectedChain: undefined,\n  chains: undefined,\n  standaloneChains: undefined,\n  standaloneUri: undefined,\n  isStandalone: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false,\n  walletConnectVersion: 1\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains?: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setStandaloneChains(standaloneChains: OptionsCtrlState['standaloneChains']) {\n    state.standaloneChains = standaloneChains\n  },\n\n  setStandaloneUri(standaloneUri: OptionsCtrlState['standaloneUri']) {\n    state.standaloneUri = standaloneUri\n  },\n\n  getSelectedChain() {\n    const selectedChain = ClientCtrl.client().getNetwork().chain\n    if (selectedChain) {\n      state.selectedChain = selectedChain\n    }\n\n    return state.selectedChain\n  },\n\n  setSelectedChain(selectedChain: OptionsCtrlState['selectedChain']) {\n    state.selectedChain = selectedChain\n  },\n\n  setIsStandalone(isStandalone: OptionsCtrlState['isStandalone']) {\n    state.isStandalone = isStandalone\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setWalletConnectVersion(walletConnectVersion: OptionsCtrlState['walletConnectVersion']) {\n    state.walletConnectVersion = walletConnectVersion\n  }\n}\n", "import { proxy } from 'valtio/vanilla'\nimport type { ClientCtrlState } from '../types/controllerTypes'\nimport { OptionsCtrl } from './OptionsCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ClientCtrlState>({\n  initialized: false,\n  ethereumClient: undefined\n})\n\n// -- controller -- As function to enable correct ssr handling\nexport const ClientCtrl = {\n  setEthereumClient(ethereumClient: ClientCtrlState['ethereumClient']) {\n    if (!state.initialized && ethereumClient) {\n      state.ethereumClient = ethereumClient\n      OptionsCtrl.setChains(ethereumClient.chains)\n      state.initialized = true\n    }\n  },\n\n  client() {\n    if (state.ethereumClient) {\n      return state.ethereumClient\n    }\n\n    throw new Error('ClientCtrl has no client set')\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { AccountCtrlState } from '../types/controllerTypes'\nimport { ClientCtrl } from './ClientCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<AccountCtrlState>({\n  address: undefined,\n  profileName: undefined,\n  profileAvatar: undefined,\n  profileLoading: false,\n  balanceLoading: false,\n  balance: undefined,\n  isConnected: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const AccountCtrl = {\n  state,\n\n  subscribe(callback: (newState: AccountCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  getAccount() {\n    const account = ClientCtrl.client().getAccount()\n    state.address = account.address\n    state.isConnected = account.isConnected\n  },\n\n  async fetchProfile(\n    preloadAvatarFn: (avatar: string) => Promise<unknown>,\n    profileAddress?: `0x${string}`\n  ) {\n    try {\n      state.profileLoading = true\n      const address = profileAddress ?? state.address\n      const { id } = ClientCtrl.client().getDefaultChain()\n      if (address && id === 1) {\n        const [name, avatar] = await Promise.all([\n          ClientCtrl.client().fetchEnsName({ address, chainId: 1 }),\n          ClientCtrl.client().fetchEnsAvatar({ address, chainId: 1 })\n        ])\n        if (avatar) {\n          await preloadAvatarFn(avatar)\n        }\n        state.profileName = name\n        state.profileAvatar = avatar\n      }\n    } finally {\n      state.profileLoading = false\n    }\n  },\n\n  async fetchBalance(balanceAddress?: `0x${string}`) {\n    try {\n      state.balanceLoading = true\n      const address = balanceAddress ?? state.address\n      if (address) {\n        const balance = await ClientCtrl.client().fetchBalance({ address })\n        state.balance = { amount: balance.formatted, symbol: balance.symbol }\n      }\n    } finally {\n      state.balanceLoading = false\n    }\n  },\n\n  setAddress(address: AccountCtrlState['address']) {\n    state.address = address\n  },\n\n  setIsConnected(isConnected: AccountCtrlState['isConnected']) {\n    state.isConnected = isConnected\n  },\n\n  resetBalance() {\n    state.balance = undefined\n  },\n\n  resetAccount() {\n    state.address = undefined\n    state.isConnected = false\n    state.profileName = undefined\n    state.profileAvatar = undefined\n    state.balance = undefined\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { ClientCtrl } from './ClientCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chainImages: undefined,\n  tokenImages: undefined,\n  standaloneChains: undefined,\n  enableStandaloneMode: false,\n  enableNetworkView: false,\n  enableAccountView: true,\n  enableExplorer: true,\n  defaultChain: undefined,\n  explorerAllowList: undefined,\n  explorerDenyList: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    OptionsCtrl.setStandaloneChains(config.standaloneChains)\n    OptionsCtrl.setIsStandalone(\n      Boolean(config.standaloneChains?.length) || Boolean(config.enableStandaloneMode)\n    )\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n    OptionsCtrl.setWalletConnectVersion(config.walletConnectVersion ?? 1)\n\n    if (config.defaultChain) {\n      OptionsCtrl.setSelectedChain(config.defaultChain)\n    } else if (!OptionsCtrl.state.isStandalone) {\n      const chain = ClientCtrl.client().getDefaultChain()\n      OptionsCtrl.setSelectedChain(chain)\n    }\n\n    Object.assign(state, config)\n  }\n}\n", "import type { ListingResponse, PageParams } from '../types/controllerTypes'\n\nconst EXPLORER_API = 'https://explorer-api.walletconnect.com'\n\nfunction formatParams(params: PageParams) {\n  const stringParams = Object.fromEntries(\n    Object.entries(params)\n      .filter(([_, value]) => typeof value !== 'undefined' && value !== null && value !== '')\n      .map(([key, value]) => [key, value.toString()])\n  )\n\n  return new URLSearchParams(stringParams).toString()\n}\n\nexport const ExplorerUtil = {\n  async fetchWallets(projectId: string, params: PageParams): Promise<ListingResponse> {\n    const urlParams = formatParams(params)\n    const fetcUrl = `${EXPLORER_API}/v3/wallets?projectId=${projectId}&${urlParams}`\n    const fetched = await fetch(fetcUrl)\n\n    return fetched.json()\n  },\n\n  formatImageUrl(projectId: string, imageId: string) {\n    return `${EXPLORER_API}/v3/logo/lg/${imageId}?projectId=${projectId}`\n  }\n}\n", "import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, PageParams } from '../types/controllerTypes'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  previewWallets: [],\n  recomendedWallets: []\n})\n\n// -- helpers ------------------------------------------------------ //\nfunction getProjectId() {\n  const { projectId } = ConfigCtrl.state\n  if (!projectId) {\n    throw new Error('projectId is required to work with explorer api')\n  }\n\n  return projectId\n}\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getPreviewWallets(params: PageParams) {\n    const { listings } = await ExplorerUtil.fetchWallets(getProjectId(), params)\n    state.previewWallets = Object.values(listings)\n\n    return state.previewWallets\n  },\n\n  async getRecomendedWallets() {\n    const { listings } = await ExplorerUtil.fetchWallets(getProjectId(), { page: 1, entries: 6 })\n    state.recomendedWallets = Object.values(listings)\n  },\n\n  async getPaginatedWallets(params: PageParams) {\n    const { page, search } = params\n    const { listings: listingsObj, total } = await ExplorerUtil.fetchWallets(getProjectId(), params)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getImageUrl(imageId: string) {\n    return ExplorerUtil.formatImageUrl(getProjectId(), imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { AccountCtrl } from './AccountCtrl'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri?: string\n  standaloneChains?: string[]\n  route?: 'Account' | 'ConnectWallet' | 'Help' | 'SelectNetwork'\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isStandalone, isUiLoaded, isDataLoaded } = OptionsCtrl.state\n      const { isConnected } = AccountCtrl.state\n      const { enableNetworkView } = ConfigCtrl.state\n\n      if (isStandalone) {\n        OptionsCtrl.setStandaloneUri(options?.uri)\n        OptionsCtrl.setStandaloneChains(options?.standaloneChains)\n        RouterCtrl.replace('ConnectWallet')\n      } else if (options?.route) {\n        RouterCtrl.replace(options.route)\n      } else if (isConnected) {\n        RouterCtrl.replace('Account')\n      } else if (enableNetworkView) {\n        RouterCtrl.replace('SelectNetwork')\n      } else {\n        RouterCtrl.replace('ConnectWallet')\n      }\n\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          if (OptionsCtrl.state.isUiLoaded && OptionsCtrl.state.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    Object.assign(state, theme)\n  }\n}\n", "import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n", "export const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isEmptyObject(value: unknown) {\n    return (\n      Object.getPrototypeOf(value) === Object.prototype &&\n      Object.getOwnPropertyNames(value).length === 0 &&\n      Object.getOwnPropertySymbols(value).length === 0\n    )\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let plainAppUrl = appUrl\n    if (appUrl.endsWith('/')) {\n      plainAppUrl = appUrl.slice(0, -1)\n    }\n    this.setWalletConnectDeepLink(plainAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${plainAppUrl}/wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    const [href] = wcUri.split('?')\n\n    localStorage.setItem(\n      CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n      JSON.stringify({ href, name: 'Android' })\n    )\n  },\n\n  removeWalletConnectDeepLink() {\n    localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n  },\n\n  isNull<T>(value: T | null): value is null {\n    return value === null\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { Buffer } from 'buffer'\n\nif (typeof window !== 'undefined') {\n  if (!window.Buffer) {\n    window.Buffer = Buffer\n  }\n  if (!window.global) {\n    window.global = window\n  }\n  if (!window.process) {\n    // @ts-expect-error minimal process\n    window.process = { env: {} }\n  }\n}\n"],
  "mappings": "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",
  "names": ["Symbol", "getProto", "Object", "getPrototypeOf", "objectsToTrack", "WeakMap", "obj", "has", "get", "prototype", "Array", "obj", "isObjectToTrack", "GET_ORIGINAL_SYMBOL", "mark", "objectsToTrack", "set", "e", "state", "proxy", "OptionsCtrl", "callback", "valtioSub", "chains", "standaloneChains", "standaloneUri", "selectedChain", "ClientCtrl", "isStandalone", "isCustomDesktop", "isCustomMobile", "isDataLoaded", "isUiLoaded", "walletConnectVersion", "ethereumClient", "AccountCtrl", "account", "preloadAvatarFn", "profileAddress", "address", "id", "name", "avatar", "balanceAddress", "balance", "isConnected", "ConfigCtrl", "config", "_a", "_b", "_c", "_d", "chain", "EXPLORER_API", "formatParams", "params", "stringParams", "_", "value", "key", "ExplorerUtil", "projectId", "urlParams", "fetcUrl", "imageId", "getProjectId", "ExplorerCtrl", "listings", "page", "search", "listingsObj", "total", "type", "RouterCtrl", "view", "data", "last", "ModalCtrl", "options", "resolve", "enableNetworkView", "interval", "isDarkMode", "ThemeCtrl", "theme", "ToastCtrl", "message", "variant", "CoreUtil", "url", "appUrl", "wcUri", "safeAppUrl", "encodedWcUrl", "plainAppUrl", "miliseconds", "href", "target", "Buffer"]
}
